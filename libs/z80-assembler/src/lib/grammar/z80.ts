/* AutoGenerated Code, changes may be overwritten
* INPUT GRAMMAR:
* ---
* import {
*     r_bits,
*     dd_bits,
*     qq_bits,
*     ss_bits,
*     pp_bits,
*     rr_bits,
*     cc_bits,
*     jj_bits,
*     p_bits,
*     imode
* } from "./LowLevel";
* import {
*     EvalFunc,
*     Address,
*     Bytes,
*     binaryOperation,
*     binaryOperations,
*     unaryOperation,
*     unaryOperations,
*     operatorOr,
*     operatorXor,
*     operatorAnd,
*     operatorLeftShift,
*     operatorRightShift,
*     operatorAdd,
*     operatorSub,
*     operatorMul,
*     operatorDiv,
*     operatorModulo,
*     operatorPlus,
*     operatorNeg,
*     operatorInvert,
*     operatorIdentity,
*     value16LE,
*     value8,
*     svalue8,
*     jrOffset,
*     jrRelativeOffset,
*     parseNumber,
*     parseSimpleChar,
*     parseSimpleEscape,
*     parseOctalEscape,
*     parseHexadecimalEscape,
*     dataBytes,
*     dataBytesZero,
*     dataWords,
*     dataBlock,
*     parseZX81String
* } from '../compiler/Ast';
* import {getLabelValue} from '../compiler/Labels';
* import {setOutputName, setDeviceName, includeFile} from '../compiler/Compiler';
* ---
* start := program=Program $
* r := 'a' | 'b' | 'c' | 'd' | 'e' | 'h' | 'l'
* dd := 'bc' | 'de' | 'hl' | 'sp'
* ss := dd
* qq := 'bc' | 'de' | 'hl' | 'af'
* pp := 'bc' | 'de' | 'ix' | 'sp'
* rr := 'bc' | 'de' | 'iy' | 'sp'
* // binary before hexadecimal because 0b is ambiguous
* n :=
*     pos=@ binary=binary               .value = number { return parseNumber(pos, binary.raw, 2, 1); } |
*     pos=@ hexadecimal=hexadecimal     .value = number { return parseNumber(pos, hexadecimal.raw, 16, 1); } |
*     pos=@ octal=octal                 .value = number { return parseNumber(pos, octal.raw, 8, 1); } |
*     pos=@ decimal=decimal             .value = number { return parseNumber(pos, decimal.raw, 10, 1); }
* nn :=
*     pos=@ binary=binary               .value = number { return parseNumber(pos, binary.raw, 2, 2); } |
*     pos=@ hexadecimal=hexadecimal     .value = number { return parseNumber(pos, hexadecimal.raw, 16, 2); } |
*     pos=@ octal=octal                 .value = number { return parseNumber(pos, octal.raw, 8, 2); } |
*     pos=@ decimal=decimal             .value = number { return parseNumber(pos, decimal.raw, 10, 2); }
* decimal :=
*     raw='[0-9]+' 'd'?
* binary :=
*     {'0b' | '%'} raw='[0-1]+'
* octal :=
*     {'0q' | '0o'} raw='[0-7]+' |
*     raw='[0-7]+' {'q' | 'o'}
* hexadecimal :=
*     {'0x' | '\$' | '#'} raw='[0-9a-f]+' |
*     raw='[0-9][0-9a-f]?' 'h'
* d := n
* e := n
* p := n
* b := raw='[0-7]'    .value = number { return parseInt(raw); }
* cc := 'nz' | 'z' | 'nc' | 'c' | 'po' | 'pe' | 'p' | 'm' | 's'
* jj := 'c'  | 'nc' | 'z' | 'nz'
* __   := '[ \t]+'                 // Mandatory space
* _    := '[ \t]*'                 // Optional space
* _eos := '[ \t]*(;|\r\n|\n|//)'   // End of statement
* Program :=
*     Line*
* Line :=
*     LineEqual | LineStatement
* Equal :=
*     '\.?equ|eq'
* LineEqual :=
*     label=LabelDeclaration _ Equal __ e=Expression _ comment=Comment? '\r\n|\n'
* LineStatement :=
*     label=LabelDeclaration? _ statement=Statement? _ comment=Comment? '\r\n|\n'
* Statement :=
*     instruction=Instruction
*     .bytes = Bytes { return instruction.bytes; }
*     .address = Address { return null; } |
*     directive=Directive
*     .bytes = Bytes { return directive.bytes; }
*     .address = Address { return directive.address; }
* Directive :=
*     data=DataDirective
*     .bytes = Bytes { return data.bytes; }
*     .address = Address { return null; } |
*     origin=OriginDirective
*     .bytes = Bytes { return []; }
*     .address = Address { return origin.address.value; } |
*     directive=IncludeDirective
*     .bytes = Bytes { return directive.bytes; }
*     .address = Address { return null; } |
*     directive=OutputDirective
*     .bytes = Bytes { return []; }
*     .address = Address { return null; } |
*     directive=DeviceDirective
*     .bytes = Bytes { return []; }
*     .address = Address { return null; }
* ForbiddenNames :=
*     'block|.\?equ|\.?org|\.?include|\.?output|\.?device' |
*     'byte|call|cpdr|cpir|defb|defm|defs|defw|djnz|eq|halt|indr|inir|lddr|ldir|otdr|otir|outd|outi|push|reti|retn|rlca|rrca|word' |
*     'adc|add|and|bit|ccf|cpd|cpi|cpl|daa|dec|exx|inc|ind|ini|ldd|ldi|neg|nop|org|out|pop|res|ret|rla' |
*     'rlc|rld|rra|rrc|rrd|rst|sbc|scf|set|sla|sra|srl|sub|xor' |
*     'cp|db|di|dm|ds|dw|dz|ei|eq|ex|im|in|jp|jr|ld|or|rl|rr'
* ForbiddenLabel :=
*     ForbiddenNames '[ \t:\r\n]'
* Label :=
*     !ForbiddenLabel pos=@ name='[a-z_][a-z0-9_!\?#@\.]*'
* LabelDeclaration :=
*     !ForbiddenLabel pos=@ name='[a-z_][a-z0-9_!\?#@\.]*' '\:'?
* // Top level expressions can't start with a parenthesis, otherwise it is ambiguous with dereferences
* // like LD HL, (0)
* Expression :=
*     !'\(' e1=BitwiseOrExpression
*     .eval = EvalFunc { return e1.eval; }
* // Precedences: unary, multiplicative, additive, shift, and, xor, or
* BitwiseOrExpression :=
*     left=BitwiseXOrExpression right={_ '\|' _ e=BitwiseOrExpression}*
*     .eval = EvalFunc { return binaryOperation(left, right, operatorOr); }
* BitwiseXOrExpression :=
*     left=BitwiseAndExpression right={_ '\^' _ e=BitwiseXOrExpression}*
*     .eval = EvalFunc { return binaryOperation(left, right, operatorXor); }
* BitwiseAndExpression :=
*     left=ShiftExpression right={_ '\&' _ e=BitwiseAndExpression}*
*     .eval = EvalFunc { return binaryOperation(left, right, operatorAnd); }
* ShiftExpression :=
*     left=AdditiveExpression right={_ op={'<<' | '>>'} _ e=ShiftExpression}*
*     .eval = EvalFunc { return binaryOperations(left, right, {'<<': operatorLeftShift, '>>': operatorRightShift}); }
* AdditiveExpression :=
*     left=MultiplicativeExpression right={_ op={'\+' | '\-'} _ e=AdditiveExpression}*
*     .eval = EvalFunc { return binaryOperations(left, right, {'+': operatorAdd, '-': operatorSub}); }
* MultiplicativeExpression :=
*     left=UnaryExpression right={_ op={'\*' | '%' | '/'} _ e=MultiplicativeExpression}*
*     .eval = EvalFunc { return binaryOperations(left, right, {'*': operatorMul, '/': operatorDiv, '%': operatorModulo} ); }
* UnaryExpression :=
*     op={'~' | '\+' | '\-'} _ e=PrimaryExpression
*     .eval = EvalFunc { return unaryOperations(e, op, {'~': operatorInvert, '+': operatorPlus, '-': operatorNeg} ); } |
*     e=PrimaryExpression
*     .eval = EvalFunc { return unaryOperation(e, operatorIdentity); }
* PrimaryExpression :=
*     nn=nn
*     .eval = EvalFunc { return () => nn.value; } |
*     pos=@ label=Label
*     .eval = EvalFunc { return () => getLabelValue(label.name); } |
*     '\(' e=BitwiseOrExpression '\)'
*     .eval = EvalFunc { return unaryOperation(e, operatorIdentity); }
* Reg8 :=
*     reg=r &'[^a-z0-9_!\?#@\.]'
* Instruction :=
*     Load8Instruction |
*     Load16Instruction |
*     ExchangeInstruction |
*     BlockInstruction |
*     ArithmeticLogic8Instruction |
*     IncrementDecrement8Instruction |
*     GeneralPurposeArithmeticInstruction |
*     ArithmeticLogic16Instruction |
*     RotateShiftInstruction |
*     BitManipulationInstruction |
*     JumpInstruction |
*     CallInstruction |
*     ReturnInstruction |
*     InputInstruction |
*     OutputInstruction |
*     CpuControlGroupInstruction
* Load8Instruction :=
*     // LD r, r' &_eos
*     'ld' __ r0=Reg8 _ ',' _ r1=Reg8
*     .bytes = Bytes { return [0b01000000 | r_bits(r0.reg, 3) | r_bits(r1.reg)]; } |
*     // LD r, (HL)
*     'ld' __ r=r _ ',' _ '\(' 'hl' '\)' &_eos
*     .bytes = Bytes { return [0b01000110 | r_bits(r, 3)]; } |
*     // LD r, (IX+d)
*     'ld' __ r=r _ ',' _ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0b01000110 | r_bits(r, 3), svalue8(pos, s, d)]; } |
*     // LD r, (IY+d)
*     'ld' __ r=r _ ',' _ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0b01000110 | r_bits(r, 3), svalue8(pos, s, d)]; } |
*     // LD (HL), r
*     'ld' __ '\(' _ 'hl' _ '\)' _ ',' _ r=r &_eos
*     .bytes = Bytes { return [0b01110000 | r_bits(r)]; } |
*     // LD (IX+d), r
*     'ld' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' _ ',' _ r=r &_eos
*     .bytes = Bytes { return [0xDD, 0b01110000 | r_bits(r), svalue8(pos, s, d)]; } |
*     // LD (IY+d), r
*     'ld' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' _ ',' _ r=r &_eos
*     .bytes = Bytes { return [0xFD, 0b01110000 | r_bits(r), svalue8(pos, s, d)]; } |
*     // LD (HL), n
*     'ld' __ '\(' 'hl' '\)' _ ',' _ pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0x36, value8(pos, n)]; } |
*     // LD (IX+d), n
*     'ld' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos0=@ d=Expression _ '\)' _ ',' _ pos1=@ n=Expression &_eos
*     .bytes = Bytes { return [0xDD, 0x36, svalue8(pos0, s, d), value8(pos1, n)]; } |
*     // LD (IY+d), n
*     'ld' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos0=@ d=Expression _ '\)' _ ',' _ pos1=@ n=Expression &_eos
*     .bytes = Bytes { return [0xFD, 0x36, svalue8(pos0, s, d), value8(pos1, n)]; } |
*     // LD A, (BC)
*     'ld' __ 'a' _ ',' _ '\(' _ 'bc' _ '\)' &_eos
*     .bytes = Bytes { return [0x0A]; } |
*     // LD A, (DE)
*     'ld' __ 'a' _ ',' _ '\(' _ 'de' _ '\)' &_eos
*     .bytes = Bytes { return [0x1A]; } |
*     // LD A, (nn)
*     'ld' __ 'a' _ ',' _ '\(' _ pos=@ ee=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0x3A, value16LE(pos, ee)]; } |
*     // LD (BC), A
*     'ld' __ '\(' _ 'bc' _ '\)' _ ',' _ 'a' &_eos
*     .bytes = Bytes { return [0x02]; } |
*     // LD (DE), A
*     'ld' __ '\(' _ 'de' _ '\)' _ ',' _ 'a' &_eos
*     .bytes = Bytes { return [0x12]; } |
*     // LD (nn), A
*     'ld' __ '\(' _ pos=@ ee=Expression _ '\)' _ ',' _ 'a' &_eos
*     .bytes = Bytes { return [0x32, value16LE(pos, ee)]; } |
*     // LD A, I
*     'ld' __ 'a' _ ',' _ 'i' &_eos
*     .bytes = Bytes { return [0xED, 0x57]; } |
*     // LD A, R
*     'ld' __ 'a' _ ',' _ 'r' &_eos
*     .bytes = Bytes { return [0xED, 0x5F]; } |
*     // LD I, A
*     'ld' __ 'i' _ ',' _ 'a' &_eos
*     .bytes = Bytes { return [0xED, 0x47]; } |
*     // LD R, A
*     'ld' __ 'r' _ ',' _ 'a' &_eos
*     .bytes = Bytes { return [0xED, 0x4F]; } |
*     // Have to be after the others to avoid ambiguity on n=Expression
*     // LD r, n
*     // Have to be before LD r,r' because it is ambiguous
*     'ld' __ r=Reg8 _ ',' _ pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0b00000110 | r_bits(r.reg, 3), value8(pos, n)]; }
* Load16Instruction :=
*     // LD IX, nn
*     'ld' __ 'ix' _ ',' _ pos=@ ee=Expression &_eos
*     .bytes = Bytes { return [0xDD, 0x21, value16LE(pos, ee)]; } |
*     // LD IY, nn
*     'ld' __ 'iy' _ ',' _ pos=@ ee=Expression &_eos
*     .bytes = Bytes { return [0xFD, 0x21, value16LE(pos, ee)]; } |
*     // LD HL, (nn)
*     'ld' __ 'hl' _ ',' _ '\(' _ pos=@ ee=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0x2A, value16LE(pos, ee)]; } |
*     // LD dd, (nn)
*     'ld' __ dd=dd _ ',' _ '\(' _ pos=@ ee=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xED, 0b01001011 | dd_bits(dd, 4), value16LE(pos, ee)]; } |
*     // LD IX, (nn)
*     'ld' __ 'ix' _ ',' _ '\(' _ pos=@ ee=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0x2A, value16LE(pos, ee)]; } |
*     // LD IY, (nn)
*     'ld' __ 'iy' _ ',' _ '\(' _ pos=@ ee=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0x2A, value16LE(pos, ee)]; } |
*     // LD (nn), HL
*     'ld' __ '\(' _ pos=@ ee=Expression _ '\)' _ ',' _ 'hl' &_eos
*     .bytes = Bytes { return [0x22, value16LE(pos, ee)]; } |
*     // LD (nn), dd
*     'ld' __ '\(' _ pos=@ ee=Expression _ '\)' _ ',' _ dd=dd &_eos
*     .bytes = Bytes { return [0xED, 0b01000011 | dd_bits(dd, 4), value16LE(pos, ee)]; } |
*     // LD (nn), IX
*     'ld' __ '\(' _ pos=@ ee=Expression _ '\)' _ ',' _ 'ix' &_eos
*     .bytes = Bytes { return [0xDD, 0x22, value16LE(pos, ee)]; } |
*     // LD (nn), IY
*     'ld' __ '\(' _ pos=@ ee=Expression _ '\)' _ ',' _ 'iy' &_eos
*     .bytes = Bytes { return [0xFD, 0x22, value16LE(pos, ee)]; } |
*     // LD SP, HL
*     'ld' __ 'sp' _ ',' _ 'hl' &_eos
*     .bytes = Bytes { return [0xF9]; } |
*     // LD SP, IX
*     'ld' __ 'sp' _ ',' _ 'ix' &_eos
*     .bytes = Bytes { return [0xDD, 0xF9]; } |
*     // LD SP, IY
*     'ld' __ 'sp' _ ',' _ 'iy' &_eos
*     .bytes = Bytes { return [0xFD, 0xF9]; } |
*     // Have to be after the other LD instructions
*     // LD dd, nn
*     'ld' __ dd=dd _ ',' _ pos=@ ee=Expression &_eos
*     .bytes = Bytes { return [0b00000001 | dd_bits(dd, 4), value16LE(pos, ee)]; } |
*     // PUSH qq
*     'push' __ qq=qq &_eos
*     .bytes = Bytes { return [0b11000101 | qq_bits(qq, 4)]; } |
*     // PUSH IX
*     'push' __ 'ix' &_eos
*     .bytes = Bytes { return [0xDD, 0xE5]; } |
*     // PUSH IY
*     'push' __ 'iy' &_eos
*     .bytes = Bytes { return [0xFD, 0xE5]; } |
*     // POP qq
*     'pop' __ qq=qq &_eos
*     .bytes = Bytes { return [0b11000001 | qq_bits(qq, 4)]; } |
*     // POP IX
*     'pop' __ 'ix' &_eos
*     .bytes = Bytes { return [0xDD, 0xE1]; } |
*     // POP IY
*     'pop' __ 'iy' &_eos
*     .bytes = Bytes { return [0xFD, 0xE1]; }
* ExchangeInstruction :=
*     // EX DE, HL
*     'ex' __ 'de' _ ',' _ 'hl' &_eos
*     .bytes = Bytes { return [0xEB]; } |
*     // EX AF, AF'
*     'ex' __ 'af' _ ',' _ 'af\'' &_eos
*     .bytes = Bytes { return [0x08]; } |
*     // EXX
*     'exx' &_eos
*     .bytes = Bytes { return [0xD9]; } |
*     // EX (SP), HL
*     'ex' __ '\(' 'sp' '\)' _ ',' _ 'hl' &_eos
*     .bytes = Bytes { return [0xE3]; } |
*     // EX (SP), IX
*     'ex' __ '\(' 'sp' '\)' _ ',' _ 'ix' &_eos
*     .bytes = Bytes { return [0xDD, 0xE3]; } |
*     // EX (SP), IY
*     'ex' __ '\(' 'sp' '\)' _ ',' _ 'iy' &_eos
*     .bytes = Bytes { return [0xFD, 0xE3]; }
* BlockInstruction :=
*     // Have to be before ldi
*     // LDIR
*     'ldir' &_eos
*     .bytes = Bytes { return [0xED, 0xB0]; } |
*     // LDI
*     'ldi' &_eos
*     .bytes = Bytes { return [0xED, 0xA0]; } |
*     // LDDR
*     'lddr' &_eos
*     .bytes = Bytes { return [0xED, 0xB8]; } |
*     // LDD
*     'ldd' &_eos
*     .bytes = Bytes { return [0xED, 0xA8]; } |
*     // CPIR
*     'cpir' &_eos
*     .bytes = Bytes { return [0xED, 0xB1]; } |
*     // CPI
*     'cpi' &_eos
*     .bytes = Bytes { return [0xED, 0xA1]; } |
*     // CPDR
*     'cpdr' &_eos
*     .bytes = Bytes { return [0xED, 0xB9]; } |
*     // CPD
*     'cpd' &_eos
*     .bytes = Bytes { return [0xED, 0xA9]; }
* ArithmeticLogic8Instruction :=
*     // ADD A, r
*     'add' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10000000 | r_bits(r)]; } |
*     // ADD A, n
*     'add' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xC6, value8(pos, n)]; } |
*     // ADD A, (HL)
*     'add' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0x86]; } |
*     // ADD A, (IX+d)
*     'add' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0x86, svalue8(pos, s, d)]; } |
*     // ADD A, (IY+d)
*     'add' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0x86, svalue8(pos, s, d)]; } |
*     // ADC A, r
*     'adc' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10001000 | r_bits(r)]; } |
*     // ADC A, n
*     'adc' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xCE, value8(pos, n)]; } |
*     // ADC A, (HL)
*     'adc' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0x8E]; } |
*     // ADC (IX+d)
*     'adc' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0x8E, svalue8(pos, s, d)]; } |
*     // ADC (IY+d)
*     'adc' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0x8E, svalue8(pos, s, d)]; } |
*     // SUB A, r
*     'sub' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10010000 | r_bits(r)]; } |
*     // SUB A, n
*     'sub' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xD6, value8(pos, n)]; } |
*     // SUB A, (HL)
*     'sub' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0x96]; } |
*     // SUB (IX+d)
*     'sub' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0x96, svalue8(pos, s, d)]; } |
*     // SUB (IY+d)
*     'sub' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0x96, svalue8(pos, s, d)]; } |
*     // SBC A, r
*     'sbc' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10011000 | r_bits(r)]; } |
*     // SBC A, n
*     'sbc' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xDE, value8(pos, n)]; } |
*     // SBC A, (HL)
*     'sbc' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0x9E]; } |
*     // SBC (IX+d)
*     'sbc' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0x9E, svalue8(pos, s, d)]; } |
*     // SBC (IY+d)
*     'sbc' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0x9E, svalue8(pos, s, d)]; } |
*     // AND A, r
*     'and' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10100000 | r_bits(r)]; } |
*     // AND A, n
*     'and' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xE6, value8(pos, n)]; } |
*     // AND A, (HL)
*     'and' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0xA6]; } |
*     // AND (IX+d)
*     'and' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xA6, svalue8(pos, s, d)]; } |
*     // AND (IY+d)
*     'and' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xA6, svalue8(pos, s, d)]; } |
*     // OR A, r
*     'or' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10110000 | r_bits(r)]; } |
*     // OR A, n
*     'or' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xF6, value8(pos, n)]; } |
*     // OR A, (HL)
*     'or' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0xB6]; } |
*     // OR (IX+d)
*     'or' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xB6, svalue8(pos, s, d)]; } |
*     // OR (IY+d)
*     'or' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xB6, svalue8(pos, s, d)]; } |
*     // XOR A, r
*     'xor' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10101000 | r_bits(r)]; } |
*     // XOR A, n
*     'xor' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xEE, value8(pos, n)]; } |
*     // XOR A, (HL)
*     'xor' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0xAE]; } |
*     // XOR (IX+d)
*     'xor' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xAE, svalue8(pos, s, d)]; } |
*     // XOR (IY+d)
*     'xor' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xAE, svalue8(pos, s, d)]; } |
*     // CP A, r
*     'cp' __ {'a' _ ',' _}? r=r &_eos
*     .bytes = Bytes { return [0b10111000 | r_bits(r)]; } |
*     // CP A, n
*     'cp' __ {'a' _ ',' _}? pos=@ n=Expression &_eos
*     .bytes = Bytes { return [0xFE, value8(pos, n)]; } |
*     // CP A, (HL)
*     'cp' __ {'a' _ ',' _}? '\(' _ 'hl'_ '\)' &_eos
*     .bytes = Bytes { return [0xBE]; } |
*     // CP (IX+d)
*     'cp' __ {'a' _ ',' _}? '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xBE, svalue8(pos, s, d)]; } |
*     // CP (IY+d)
*     'cp' __ {'a' _ ',' _}? '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xBE, svalue8(pos, s, d)]; }
* IncrementDecrement8Instruction :=
*     // INC r
*     'inc' __ r=r &_eos
*     .bytes = Bytes { return [0b00000100 | r_bits(r, 3)]; } |
*     // INC (HL)
*     'inc' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0x34]; } |
*     // INC (IX+d)
*     'inc' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0x34, svalue8(pos, s, d)]; } |
*     // INC (IY+d)
*     'inc' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0x34, svalue8(pos, s, d)]; } |
*     // DEC r
*     'dec' __ r=r &_eos
*     .bytes = Bytes { return [0b00000101 | r_bits(r, 3)]; } |
*     // DEC (HL)
*     'dec' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0x35]; } |
*     // DEC (IX+d)
*     'dec' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0x35, svalue8(pos, s, d)]; } |
*     // DEC (IY+d)
*     'dec' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0x35, svalue8(pos, s, d)]; }
* GeneralPurposeArithmeticInstruction :=
*     // DAA
*     'daa' &_eos
*     .bytes = Bytes { return [0x27]; } |
*     // CPL
*     'cpl' &_eos
*     .bytes = Bytes { return [0x2F]; } |
*     // NEG
*     'neg' &_eos
*     .bytes = Bytes { return [0xED, 0x44]; } |
*     // CCF
*     'ccf' &_eos
*     .bytes = Bytes { return [0x3F]; } |
*     // SCF
*     'scf' &_eos
*     .bytes = Bytes { return [0x37]; }
* CpuControlGroupInstruction :=
*     // NOP
*     'nop' &_eos
*     .bytes = Bytes { return [0x00]; } |
*     // HALT
*     'halt' &_eos
*     .bytes = Bytes { return [0x76]; } |
*     // DI
*     'di' &_eos
*     .bytes = Bytes { return [0xF3]; } |
*     // EI
*     'ei' &_eos
*     .bytes = Bytes { return [0xFB]; } |
*     // IM 0, IM 1, IM 2
*     'im' __ m='[012]' &_eos
*     .bytes = Bytes { return [0xED, imode(m)]; }
* ArithmeticLogic16Instruction :=
*     // ADD HL, ss
*     'add' __ 'hl' _ ',' _ ss=ss &_eos
*     .bytes = Bytes { return [0b00001001 | ss_bits(ss, 4)]; } |
*     // ADC HL, ss
*     'adc' __ 'hl' _ ',' _ ss=ss &_eos
*     .bytes = Bytes { return [0xED, 0b01001010 | ss_bits(ss, 4)]; } |
*     // SBC HL, ss
*     'sbc' __ 'hl' _ ',' _ ss=ss &_eos
*     .bytes = Bytes { return [0xED, 0b01000010 | ss_bits(ss, 4)]; } |
*     // ADD IX, pp
*     'add' __ 'ix' _ ',' _ pp=pp &_eos
*     .bytes = Bytes { return [0xDD, 0b00001001 | pp_bits(pp, 4)]; } |
*     // ADD IY, pp
*     'add' __ 'iy' _ ',' _ rr=rr &_eos
*     .bytes = Bytes { return [0xFD, 0b00001001 | rr_bits(rr, 4)]; } |
*     // INC ss
*     'inc' __ ss=ss &_eos
*     .bytes = Bytes { return [0b00000011 | ss_bits(ss, 4)]; } |
*     // INC IX
*     'inc' __ 'ix' &_eos
*     .bytes = Bytes { return [0xDD, 0x23]; } |
*     // INC IY
*     'inc' __ 'iy' &_eos
*     .bytes = Bytes { return [0xFD, 0x23]; } |
*     // DEC ss
*     'dec' __ ss=ss &_eos
*     .bytes = Bytes { return [0b00001011 | ss_bits(ss, 4)]; } |
*     // DEC IX
*     'dec' __ 'ix' &_eos
*     .bytes = Bytes { return [0xDD, 0x2B]; } |
*     // DEC IY
*     'dec' __ 'iy' &_eos
*     .bytes = Bytes { return [0xFD, 0x2B]; }
* RotateShiftInstruction :=
*     // RLCA
*     'rlca' &_eos
*     .bytes = Bytes { return [0x07]; } |
*     // RLA
*     'rla' &_eos
*     .bytes = Bytes { return [0x17]; } |
*     // RRCA
*     'rrca' &_eos
*     .bytes = Bytes { return [0x0F]; } |
*     // RRA
*     'rra' &_eos
*     .bytes = Bytes { return [0x1F]; } |
*     // RLC r
*     'rlc' __ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b00000000 | r_bits(r)]; } |
*     // RLC (HL)
*     'rlc' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0x06]; } |
*     // RLC (IX+d)
*     'rlc' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0x06]; } |
*     // RLC (IY+d)
*     'rlc' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0x06]; } |
*     // RL r
*     'rl' __ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b00010000 | r_bits(r)]; } |
*     // RL (HL)
*     'rl' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0x16]; } |
*     // RL (IX+d)
*     'rl' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0x16]; } |
*     // RL (IY+d)
*     'rl' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0x16]; } |
*     // RRC r
*     'rrc' __ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b00001000 | r_bits(r)]; } |
*     // RRC (HL)
*     'rrc' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0x0E]; } |
*     // RRC (IX+d)
*     'rrc' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0x0E]; } |
*     // RRC (IY+d)
*     'rrc' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0x0E]; } |
*     // RR r
*     'rr' __ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b00011000 | r_bits(r)]; } |
*     // RR (HL)
*     'rr' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0x1E]; } |
*     // RR (IX+d)
*     'rr' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0x1E]; } |
*     // RR (IY+d)
*     'rr' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0x1E]; } |
*     // SLA r
*     'sla' __ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b00100000 | r_bits(r)]; } |
*     // SLA (HL)
*     'sla' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0x26]; } |
*     // SLA (IX+d)
*     'sla' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0x26]; } |
*     // SLA (IY+d)
*     'sla' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0x26]; } |
*     // SRA r
*     'sra' __ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b00101000 | r_bits(r)]; } |
*     // SRA (HL)
*     'sra' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0x2E]; } |
*     // SRA (IX+d)
*     'sra' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0x2E]; } |
*     // SRA (IY+d)
*     'sra' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0x2E]; } |
*     // SRL r
*     'srl' __ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b00111000 | r_bits(r)]; } |
*     // SRL (HL)
*     'srl' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0x3E]; } |
*     // SRL (IX+d)
*     'srl' __ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0x3E]; } |
*     // SRL (IY+d)
*     'srl' __ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0x3E]; } |
*     // RLD
*     'rld' &_eos
*     .bytes = Bytes { return [0xED, 0x6F]; } |
*     // RRD
*     'rrd' &_eos
*     .bytes = Bytes { return [0xED, 0x67]; }
* BitManipulationInstruction :=
*     // BIT b, r
*     'bit' __ b=b _ ',' _ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b01000000 | (b.value << 3) | r_bits(r)]; } |
*     // BIT b, (HL)
*     'bit' __ b=b _ ',' _ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0b01000110 | (b.value << 3)]; } |
*     // BIT b, (IX+d)
*     'bit' __ b=b _ ',' _ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0b01000110 | (b.value << 3)]; } |
*     // BIT b, (IY+d)
*     'bit' __ b=b _ ',' _ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0b01000110 | (b.value << 3)]; } |
*     // SET b, r
*     'set' __ b=b _ ',' _ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b11000000 | (b.value << 3) | r_bits(r)]; } |
*     // SET b, (HL)
*     'set' __ b=b _ ',' _ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0b11000110 | (b.value << 3)]; } |
*     // SET b, (IX+d)
*     'set' __ b=b _ ',' _ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0b11000110 | (b.value << 3)]; } |
*     // SET b, (IY+d)
*     'set' __ b=b _ ',' _ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0b11000110 | (b.value << 3)]; } |
*     // RES b, r
*     'res' __ b=b _ ',' _ r=r &_eos
*     .bytes = Bytes { return [0xCB, 0b10000000 | (b.value << 3) | r_bits(r)]; } |
*     // RES b, (HL)
*     'res' __ b=b _ ',' _ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xCB, 0b10000110 | (b.value << 3)]; } |
*     // RES b, (IX+d)
*     'res' __ b=b _ ',' _ '\(' _ 'ix' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xCB, svalue8(pos, s, d), 0b10000110 | (b.value << 3)]; } |
*     // RES b, (IY+d)
*     'res' __ b=b _ ',' _ '\(' _ 'iy' _ s={'\+' | '\-'} _ pos=@ d=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xCB, svalue8(pos, s, d), 0b10000110 | (b.value << 3)]; }
* Offset :=
*     pos=@ label=Label
*     .eval = EvalFunc { return () => getLabelValue(label.name); } |
*     e=Expression
*     .eval = EvalFunc { return e.eval; }
* JumpInstruction :=
*     // JP nn
*     'jp' __ pos=@ ee=Expression &_eos
*     .bytes = Bytes { return [0xC3, value16LE(pos, ee)]; } |
*     // JP CC, nn
*     'jp' __ cc=cc _ ',' _ pos=@ ee=Expression &_eos
*     .bytes = Bytes { return [0b11000010 | cc_bits(cc, 3), value16LE(pos, ee)]; } |
*     // JR label
*     'jr' __ pos=@ label=Label &_eos
*     .bytes = Bytes { return [jj_bits(), jrRelativeOffset(pos, label.name)]; } |
*     // JR e
*     'jr' __ pos=@ e=Expression &_eos
*     .bytes = Bytes { return [jj_bits(), jrOffset(pos, e)]; } |
*     // JR jj, label
*     'jr' __ jj=jj _ ',' _ pos=@ label=Label &_eos
*     .bytes = Bytes { return [jj_bits(jj), jrRelativeOffset(pos, label.name)]; } |
*     // JR jj, e
*     'jr' __ jj=jj _ ',' _ pos=@ e=Expression &_eos
*     .bytes = Bytes { return [jj_bits(jj), jrOffset(pos, e)]; } |
*     // JP (HL)
*     'jp' __ '\(' _ 'hl' _ '\)' &_eos
*     .bytes = Bytes { return [0xE9]; } |
*     // JP (IX)
*     'jp' __ '\(' _ 'ix' _ '\)' &_eos
*     .bytes = Bytes { return [0xDD, 0xE9]; } |
*     // JP (IY)
*     'jp' __ '\(' _ 'iy' _ '\)' &_eos
*     .bytes = Bytes { return [0xFD, 0xE9]; } |
*     // DJNZ label
*     'djnz' __ pos=@ label=Label &_eos
*     .bytes = Bytes { return [0x10, jrRelativeOffset(pos, label.name)]; } |
*     // DJNZ e
*     'djnz' __ pos=@ e=Expression &_eos
*     .bytes = Bytes { return [0x10, jrOffset(pos, e)]; }
* CallInstruction :=
*     // CALL nn
*     'call' __ pos=@ ee=Expression &_eos
*     .bytes = Bytes { return [0xCD, value16LE(pos, ee)]; } |
*     // CALL cc, nn
*     'call' __ cc=cc _ ',' _ pos=@ ee=Expression &_eos
*     .bytes = Bytes { return [0b11000100 | cc_bits(cc, 3), value16LE(pos, ee)]; }
* ReturnInstruction :=
*     // RET
*     'ret' &_eos
*     .bytes = Bytes { return [0xC9]; } |
*     // RET cc
*     'ret' __ cc=cc &_eos
*     .bytes = Bytes { return [0b11000000 | cc_bits(cc, 3)]; } |
*     // RETI
*     'reti' &_eos
*     .bytes = Bytes { return [0xED, 0x4D]; } |
*     // RETN
*     'retn' &_eos
*     .bytes = Bytes { return [0xED, 0x45]; } |
*     // RST p
*     'rst' __ p=p &_eos
*     .bytes = Bytes { return [0b11000111 | p_bits(p.value, 3)]; }
* InputInstruction :=
*     // Have to be before IN A, (n)
*     // IN r, (C)
*     'in' __ r=r _ ',' _ '\(' 'c' '\)' &_eos
*     .bytes = Bytes { return [0xED, 0b01000000 | r_bits(r, 3)]; } |
*     // IN A, (n)
*     'in' __ 'a' _ ',' _ '\(' _ pos=@ n=Expression _ '\)' &_eos
*     .bytes = Bytes { return [0xDB, value8(pos, n)]; } |
*     // INI
*     'ini' &_eos
*     .bytes = Bytes { return [0xED, 0xA2]; } |
*     // INIR
*     'inir' &_eos
*     .bytes = Bytes { return [0xED, 0xB2]; } |
*     // IND
*     'ind' &_eos
*     .bytes = Bytes { return [0xED, 0xAA]; } |
*     // INDR
*     'indr' &_eos
*     .bytes = Bytes { return [0xED, 0xBA]; }
* OutputInstruction :=
*     // Have to be before OUT (n), A
*     // OUT (C), r
*     'out' __ '\(' 'c' '\)' _ ',' _ r=r &_eos
*     .bytes = Bytes { return [0xED, 0b01000001 | r_bits(r, 3)]; } |
*     // OUT (n), A
*     'out' __ '\(' _ pos=@ n=Expression _ '\)' _ ',' _ 'a' &_eos
*     .bytes = Bytes { return [0xD3, value8(pos, n)]; } |
*     // OUTI
*     'outi' &_eos
*     .bytes = Bytes { return [0xED, 0xA3]; } |
*     // OTIR
*     'otir' &_eos
*     .bytes = Bytes { return [0xED, 0xB3]; } |
*     // OUTD
*     'outd' &_eos
*     .bytes = Bytes { return [0xED, 0xAB]; } |
*     // OTDR
*     'otdr' &_eos
*     .bytes = Bytes { return [0xED, 0xBB]; }
* ByteDirective :=
*     'db' | 'dm' | 'byte' | 'defb' | 'defm'
* WordDirective :=
*     'dw' | 'word' | 'defw'
* BlockDirective :=
*     'block' | 'defs' | 'ds'
* ByteValue :=
*     c=Char              .bytes = Bytes { return c.bytes; } |
*     s=Str               .bytes = Bytes { return s.bytes; } |
*     s=ZX81Str           .bytes = Bytes { return s.bytes; } |
*     pos=@ e=Expression  .bytes = Bytes { return [value8(pos, e)]; }
* WordValue :=
*     pos=@ e=Expression  .bytes = Bytes { return [value16LE(pos, e)]; }
* DataDirective :=
*     // byte $FF, ...
*     ByteDirective __ pos0=@ data0=ByteValue data={_ ',' _ inner=ByteValue}* &_eos
*     .bytes = Bytes { return dataBytes(pos0, data0, data); } |
*     // dz "test"
*     'dz' __ pos0=@ data0=ByteValue data={_ ',' _ inner=ByteValue}* &_eos
*     .bytes = Bytes { return dataBytesZero(pos0, data0, data); } |
*     // word $FFFF, ...
*     WordDirective __ pos0=@ data0=WordValue data={_ ',' _ inner=WordValue}* &_eos
*     .bytes = Bytes { return dataWords(pos0, data0, data); } |
*     // block length, fill byte
*     BlockDirective __ @pos0=@ nn=Expression data={_ ',' _ pos1=@ b=Expression}? &_eos
*     .bytes = Bytes { return [dataBlock(pos0, nn, data?.pos1, data?.b)]; }
* // Escapes taken from C++ (C++ standard 20, A.2 Lexical conventions) with some modifications
* EscapeSequence :=
*     SimpleEscapeSequence |
*     OctalEscapeSequence |
*     HexadecimalEscapeSequence
* SimpleEscapeSequence :=
*     '\\' raw={'\'' | '"' | '\?' | '\\' | 'a' | 'b' | 'e' | 'f' | 'n' | 't' | 'r' | 'v'}
*     .bytes = Bytes { return parseSimpleEscape(raw); }
* OctalEscapeSequence :=
*     '\\' pos=@ raw='[0-7]{1,3}'
*     .bytes = Bytes { return parseOctalEscape(pos, raw); }
* HexadecimalEscapeSequence :=
*     '\\x' pos=@ raw='[0-9a-f]{1,2}'
*     .bytes = Bytes { return parseHexadecimalEscape(pos, raw); }
* SimpleChar :=
*     pos=@ raw='[^\'\\\n]'
*     .bytes = Bytes { return parseSimpleChar(pos, raw); }
* StringChar :=
*     pos=@ raw='[^\"\\\n]'
*     .bytes = Bytes { return parseSimpleChar(pos, raw); }
* Char :=
*     '\'' char={SimpleChar | EscapeSequence} '\''
*     .bytes = Bytes { return char.bytes; }
* Str :=
*     '\"' chars={StringChar | EscapeSequence}* '\"'
*     .bytes = Bytes { return chars.reduce((r, c) => { return r.concat(c.bytes); }, [] as Bytes); }
* ZX81Str :=
*     'zx81\"' pos=@ chars='[ £\$:\?()><=+\-\*;/,.0-9A-Za-z]*' '\"'
*     .bytes = Bytes { return parseZX81String(pos, chars); }
* Comment :=
*     '(//|;)[^\r\n]*'
* OriginDirective :=
*     '\.?org' __ address=nn &_eos
* Filename :=
*     '"' raw='[^"/\\:\*\?<>\|%#\$,]+' '"' |
*     raw='[^ \t\r\n"/\\:\*\?<>\|%#\$,]+'
* IncludeDirective :=
*     '\.?include' __ name=Filename &_eos
*     .bytes = Bytes { return includeFile(name.raw); }
* OutputDirective :=
*     '\.?output' __ name=Filename sld={_ ',' _ 'sld'}? &_eos
*     .void = void { setOutputName(name.raw, sld != null); }
* DeviceDirective :=
*     '\.?device' __ raw='[a-zA-Z][0-9a-zA-Z]*' &_eos
*     .void = void { setDeviceName(raw); }
*/

import {
    r_bits,
    dd_bits,
    qq_bits,
    ss_bits,
    pp_bits,
    rr_bits,
    cc_bits,
    jj_bits,
    p_bits,
    imode
} from "./LowLevel";

import {
    EvalFunc,
    Address,
    Bytes,
    binaryOperation,
    binaryOperations,
    unaryOperation,
    unaryOperations,
    operatorOr,
    operatorXor,
    operatorAnd,
    operatorLeftShift,
    operatorRightShift,
    operatorAdd,
    operatorSub,
    operatorMul,
    operatorDiv,
    operatorModulo,
    operatorPlus,
    operatorNeg,
    operatorInvert,
    operatorIdentity,
    value16LE,
    value8,
    svalue8,
    jrOffset,
    jrRelativeOffset,
    parseNumber,
    parseSimpleChar,
    parseSimpleEscape,
    parseOctalEscape,
    parseHexadecimalEscape,
    dataBytes,
    dataBytesZero,
    dataWords,
    dataBlock,
    parseZX81String
} from '../compiler/Ast';

import {getLabelValue} from '../compiler/Labels';
import {setOutputName, setDeviceName, includeFile} from '../compiler/Compiler';

type Nullable<T> = T | null;
type $$RuleType<T> = () => Nullable<T>;
export interface ASTNodeIntf {
    kind: ASTKinds;
}
export enum ASTKinds {
    start = "start",
    r_1 = "r_1",
    r_2 = "r_2",
    r_3 = "r_3",
    r_4 = "r_4",
    r_5 = "r_5",
    r_6 = "r_6",
    r_7 = "r_7",
    dd_1 = "dd_1",
    dd_2 = "dd_2",
    dd_3 = "dd_3",
    dd_4 = "dd_4",
    ss = "ss",
    qq_1 = "qq_1",
    qq_2 = "qq_2",
    qq_3 = "qq_3",
    qq_4 = "qq_4",
    pp_1 = "pp_1",
    pp_2 = "pp_2",
    pp_3 = "pp_3",
    pp_4 = "pp_4",
    rr_1 = "rr_1",
    rr_2 = "rr_2",
    rr_3 = "rr_3",
    rr_4 = "rr_4",
    n_1 = "n_1",
    n_2 = "n_2",
    n_3 = "n_3",
    n_4 = "n_4",
    nn_1 = "nn_1",
    nn_2 = "nn_2",
    nn_3 = "nn_3",
    nn_4 = "nn_4",
    decimal = "decimal",
    binary = "binary",
    binary_$0_1 = "binary_$0_1",
    binary_$0_2 = "binary_$0_2",
    octal_1 = "octal_1",
    octal_2 = "octal_2",
    octal_$0_1 = "octal_$0_1",
    octal_$0_2 = "octal_$0_2",
    octal_$1_1 = "octal_$1_1",
    octal_$1_2 = "octal_$1_2",
    hexadecimal_1 = "hexadecimal_1",
    hexadecimal_2 = "hexadecimal_2",
    hexadecimal_$0_1 = "hexadecimal_$0_1",
    hexadecimal_$0_2 = "hexadecimal_$0_2",
    hexadecimal_$0_3 = "hexadecimal_$0_3",
    d = "d",
    e = "e",
    p = "p",
    b = "b",
    cc_1 = "cc_1",
    cc_2 = "cc_2",
    cc_3 = "cc_3",
    cc_4 = "cc_4",
    cc_5 = "cc_5",
    cc_6 = "cc_6",
    cc_7 = "cc_7",
    cc_8 = "cc_8",
    cc_9 = "cc_9",
    jj_1 = "jj_1",
    jj_2 = "jj_2",
    jj_3 = "jj_3",
    jj_4 = "jj_4",
    __ = "__",
    _ = "_",
    _eos = "_eos",
    Program = "Program",
    Line_1 = "Line_1",
    Line_2 = "Line_2",
    Equal = "Equal",
    LineEqual = "LineEqual",
    LineStatement = "LineStatement",
    Statement_1 = "Statement_1",
    Statement_2 = "Statement_2",
    Directive_1 = "Directive_1",
    Directive_2 = "Directive_2",
    Directive_3 = "Directive_3",
    Directive_4 = "Directive_4",
    Directive_5 = "Directive_5",
    ForbiddenNames_1 = "ForbiddenNames_1",
    ForbiddenNames_2 = "ForbiddenNames_2",
    ForbiddenNames_3 = "ForbiddenNames_3",
    ForbiddenNames_4 = "ForbiddenNames_4",
    ForbiddenNames_5 = "ForbiddenNames_5",
    ForbiddenLabel = "ForbiddenLabel",
    Label = "Label",
    LabelDeclaration = "LabelDeclaration",
    Expression = "Expression",
    BitwiseOrExpression = "BitwiseOrExpression",
    BitwiseOrExpression_$0 = "BitwiseOrExpression_$0",
    BitwiseXOrExpression = "BitwiseXOrExpression",
    BitwiseXOrExpression_$0 = "BitwiseXOrExpression_$0",
    BitwiseAndExpression = "BitwiseAndExpression",
    BitwiseAndExpression_$0 = "BitwiseAndExpression_$0",
    ShiftExpression = "ShiftExpression",
    ShiftExpression_$0 = "ShiftExpression_$0",
    ShiftExpression_$0_$0_1 = "ShiftExpression_$0_$0_1",
    ShiftExpression_$0_$0_2 = "ShiftExpression_$0_$0_2",
    AdditiveExpression = "AdditiveExpression",
    AdditiveExpression_$0 = "AdditiveExpression_$0",
    AdditiveExpression_$0_$0_1 = "AdditiveExpression_$0_$0_1",
    AdditiveExpression_$0_$0_2 = "AdditiveExpression_$0_$0_2",
    MultiplicativeExpression = "MultiplicativeExpression",
    MultiplicativeExpression_$0 = "MultiplicativeExpression_$0",
    MultiplicativeExpression_$0_$0_1 = "MultiplicativeExpression_$0_$0_1",
    MultiplicativeExpression_$0_$0_2 = "MultiplicativeExpression_$0_$0_2",
    MultiplicativeExpression_$0_$0_3 = "MultiplicativeExpression_$0_$0_3",
    UnaryExpression_1 = "UnaryExpression_1",
    UnaryExpression_2 = "UnaryExpression_2",
    UnaryExpression_$0_1 = "UnaryExpression_$0_1",
    UnaryExpression_$0_2 = "UnaryExpression_$0_2",
    UnaryExpression_$0_3 = "UnaryExpression_$0_3",
    PrimaryExpression_1 = "PrimaryExpression_1",
    PrimaryExpression_2 = "PrimaryExpression_2",
    PrimaryExpression_3 = "PrimaryExpression_3",
    Reg8 = "Reg8",
    Instruction_1 = "Instruction_1",
    Instruction_2 = "Instruction_2",
    Instruction_3 = "Instruction_3",
    Instruction_4 = "Instruction_4",
    Instruction_5 = "Instruction_5",
    Instruction_6 = "Instruction_6",
    Instruction_7 = "Instruction_7",
    Instruction_8 = "Instruction_8",
    Instruction_9 = "Instruction_9",
    Instruction_10 = "Instruction_10",
    Instruction_11 = "Instruction_11",
    Instruction_12 = "Instruction_12",
    Instruction_13 = "Instruction_13",
    Instruction_14 = "Instruction_14",
    Instruction_15 = "Instruction_15",
    Instruction_16 = "Instruction_16",
    Load8Instruction_1 = "Load8Instruction_1",
    Load8Instruction_2 = "Load8Instruction_2",
    Load8Instruction_3 = "Load8Instruction_3",
    Load8Instruction_4 = "Load8Instruction_4",
    Load8Instruction_5 = "Load8Instruction_5",
    Load8Instruction_6 = "Load8Instruction_6",
    Load8Instruction_7 = "Load8Instruction_7",
    Load8Instruction_8 = "Load8Instruction_8",
    Load8Instruction_9 = "Load8Instruction_9",
    Load8Instruction_10 = "Load8Instruction_10",
    Load8Instruction_11 = "Load8Instruction_11",
    Load8Instruction_12 = "Load8Instruction_12",
    Load8Instruction_13 = "Load8Instruction_13",
    Load8Instruction_14 = "Load8Instruction_14",
    Load8Instruction_15 = "Load8Instruction_15",
    Load8Instruction_16 = "Load8Instruction_16",
    Load8Instruction_17 = "Load8Instruction_17",
    Load8Instruction_18 = "Load8Instruction_18",
    Load8Instruction_19 = "Load8Instruction_19",
    Load8Instruction_20 = "Load8Instruction_20",
    Load8Instruction_21 = "Load8Instruction_21",
    Load8Instruction_$0_1 = "Load8Instruction_$0_1",
    Load8Instruction_$0_2 = "Load8Instruction_$0_2",
    Load8Instruction_$1_1 = "Load8Instruction_$1_1",
    Load8Instruction_$1_2 = "Load8Instruction_$1_2",
    Load8Instruction_$2_1 = "Load8Instruction_$2_1",
    Load8Instruction_$2_2 = "Load8Instruction_$2_2",
    Load8Instruction_$3_1 = "Load8Instruction_$3_1",
    Load8Instruction_$3_2 = "Load8Instruction_$3_2",
    Load8Instruction_$4_1 = "Load8Instruction_$4_1",
    Load8Instruction_$4_2 = "Load8Instruction_$4_2",
    Load8Instruction_$5_1 = "Load8Instruction_$5_1",
    Load8Instruction_$5_2 = "Load8Instruction_$5_2",
    Load16Instruction_1 = "Load16Instruction_1",
    Load16Instruction_2 = "Load16Instruction_2",
    Load16Instruction_3 = "Load16Instruction_3",
    Load16Instruction_4 = "Load16Instruction_4",
    Load16Instruction_5 = "Load16Instruction_5",
    Load16Instruction_6 = "Load16Instruction_6",
    Load16Instruction_7 = "Load16Instruction_7",
    Load16Instruction_8 = "Load16Instruction_8",
    Load16Instruction_9 = "Load16Instruction_9",
    Load16Instruction_10 = "Load16Instruction_10",
    Load16Instruction_11 = "Load16Instruction_11",
    Load16Instruction_12 = "Load16Instruction_12",
    Load16Instruction_13 = "Load16Instruction_13",
    Load16Instruction_14 = "Load16Instruction_14",
    Load16Instruction_15 = "Load16Instruction_15",
    Load16Instruction_16 = "Load16Instruction_16",
    Load16Instruction_17 = "Load16Instruction_17",
    Load16Instruction_18 = "Load16Instruction_18",
    Load16Instruction_19 = "Load16Instruction_19",
    Load16Instruction_20 = "Load16Instruction_20",
    ExchangeInstruction_1 = "ExchangeInstruction_1",
    ExchangeInstruction_2 = "ExchangeInstruction_2",
    ExchangeInstruction_3 = "ExchangeInstruction_3",
    ExchangeInstruction_4 = "ExchangeInstruction_4",
    ExchangeInstruction_5 = "ExchangeInstruction_5",
    ExchangeInstruction_6 = "ExchangeInstruction_6",
    BlockInstruction_1 = "BlockInstruction_1",
    BlockInstruction_2 = "BlockInstruction_2",
    BlockInstruction_3 = "BlockInstruction_3",
    BlockInstruction_4 = "BlockInstruction_4",
    BlockInstruction_5 = "BlockInstruction_5",
    BlockInstruction_6 = "BlockInstruction_6",
    BlockInstruction_7 = "BlockInstruction_7",
    BlockInstruction_8 = "BlockInstruction_8",
    ArithmeticLogic8Instruction_1 = "ArithmeticLogic8Instruction_1",
    ArithmeticLogic8Instruction_2 = "ArithmeticLogic8Instruction_2",
    ArithmeticLogic8Instruction_3 = "ArithmeticLogic8Instruction_3",
    ArithmeticLogic8Instruction_4 = "ArithmeticLogic8Instruction_4",
    ArithmeticLogic8Instruction_5 = "ArithmeticLogic8Instruction_5",
    ArithmeticLogic8Instruction_6 = "ArithmeticLogic8Instruction_6",
    ArithmeticLogic8Instruction_7 = "ArithmeticLogic8Instruction_7",
    ArithmeticLogic8Instruction_8 = "ArithmeticLogic8Instruction_8",
    ArithmeticLogic8Instruction_9 = "ArithmeticLogic8Instruction_9",
    ArithmeticLogic8Instruction_10 = "ArithmeticLogic8Instruction_10",
    ArithmeticLogic8Instruction_11 = "ArithmeticLogic8Instruction_11",
    ArithmeticLogic8Instruction_12 = "ArithmeticLogic8Instruction_12",
    ArithmeticLogic8Instruction_13 = "ArithmeticLogic8Instruction_13",
    ArithmeticLogic8Instruction_14 = "ArithmeticLogic8Instruction_14",
    ArithmeticLogic8Instruction_15 = "ArithmeticLogic8Instruction_15",
    ArithmeticLogic8Instruction_16 = "ArithmeticLogic8Instruction_16",
    ArithmeticLogic8Instruction_17 = "ArithmeticLogic8Instruction_17",
    ArithmeticLogic8Instruction_18 = "ArithmeticLogic8Instruction_18",
    ArithmeticLogic8Instruction_19 = "ArithmeticLogic8Instruction_19",
    ArithmeticLogic8Instruction_20 = "ArithmeticLogic8Instruction_20",
    ArithmeticLogic8Instruction_21 = "ArithmeticLogic8Instruction_21",
    ArithmeticLogic8Instruction_22 = "ArithmeticLogic8Instruction_22",
    ArithmeticLogic8Instruction_23 = "ArithmeticLogic8Instruction_23",
    ArithmeticLogic8Instruction_24 = "ArithmeticLogic8Instruction_24",
    ArithmeticLogic8Instruction_25 = "ArithmeticLogic8Instruction_25",
    ArithmeticLogic8Instruction_26 = "ArithmeticLogic8Instruction_26",
    ArithmeticLogic8Instruction_27 = "ArithmeticLogic8Instruction_27",
    ArithmeticLogic8Instruction_28 = "ArithmeticLogic8Instruction_28",
    ArithmeticLogic8Instruction_29 = "ArithmeticLogic8Instruction_29",
    ArithmeticLogic8Instruction_30 = "ArithmeticLogic8Instruction_30",
    ArithmeticLogic8Instruction_31 = "ArithmeticLogic8Instruction_31",
    ArithmeticLogic8Instruction_32 = "ArithmeticLogic8Instruction_32",
    ArithmeticLogic8Instruction_33 = "ArithmeticLogic8Instruction_33",
    ArithmeticLogic8Instruction_34 = "ArithmeticLogic8Instruction_34",
    ArithmeticLogic8Instruction_35 = "ArithmeticLogic8Instruction_35",
    ArithmeticLogic8Instruction_36 = "ArithmeticLogic8Instruction_36",
    ArithmeticLogic8Instruction_37 = "ArithmeticLogic8Instruction_37",
    ArithmeticLogic8Instruction_38 = "ArithmeticLogic8Instruction_38",
    ArithmeticLogic8Instruction_39 = "ArithmeticLogic8Instruction_39",
    ArithmeticLogic8Instruction_40 = "ArithmeticLogic8Instruction_40",
    ArithmeticLogic8Instruction_$0 = "ArithmeticLogic8Instruction_$0",
    ArithmeticLogic8Instruction_$1 = "ArithmeticLogic8Instruction_$1",
    ArithmeticLogic8Instruction_$2 = "ArithmeticLogic8Instruction_$2",
    ArithmeticLogic8Instruction_$3 = "ArithmeticLogic8Instruction_$3",
    ArithmeticLogic8Instruction_$4_1 = "ArithmeticLogic8Instruction_$4_1",
    ArithmeticLogic8Instruction_$4_2 = "ArithmeticLogic8Instruction_$4_2",
    ArithmeticLogic8Instruction_$5 = "ArithmeticLogic8Instruction_$5",
    ArithmeticLogic8Instruction_$6_1 = "ArithmeticLogic8Instruction_$6_1",
    ArithmeticLogic8Instruction_$6_2 = "ArithmeticLogic8Instruction_$6_2",
    ArithmeticLogic8Instruction_$7 = "ArithmeticLogic8Instruction_$7",
    ArithmeticLogic8Instruction_$8 = "ArithmeticLogic8Instruction_$8",
    ArithmeticLogic8Instruction_$9 = "ArithmeticLogic8Instruction_$9",
    ArithmeticLogic8Instruction_$10 = "ArithmeticLogic8Instruction_$10",
    ArithmeticLogic8Instruction_$11_1 = "ArithmeticLogic8Instruction_$11_1",
    ArithmeticLogic8Instruction_$11_2 = "ArithmeticLogic8Instruction_$11_2",
    ArithmeticLogic8Instruction_$12 = "ArithmeticLogic8Instruction_$12",
    ArithmeticLogic8Instruction_$13_1 = "ArithmeticLogic8Instruction_$13_1",
    ArithmeticLogic8Instruction_$13_2 = "ArithmeticLogic8Instruction_$13_2",
    ArithmeticLogic8Instruction_$14 = "ArithmeticLogic8Instruction_$14",
    ArithmeticLogic8Instruction_$15 = "ArithmeticLogic8Instruction_$15",
    ArithmeticLogic8Instruction_$16 = "ArithmeticLogic8Instruction_$16",
    ArithmeticLogic8Instruction_$17 = "ArithmeticLogic8Instruction_$17",
    ArithmeticLogic8Instruction_$18_1 = "ArithmeticLogic8Instruction_$18_1",
    ArithmeticLogic8Instruction_$18_2 = "ArithmeticLogic8Instruction_$18_2",
    ArithmeticLogic8Instruction_$19 = "ArithmeticLogic8Instruction_$19",
    ArithmeticLogic8Instruction_$20_1 = "ArithmeticLogic8Instruction_$20_1",
    ArithmeticLogic8Instruction_$20_2 = "ArithmeticLogic8Instruction_$20_2",
    ArithmeticLogic8Instruction_$21 = "ArithmeticLogic8Instruction_$21",
    ArithmeticLogic8Instruction_$22 = "ArithmeticLogic8Instruction_$22",
    ArithmeticLogic8Instruction_$23 = "ArithmeticLogic8Instruction_$23",
    ArithmeticLogic8Instruction_$24 = "ArithmeticLogic8Instruction_$24",
    ArithmeticLogic8Instruction_$25_1 = "ArithmeticLogic8Instruction_$25_1",
    ArithmeticLogic8Instruction_$25_2 = "ArithmeticLogic8Instruction_$25_2",
    ArithmeticLogic8Instruction_$26 = "ArithmeticLogic8Instruction_$26",
    ArithmeticLogic8Instruction_$27_1 = "ArithmeticLogic8Instruction_$27_1",
    ArithmeticLogic8Instruction_$27_2 = "ArithmeticLogic8Instruction_$27_2",
    ArithmeticLogic8Instruction_$28 = "ArithmeticLogic8Instruction_$28",
    ArithmeticLogic8Instruction_$29 = "ArithmeticLogic8Instruction_$29",
    ArithmeticLogic8Instruction_$30 = "ArithmeticLogic8Instruction_$30",
    ArithmeticLogic8Instruction_$31 = "ArithmeticLogic8Instruction_$31",
    ArithmeticLogic8Instruction_$32_1 = "ArithmeticLogic8Instruction_$32_1",
    ArithmeticLogic8Instruction_$32_2 = "ArithmeticLogic8Instruction_$32_2",
    ArithmeticLogic8Instruction_$33 = "ArithmeticLogic8Instruction_$33",
    ArithmeticLogic8Instruction_$34_1 = "ArithmeticLogic8Instruction_$34_1",
    ArithmeticLogic8Instruction_$34_2 = "ArithmeticLogic8Instruction_$34_2",
    ArithmeticLogic8Instruction_$35 = "ArithmeticLogic8Instruction_$35",
    ArithmeticLogic8Instruction_$36 = "ArithmeticLogic8Instruction_$36",
    ArithmeticLogic8Instruction_$37 = "ArithmeticLogic8Instruction_$37",
    ArithmeticLogic8Instruction_$38 = "ArithmeticLogic8Instruction_$38",
    ArithmeticLogic8Instruction_$39_1 = "ArithmeticLogic8Instruction_$39_1",
    ArithmeticLogic8Instruction_$39_2 = "ArithmeticLogic8Instruction_$39_2",
    ArithmeticLogic8Instruction_$40 = "ArithmeticLogic8Instruction_$40",
    ArithmeticLogic8Instruction_$41_1 = "ArithmeticLogic8Instruction_$41_1",
    ArithmeticLogic8Instruction_$41_2 = "ArithmeticLogic8Instruction_$41_2",
    ArithmeticLogic8Instruction_$42 = "ArithmeticLogic8Instruction_$42",
    ArithmeticLogic8Instruction_$43 = "ArithmeticLogic8Instruction_$43",
    ArithmeticLogic8Instruction_$44 = "ArithmeticLogic8Instruction_$44",
    ArithmeticLogic8Instruction_$45 = "ArithmeticLogic8Instruction_$45",
    ArithmeticLogic8Instruction_$46_1 = "ArithmeticLogic8Instruction_$46_1",
    ArithmeticLogic8Instruction_$46_2 = "ArithmeticLogic8Instruction_$46_2",
    ArithmeticLogic8Instruction_$47 = "ArithmeticLogic8Instruction_$47",
    ArithmeticLogic8Instruction_$48_1 = "ArithmeticLogic8Instruction_$48_1",
    ArithmeticLogic8Instruction_$48_2 = "ArithmeticLogic8Instruction_$48_2",
    ArithmeticLogic8Instruction_$49 = "ArithmeticLogic8Instruction_$49",
    ArithmeticLogic8Instruction_$50 = "ArithmeticLogic8Instruction_$50",
    ArithmeticLogic8Instruction_$51 = "ArithmeticLogic8Instruction_$51",
    ArithmeticLogic8Instruction_$52 = "ArithmeticLogic8Instruction_$52",
    ArithmeticLogic8Instruction_$53_1 = "ArithmeticLogic8Instruction_$53_1",
    ArithmeticLogic8Instruction_$53_2 = "ArithmeticLogic8Instruction_$53_2",
    ArithmeticLogic8Instruction_$54 = "ArithmeticLogic8Instruction_$54",
    ArithmeticLogic8Instruction_$55_1 = "ArithmeticLogic8Instruction_$55_1",
    ArithmeticLogic8Instruction_$55_2 = "ArithmeticLogic8Instruction_$55_2",
    IncrementDecrement8Instruction_1 = "IncrementDecrement8Instruction_1",
    IncrementDecrement8Instruction_2 = "IncrementDecrement8Instruction_2",
    IncrementDecrement8Instruction_3 = "IncrementDecrement8Instruction_3",
    IncrementDecrement8Instruction_4 = "IncrementDecrement8Instruction_4",
    IncrementDecrement8Instruction_5 = "IncrementDecrement8Instruction_5",
    IncrementDecrement8Instruction_6 = "IncrementDecrement8Instruction_6",
    IncrementDecrement8Instruction_7 = "IncrementDecrement8Instruction_7",
    IncrementDecrement8Instruction_8 = "IncrementDecrement8Instruction_8",
    IncrementDecrement8Instruction_$0_1 = "IncrementDecrement8Instruction_$0_1",
    IncrementDecrement8Instruction_$0_2 = "IncrementDecrement8Instruction_$0_2",
    IncrementDecrement8Instruction_$1_1 = "IncrementDecrement8Instruction_$1_1",
    IncrementDecrement8Instruction_$1_2 = "IncrementDecrement8Instruction_$1_2",
    IncrementDecrement8Instruction_$2_1 = "IncrementDecrement8Instruction_$2_1",
    IncrementDecrement8Instruction_$2_2 = "IncrementDecrement8Instruction_$2_2",
    IncrementDecrement8Instruction_$3_1 = "IncrementDecrement8Instruction_$3_1",
    IncrementDecrement8Instruction_$3_2 = "IncrementDecrement8Instruction_$3_2",
    GeneralPurposeArithmeticInstruction_1 = "GeneralPurposeArithmeticInstruction_1",
    GeneralPurposeArithmeticInstruction_2 = "GeneralPurposeArithmeticInstruction_2",
    GeneralPurposeArithmeticInstruction_3 = "GeneralPurposeArithmeticInstruction_3",
    GeneralPurposeArithmeticInstruction_4 = "GeneralPurposeArithmeticInstruction_4",
    GeneralPurposeArithmeticInstruction_5 = "GeneralPurposeArithmeticInstruction_5",
    CpuControlGroupInstruction_1 = "CpuControlGroupInstruction_1",
    CpuControlGroupInstruction_2 = "CpuControlGroupInstruction_2",
    CpuControlGroupInstruction_3 = "CpuControlGroupInstruction_3",
    CpuControlGroupInstruction_4 = "CpuControlGroupInstruction_4",
    CpuControlGroupInstruction_5 = "CpuControlGroupInstruction_5",
    ArithmeticLogic16Instruction_1 = "ArithmeticLogic16Instruction_1",
    ArithmeticLogic16Instruction_2 = "ArithmeticLogic16Instruction_2",
    ArithmeticLogic16Instruction_3 = "ArithmeticLogic16Instruction_3",
    ArithmeticLogic16Instruction_4 = "ArithmeticLogic16Instruction_4",
    ArithmeticLogic16Instruction_5 = "ArithmeticLogic16Instruction_5",
    ArithmeticLogic16Instruction_6 = "ArithmeticLogic16Instruction_6",
    ArithmeticLogic16Instruction_7 = "ArithmeticLogic16Instruction_7",
    ArithmeticLogic16Instruction_8 = "ArithmeticLogic16Instruction_8",
    ArithmeticLogic16Instruction_9 = "ArithmeticLogic16Instruction_9",
    ArithmeticLogic16Instruction_10 = "ArithmeticLogic16Instruction_10",
    ArithmeticLogic16Instruction_11 = "ArithmeticLogic16Instruction_11",
    RotateShiftInstruction_1 = "RotateShiftInstruction_1",
    RotateShiftInstruction_2 = "RotateShiftInstruction_2",
    RotateShiftInstruction_3 = "RotateShiftInstruction_3",
    RotateShiftInstruction_4 = "RotateShiftInstruction_4",
    RotateShiftInstruction_5 = "RotateShiftInstruction_5",
    RotateShiftInstruction_6 = "RotateShiftInstruction_6",
    RotateShiftInstruction_7 = "RotateShiftInstruction_7",
    RotateShiftInstruction_8 = "RotateShiftInstruction_8",
    RotateShiftInstruction_9 = "RotateShiftInstruction_9",
    RotateShiftInstruction_10 = "RotateShiftInstruction_10",
    RotateShiftInstruction_11 = "RotateShiftInstruction_11",
    RotateShiftInstruction_12 = "RotateShiftInstruction_12",
    RotateShiftInstruction_13 = "RotateShiftInstruction_13",
    RotateShiftInstruction_14 = "RotateShiftInstruction_14",
    RotateShiftInstruction_15 = "RotateShiftInstruction_15",
    RotateShiftInstruction_16 = "RotateShiftInstruction_16",
    RotateShiftInstruction_17 = "RotateShiftInstruction_17",
    RotateShiftInstruction_18 = "RotateShiftInstruction_18",
    RotateShiftInstruction_19 = "RotateShiftInstruction_19",
    RotateShiftInstruction_20 = "RotateShiftInstruction_20",
    RotateShiftInstruction_21 = "RotateShiftInstruction_21",
    RotateShiftInstruction_22 = "RotateShiftInstruction_22",
    RotateShiftInstruction_23 = "RotateShiftInstruction_23",
    RotateShiftInstruction_24 = "RotateShiftInstruction_24",
    RotateShiftInstruction_25 = "RotateShiftInstruction_25",
    RotateShiftInstruction_26 = "RotateShiftInstruction_26",
    RotateShiftInstruction_27 = "RotateShiftInstruction_27",
    RotateShiftInstruction_28 = "RotateShiftInstruction_28",
    RotateShiftInstruction_29 = "RotateShiftInstruction_29",
    RotateShiftInstruction_30 = "RotateShiftInstruction_30",
    RotateShiftInstruction_31 = "RotateShiftInstruction_31",
    RotateShiftInstruction_32 = "RotateShiftInstruction_32",
    RotateShiftInstruction_33 = "RotateShiftInstruction_33",
    RotateShiftInstruction_34 = "RotateShiftInstruction_34",
    RotateShiftInstruction_$0_1 = "RotateShiftInstruction_$0_1",
    RotateShiftInstruction_$0_2 = "RotateShiftInstruction_$0_2",
    RotateShiftInstruction_$1_1 = "RotateShiftInstruction_$1_1",
    RotateShiftInstruction_$1_2 = "RotateShiftInstruction_$1_2",
    RotateShiftInstruction_$2_1 = "RotateShiftInstruction_$2_1",
    RotateShiftInstruction_$2_2 = "RotateShiftInstruction_$2_2",
    RotateShiftInstruction_$3_1 = "RotateShiftInstruction_$3_1",
    RotateShiftInstruction_$3_2 = "RotateShiftInstruction_$3_2",
    RotateShiftInstruction_$4_1 = "RotateShiftInstruction_$4_1",
    RotateShiftInstruction_$4_2 = "RotateShiftInstruction_$4_2",
    RotateShiftInstruction_$5_1 = "RotateShiftInstruction_$5_1",
    RotateShiftInstruction_$5_2 = "RotateShiftInstruction_$5_2",
    RotateShiftInstruction_$6_1 = "RotateShiftInstruction_$6_1",
    RotateShiftInstruction_$6_2 = "RotateShiftInstruction_$6_2",
    RotateShiftInstruction_$7_1 = "RotateShiftInstruction_$7_1",
    RotateShiftInstruction_$7_2 = "RotateShiftInstruction_$7_2",
    RotateShiftInstruction_$8_1 = "RotateShiftInstruction_$8_1",
    RotateShiftInstruction_$8_2 = "RotateShiftInstruction_$8_2",
    RotateShiftInstruction_$9_1 = "RotateShiftInstruction_$9_1",
    RotateShiftInstruction_$9_2 = "RotateShiftInstruction_$9_2",
    RotateShiftInstruction_$10_1 = "RotateShiftInstruction_$10_1",
    RotateShiftInstruction_$10_2 = "RotateShiftInstruction_$10_2",
    RotateShiftInstruction_$11_1 = "RotateShiftInstruction_$11_1",
    RotateShiftInstruction_$11_2 = "RotateShiftInstruction_$11_2",
    RotateShiftInstruction_$12_1 = "RotateShiftInstruction_$12_1",
    RotateShiftInstruction_$12_2 = "RotateShiftInstruction_$12_2",
    RotateShiftInstruction_$13_1 = "RotateShiftInstruction_$13_1",
    RotateShiftInstruction_$13_2 = "RotateShiftInstruction_$13_2",
    BitManipulationInstruction_1 = "BitManipulationInstruction_1",
    BitManipulationInstruction_2 = "BitManipulationInstruction_2",
    BitManipulationInstruction_3 = "BitManipulationInstruction_3",
    BitManipulationInstruction_4 = "BitManipulationInstruction_4",
    BitManipulationInstruction_5 = "BitManipulationInstruction_5",
    BitManipulationInstruction_6 = "BitManipulationInstruction_6",
    BitManipulationInstruction_7 = "BitManipulationInstruction_7",
    BitManipulationInstruction_8 = "BitManipulationInstruction_8",
    BitManipulationInstruction_9 = "BitManipulationInstruction_9",
    BitManipulationInstruction_10 = "BitManipulationInstruction_10",
    BitManipulationInstruction_11 = "BitManipulationInstruction_11",
    BitManipulationInstruction_12 = "BitManipulationInstruction_12",
    BitManipulationInstruction_$0_1 = "BitManipulationInstruction_$0_1",
    BitManipulationInstruction_$0_2 = "BitManipulationInstruction_$0_2",
    BitManipulationInstruction_$1_1 = "BitManipulationInstruction_$1_1",
    BitManipulationInstruction_$1_2 = "BitManipulationInstruction_$1_2",
    BitManipulationInstruction_$2_1 = "BitManipulationInstruction_$2_1",
    BitManipulationInstruction_$2_2 = "BitManipulationInstruction_$2_2",
    BitManipulationInstruction_$3_1 = "BitManipulationInstruction_$3_1",
    BitManipulationInstruction_$3_2 = "BitManipulationInstruction_$3_2",
    BitManipulationInstruction_$4_1 = "BitManipulationInstruction_$4_1",
    BitManipulationInstruction_$4_2 = "BitManipulationInstruction_$4_2",
    BitManipulationInstruction_$5_1 = "BitManipulationInstruction_$5_1",
    BitManipulationInstruction_$5_2 = "BitManipulationInstruction_$5_2",
    Offset_1 = "Offset_1",
    Offset_2 = "Offset_2",
    JumpInstruction_1 = "JumpInstruction_1",
    JumpInstruction_2 = "JumpInstruction_2",
    JumpInstruction_3 = "JumpInstruction_3",
    JumpInstruction_4 = "JumpInstruction_4",
    JumpInstruction_5 = "JumpInstruction_5",
    JumpInstruction_6 = "JumpInstruction_6",
    JumpInstruction_7 = "JumpInstruction_7",
    JumpInstruction_8 = "JumpInstruction_8",
    JumpInstruction_9 = "JumpInstruction_9",
    JumpInstruction_10 = "JumpInstruction_10",
    JumpInstruction_11 = "JumpInstruction_11",
    CallInstruction_1 = "CallInstruction_1",
    CallInstruction_2 = "CallInstruction_2",
    ReturnInstruction_1 = "ReturnInstruction_1",
    ReturnInstruction_2 = "ReturnInstruction_2",
    ReturnInstruction_3 = "ReturnInstruction_3",
    ReturnInstruction_4 = "ReturnInstruction_4",
    ReturnInstruction_5 = "ReturnInstruction_5",
    InputInstruction_1 = "InputInstruction_1",
    InputInstruction_2 = "InputInstruction_2",
    InputInstruction_3 = "InputInstruction_3",
    InputInstruction_4 = "InputInstruction_4",
    InputInstruction_5 = "InputInstruction_5",
    InputInstruction_6 = "InputInstruction_6",
    OutputInstruction_1 = "OutputInstruction_1",
    OutputInstruction_2 = "OutputInstruction_2",
    OutputInstruction_3 = "OutputInstruction_3",
    OutputInstruction_4 = "OutputInstruction_4",
    OutputInstruction_5 = "OutputInstruction_5",
    OutputInstruction_6 = "OutputInstruction_6",
    ByteDirective_1 = "ByteDirective_1",
    ByteDirective_2 = "ByteDirective_2",
    ByteDirective_3 = "ByteDirective_3",
    ByteDirective_4 = "ByteDirective_4",
    ByteDirective_5 = "ByteDirective_5",
    WordDirective_1 = "WordDirective_1",
    WordDirective_2 = "WordDirective_2",
    WordDirective_3 = "WordDirective_3",
    BlockDirective_1 = "BlockDirective_1",
    BlockDirective_2 = "BlockDirective_2",
    BlockDirective_3 = "BlockDirective_3",
    ByteValue_1 = "ByteValue_1",
    ByteValue_2 = "ByteValue_2",
    ByteValue_3 = "ByteValue_3",
    ByteValue_4 = "ByteValue_4",
    WordValue = "WordValue",
    DataDirective_1 = "DataDirective_1",
    DataDirective_2 = "DataDirective_2",
    DataDirective_3 = "DataDirective_3",
    DataDirective_4 = "DataDirective_4",
    DataDirective_$0 = "DataDirective_$0",
    DataDirective_$1 = "DataDirective_$1",
    DataDirective_$2 = "DataDirective_$2",
    DataDirective_$3 = "DataDirective_$3",
    EscapeSequence_1 = "EscapeSequence_1",
    EscapeSequence_2 = "EscapeSequence_2",
    EscapeSequence_3 = "EscapeSequence_3",
    SimpleEscapeSequence = "SimpleEscapeSequence",
    SimpleEscapeSequence_$0_1 = "SimpleEscapeSequence_$0_1",
    SimpleEscapeSequence_$0_2 = "SimpleEscapeSequence_$0_2",
    SimpleEscapeSequence_$0_3 = "SimpleEscapeSequence_$0_3",
    SimpleEscapeSequence_$0_4 = "SimpleEscapeSequence_$0_4",
    SimpleEscapeSequence_$0_5 = "SimpleEscapeSequence_$0_5",
    SimpleEscapeSequence_$0_6 = "SimpleEscapeSequence_$0_6",
    SimpleEscapeSequence_$0_7 = "SimpleEscapeSequence_$0_7",
    SimpleEscapeSequence_$0_8 = "SimpleEscapeSequence_$0_8",
    SimpleEscapeSequence_$0_9 = "SimpleEscapeSequence_$0_9",
    SimpleEscapeSequence_$0_10 = "SimpleEscapeSequence_$0_10",
    SimpleEscapeSequence_$0_11 = "SimpleEscapeSequence_$0_11",
    SimpleEscapeSequence_$0_12 = "SimpleEscapeSequence_$0_12",
    OctalEscapeSequence = "OctalEscapeSequence",
    HexadecimalEscapeSequence = "HexadecimalEscapeSequence",
    SimpleChar = "SimpleChar",
    StringChar = "StringChar",
    Char = "Char",
    Char_$0_1 = "Char_$0_1",
    Char_$0_2 = "Char_$0_2",
    Str = "Str",
    Str_$0_1 = "Str_$0_1",
    Str_$0_2 = "Str_$0_2",
    ZX81Str = "ZX81Str",
    Comment = "Comment",
    OriginDirective = "OriginDirective",
    Filename_1 = "Filename_1",
    Filename_2 = "Filename_2",
    IncludeDirective = "IncludeDirective",
    OutputDirective = "OutputDirective",
    OutputDirective_$0 = "OutputDirective_$0",
    DeviceDirective = "DeviceDirective",
    $EOF = "$EOF",
}
export interface start {
    kind: ASTKinds.start;
    program: Program;
}
export type r = r_1 | r_2 | r_3 | r_4 | r_5 | r_6 | r_7;
export type r_1 = string;
export type r_2 = string;
export type r_3 = string;
export type r_4 = string;
export type r_5 = string;
export type r_6 = string;
export type r_7 = string;
export type dd = dd_1 | dd_2 | dd_3 | dd_4;
export type dd_1 = string;
export type dd_2 = string;
export type dd_3 = string;
export type dd_4 = string;
export type ss = dd;
export type qq = qq_1 | qq_2 | qq_3 | qq_4;
export type qq_1 = string;
export type qq_2 = string;
export type qq_3 = string;
export type qq_4 = string;
export type pp = pp_1 | pp_2 | pp_3 | pp_4;
export type pp_1 = string;
export type pp_2 = string;
export type pp_3 = string;
export type pp_4 = string;
export type rr = rr_1 | rr_2 | rr_3 | rr_4;
export type rr_1 = string;
export type rr_2 = string;
export type rr_3 = string;
export type rr_4 = string;
export type n = n_1 | n_2 | n_3 | n_4;
export class n_1 {
    public kind: ASTKinds.n_1 = ASTKinds.n_1;
    public pos: PosInfo;
    public binary: binary;
    public value: number;
    constructor(pos: PosInfo, binary: binary){
        this.pos = pos;
        this.binary = binary;
        this.value = ((): number => {
        return parseNumber(pos, binary.raw, 2, 1);
        })();
    }
}
export class n_2 {
    public kind: ASTKinds.n_2 = ASTKinds.n_2;
    public pos: PosInfo;
    public hexadecimal: hexadecimal;
    public value: number;
    constructor(pos: PosInfo, hexadecimal: hexadecimal){
        this.pos = pos;
        this.hexadecimal = hexadecimal;
        this.value = ((): number => {
        return parseNumber(pos, hexadecimal.raw, 16, 1);
        })();
    }
}
export class n_3 {
    public kind: ASTKinds.n_3 = ASTKinds.n_3;
    public pos: PosInfo;
    public octal: octal;
    public value: number;
    constructor(pos: PosInfo, octal: octal){
        this.pos = pos;
        this.octal = octal;
        this.value = ((): number => {
        return parseNumber(pos, octal.raw, 8, 1);
        })();
    }
}
export class n_4 {
    public kind: ASTKinds.n_4 = ASTKinds.n_4;
    public pos: PosInfo;
    public decimal: decimal;
    public value: number;
    constructor(pos: PosInfo, decimal: decimal){
        this.pos = pos;
        this.decimal = decimal;
        this.value = ((): number => {
        return parseNumber(pos, decimal.raw, 10, 1);
        })();
    }
}
export type nn = nn_1 | nn_2 | nn_3 | nn_4;
export class nn_1 {
    public kind: ASTKinds.nn_1 = ASTKinds.nn_1;
    public pos: PosInfo;
    public binary: binary;
    public value: number;
    constructor(pos: PosInfo, binary: binary){
        this.pos = pos;
        this.binary = binary;
        this.value = ((): number => {
        return parseNumber(pos, binary.raw, 2, 2);
        })();
    }
}
export class nn_2 {
    public kind: ASTKinds.nn_2 = ASTKinds.nn_2;
    public pos: PosInfo;
    public hexadecimal: hexadecimal;
    public value: number;
    constructor(pos: PosInfo, hexadecimal: hexadecimal){
        this.pos = pos;
        this.hexadecimal = hexadecimal;
        this.value = ((): number => {
        return parseNumber(pos, hexadecimal.raw, 16, 2);
        })();
    }
}
export class nn_3 {
    public kind: ASTKinds.nn_3 = ASTKinds.nn_3;
    public pos: PosInfo;
    public octal: octal;
    public value: number;
    constructor(pos: PosInfo, octal: octal){
        this.pos = pos;
        this.octal = octal;
        this.value = ((): number => {
        return parseNumber(pos, octal.raw, 8, 2);
        })();
    }
}
export class nn_4 {
    public kind: ASTKinds.nn_4 = ASTKinds.nn_4;
    public pos: PosInfo;
    public decimal: decimal;
    public value: number;
    constructor(pos: PosInfo, decimal: decimal){
        this.pos = pos;
        this.decimal = decimal;
        this.value = ((): number => {
        return parseNumber(pos, decimal.raw, 10, 2);
        })();
    }
}
export interface decimal {
    kind: ASTKinds.decimal;
    raw: string;
}
export interface binary {
    kind: ASTKinds.binary;
    raw: string;
}
export type binary_$0 = binary_$0_1 | binary_$0_2;
export type binary_$0_1 = string;
export type binary_$0_2 = string;
export type octal = octal_1 | octal_2;
export interface octal_1 {
    kind: ASTKinds.octal_1;
    raw: string;
}
export interface octal_2 {
    kind: ASTKinds.octal_2;
    raw: string;
}
export type octal_$0 = octal_$0_1 | octal_$0_2;
export type octal_$0_1 = string;
export type octal_$0_2 = string;
export type octal_$1 = octal_$1_1 | octal_$1_2;
export type octal_$1_1 = string;
export type octal_$1_2 = string;
export type hexadecimal = hexadecimal_1 | hexadecimal_2;
export interface hexadecimal_1 {
    kind: ASTKinds.hexadecimal_1;
    raw: string;
}
export interface hexadecimal_2 {
    kind: ASTKinds.hexadecimal_2;
    raw: string;
}
export type hexadecimal_$0 = hexadecimal_$0_1 | hexadecimal_$0_2 | hexadecimal_$0_3;
export type hexadecimal_$0_1 = string;
export type hexadecimal_$0_2 = string;
export type hexadecimal_$0_3 = string;
export type d = n;
export type e = n;
export type p = n;
export class b {
    public kind: ASTKinds.b = ASTKinds.b;
    public raw: string;
    public value: number;
    constructor(raw: string){
        this.raw = raw;
        this.value = ((): number => {
        return parseInt(raw);
        })();
    }
}
export type cc = cc_1 | cc_2 | cc_3 | cc_4 | cc_5 | cc_6 | cc_7 | cc_8 | cc_9;
export type cc_1 = string;
export type cc_2 = string;
export type cc_3 = string;
export type cc_4 = string;
export type cc_5 = string;
export type cc_6 = string;
export type cc_7 = string;
export type cc_8 = string;
export type cc_9 = string;
export type jj = jj_1 | jj_2 | jj_3 | jj_4;
export type jj_1 = string;
export type jj_2 = string;
export type jj_3 = string;
export type jj_4 = string;
export type __ = string;
export type _ = string;
export type _eos = string;
export type Program = Line[];
export type Line = Line_1 | Line_2;
export type Line_1 = LineEqual;
export type Line_2 = LineStatement;
export type Equal = string;
export interface LineEqual {
    kind: ASTKinds.LineEqual;
    label: LabelDeclaration;
    e: Expression;
    comment: Nullable<Comment>;
}
export interface LineStatement {
    kind: ASTKinds.LineStatement;
    label: Nullable<LabelDeclaration>;
    statement: Nullable<Statement>;
    comment: Nullable<Comment>;
}
export type Statement = Statement_1 | Statement_2;
export class Statement_1 {
    public kind: ASTKinds.Statement_1 = ASTKinds.Statement_1;
    public instruction: Instruction;
    public bytes: Bytes;
    public address: Address;
    constructor(instruction: Instruction){
        this.instruction = instruction;
        this.bytes = ((): Bytes => {
        return instruction.bytes;
        })();
        this.address = ((): Address => {
        return null;
        })();
    }
}
export class Statement_2 {
    public kind: ASTKinds.Statement_2 = ASTKinds.Statement_2;
    public directive: Directive;
    public bytes: Bytes;
    public address: Address;
    constructor(directive: Directive){
        this.directive = directive;
        this.bytes = ((): Bytes => {
        return directive.bytes;
        })();
        this.address = ((): Address => {
        return directive.address;
        })();
    }
}
export type Directive = Directive_1 | Directive_2 | Directive_3 | Directive_4 | Directive_5;
export class Directive_1 {
    public kind: ASTKinds.Directive_1 = ASTKinds.Directive_1;
    public data: DataDirective;
    public bytes: Bytes;
    public address: Address;
    constructor(data: DataDirective){
        this.data = data;
        this.bytes = ((): Bytes => {
        return data.bytes;
        })();
        this.address = ((): Address => {
        return null;
        })();
    }
}
export class Directive_2 {
    public kind: ASTKinds.Directive_2 = ASTKinds.Directive_2;
    public origin: OriginDirective;
    public bytes: Bytes;
    public address: Address;
    constructor(origin: OriginDirective){
        this.origin = origin;
        this.bytes = ((): Bytes => {
        return [];
        })();
        this.address = ((): Address => {
        return origin.address.value;
        })();
    }
}
export class Directive_3 {
    public kind: ASTKinds.Directive_3 = ASTKinds.Directive_3;
    public directive: IncludeDirective;
    public bytes: Bytes;
    public address: Address;
    constructor(directive: IncludeDirective){
        this.directive = directive;
        this.bytes = ((): Bytes => {
        return directive.bytes;
        })();
        this.address = ((): Address => {
        return null;
        })();
    }
}
export class Directive_4 {
    public kind: ASTKinds.Directive_4 = ASTKinds.Directive_4;
    public directive: OutputDirective;
    public bytes: Bytes;
    public address: Address;
    constructor(directive: OutputDirective){
        this.directive = directive;
        this.bytes = ((): Bytes => {
        return [];
        })();
        this.address = ((): Address => {
        return null;
        })();
    }
}
export class Directive_5 {
    public kind: ASTKinds.Directive_5 = ASTKinds.Directive_5;
    public directive: DeviceDirective;
    public bytes: Bytes;
    public address: Address;
    constructor(directive: DeviceDirective){
        this.directive = directive;
        this.bytes = ((): Bytes => {
        return [];
        })();
        this.address = ((): Address => {
        return null;
        })();
    }
}
export type ForbiddenNames = ForbiddenNames_1 | ForbiddenNames_2 | ForbiddenNames_3 | ForbiddenNames_4 | ForbiddenNames_5;
export type ForbiddenNames_1 = string;
export type ForbiddenNames_2 = string;
export type ForbiddenNames_3 = string;
export type ForbiddenNames_4 = string;
export type ForbiddenNames_5 = string;
export interface ForbiddenLabel {
    kind: ASTKinds.ForbiddenLabel;
}
export interface Label {
    kind: ASTKinds.Label;
    pos: PosInfo;
    name: string;
}
export interface LabelDeclaration {
    kind: ASTKinds.LabelDeclaration;
    pos: PosInfo;
    name: string;
}
export class Expression {
    public kind: ASTKinds.Expression = ASTKinds.Expression;
    public e1: BitwiseOrExpression;
    public eval: EvalFunc;
    constructor(e1: BitwiseOrExpression){
        this.e1 = e1;
        this.eval = ((): EvalFunc => {
        return e1.eval;
        })();
    }
}
export class BitwiseOrExpression {
    public kind: ASTKinds.BitwiseOrExpression = ASTKinds.BitwiseOrExpression;
    public left: BitwiseXOrExpression;
    public right: BitwiseOrExpression_$0[];
    public eval: EvalFunc;
    constructor(left: BitwiseXOrExpression, right: BitwiseOrExpression_$0[]){
        this.left = left;
        this.right = right;
        this.eval = ((): EvalFunc => {
        return binaryOperation(left, right, operatorOr);
        })();
    }
}
export interface BitwiseOrExpression_$0 {
    kind: ASTKinds.BitwiseOrExpression_$0;
    e: BitwiseOrExpression;
}
export class BitwiseXOrExpression {
    public kind: ASTKinds.BitwiseXOrExpression = ASTKinds.BitwiseXOrExpression;
    public left: BitwiseAndExpression;
    public right: BitwiseXOrExpression_$0[];
    public eval: EvalFunc;
    constructor(left: BitwiseAndExpression, right: BitwiseXOrExpression_$0[]){
        this.left = left;
        this.right = right;
        this.eval = ((): EvalFunc => {
        return binaryOperation(left, right, operatorXor);
        })();
    }
}
export interface BitwiseXOrExpression_$0 {
    kind: ASTKinds.BitwiseXOrExpression_$0;
    e: BitwiseXOrExpression;
}
export class BitwiseAndExpression {
    public kind: ASTKinds.BitwiseAndExpression = ASTKinds.BitwiseAndExpression;
    public left: ShiftExpression;
    public right: BitwiseAndExpression_$0[];
    public eval: EvalFunc;
    constructor(left: ShiftExpression, right: BitwiseAndExpression_$0[]){
        this.left = left;
        this.right = right;
        this.eval = ((): EvalFunc => {
        return binaryOperation(left, right, operatorAnd);
        })();
    }
}
export interface BitwiseAndExpression_$0 {
    kind: ASTKinds.BitwiseAndExpression_$0;
    e: BitwiseAndExpression;
}
export class ShiftExpression {
    public kind: ASTKinds.ShiftExpression = ASTKinds.ShiftExpression;
    public left: AdditiveExpression;
    public right: ShiftExpression_$0[];
    public eval: EvalFunc;
    constructor(left: AdditiveExpression, right: ShiftExpression_$0[]){
        this.left = left;
        this.right = right;
        this.eval = ((): EvalFunc => {
        return binaryOperations(left, right, {'<<': operatorLeftShift, '>>': operatorRightShift});
        })();
    }
}
export interface ShiftExpression_$0 {
    kind: ASTKinds.ShiftExpression_$0;
    op: ShiftExpression_$0_$0;
    e: ShiftExpression;
}
export type ShiftExpression_$0_$0 = ShiftExpression_$0_$0_1 | ShiftExpression_$0_$0_2;
export type ShiftExpression_$0_$0_1 = string;
export type ShiftExpression_$0_$0_2 = string;
export class AdditiveExpression {
    public kind: ASTKinds.AdditiveExpression = ASTKinds.AdditiveExpression;
    public left: MultiplicativeExpression;
    public right: AdditiveExpression_$0[];
    public eval: EvalFunc;
    constructor(left: MultiplicativeExpression, right: AdditiveExpression_$0[]){
        this.left = left;
        this.right = right;
        this.eval = ((): EvalFunc => {
        return binaryOperations(left, right, {'+': operatorAdd, '-': operatorSub});
        })();
    }
}
export interface AdditiveExpression_$0 {
    kind: ASTKinds.AdditiveExpression_$0;
    op: AdditiveExpression_$0_$0;
    e: AdditiveExpression;
}
export type AdditiveExpression_$0_$0 = AdditiveExpression_$0_$0_1 | AdditiveExpression_$0_$0_2;
export type AdditiveExpression_$0_$0_1 = string;
export type AdditiveExpression_$0_$0_2 = string;
export class MultiplicativeExpression {
    public kind: ASTKinds.MultiplicativeExpression = ASTKinds.MultiplicativeExpression;
    public left: UnaryExpression;
    public right: MultiplicativeExpression_$0[];
    public eval: EvalFunc;
    constructor(left: UnaryExpression, right: MultiplicativeExpression_$0[]){
        this.left = left;
        this.right = right;
        this.eval = ((): EvalFunc => {
        return binaryOperations(left, right, {'*': operatorMul, '/': operatorDiv, '%': operatorModulo} );
        })();
    }
}
export interface MultiplicativeExpression_$0 {
    kind: ASTKinds.MultiplicativeExpression_$0;
    op: MultiplicativeExpression_$0_$0;
    e: MultiplicativeExpression;
}
export type MultiplicativeExpression_$0_$0 = MultiplicativeExpression_$0_$0_1 | MultiplicativeExpression_$0_$0_2 | MultiplicativeExpression_$0_$0_3;
export type MultiplicativeExpression_$0_$0_1 = string;
export type MultiplicativeExpression_$0_$0_2 = string;
export type MultiplicativeExpression_$0_$0_3 = string;
export type UnaryExpression = UnaryExpression_1 | UnaryExpression_2;
export class UnaryExpression_1 {
    public kind: ASTKinds.UnaryExpression_1 = ASTKinds.UnaryExpression_1;
    public op: UnaryExpression_$0;
    public e: PrimaryExpression;
    public eval: EvalFunc;
    constructor(op: UnaryExpression_$0, e: PrimaryExpression){
        this.op = op;
        this.e = e;
        this.eval = ((): EvalFunc => {
        return unaryOperations(e, op, {'~': operatorInvert, '+': operatorPlus, '-': operatorNeg} );
        })();
    }
}
export class UnaryExpression_2 {
    public kind: ASTKinds.UnaryExpression_2 = ASTKinds.UnaryExpression_2;
    public e: PrimaryExpression;
    public eval: EvalFunc;
    constructor(e: PrimaryExpression){
        this.e = e;
        this.eval = ((): EvalFunc => {
        return unaryOperation(e, operatorIdentity);
        })();
    }
}
export type UnaryExpression_$0 = UnaryExpression_$0_1 | UnaryExpression_$0_2 | UnaryExpression_$0_3;
export type UnaryExpression_$0_1 = string;
export type UnaryExpression_$0_2 = string;
export type UnaryExpression_$0_3 = string;
export type PrimaryExpression = PrimaryExpression_1 | PrimaryExpression_2 | PrimaryExpression_3;
export class PrimaryExpression_1 {
    public kind: ASTKinds.PrimaryExpression_1 = ASTKinds.PrimaryExpression_1;
    public nn: nn;
    public eval: EvalFunc;
    constructor(nn: nn){
        this.nn = nn;
        this.eval = ((): EvalFunc => {
        return () => nn.value;
        })();
    }
}
export class PrimaryExpression_2 {
    public kind: ASTKinds.PrimaryExpression_2 = ASTKinds.PrimaryExpression_2;
    public pos: PosInfo;
    public label: Label;
    public eval: EvalFunc;
    constructor(pos: PosInfo, label: Label){
        this.pos = pos;
        this.label = label;
        this.eval = ((): EvalFunc => {
        return () => getLabelValue(label.name);
        })();
    }
}
export class PrimaryExpression_3 {
    public kind: ASTKinds.PrimaryExpression_3 = ASTKinds.PrimaryExpression_3;
    public e: BitwiseOrExpression;
    public eval: EvalFunc;
    constructor(e: BitwiseOrExpression){
        this.e = e;
        this.eval = ((): EvalFunc => {
        return unaryOperation(e, operatorIdentity);
        })();
    }
}
export interface Reg8 {
    kind: ASTKinds.Reg8;
    reg: r;
}
export type Instruction = Instruction_1 | Instruction_2 | Instruction_3 | Instruction_4 | Instruction_5 | Instruction_6 | Instruction_7 | Instruction_8 | Instruction_9 | Instruction_10 | Instruction_11 | Instruction_12 | Instruction_13 | Instruction_14 | Instruction_15 | Instruction_16;
export type Instruction_1 = Load8Instruction;
export type Instruction_2 = Load16Instruction;
export type Instruction_3 = ExchangeInstruction;
export type Instruction_4 = BlockInstruction;
export type Instruction_5 = ArithmeticLogic8Instruction;
export type Instruction_6 = IncrementDecrement8Instruction;
export type Instruction_7 = GeneralPurposeArithmeticInstruction;
export type Instruction_8 = ArithmeticLogic16Instruction;
export type Instruction_9 = RotateShiftInstruction;
export type Instruction_10 = BitManipulationInstruction;
export type Instruction_11 = JumpInstruction;
export type Instruction_12 = CallInstruction;
export type Instruction_13 = ReturnInstruction;
export type Instruction_14 = InputInstruction;
export type Instruction_15 = OutputInstruction;
export type Instruction_16 = CpuControlGroupInstruction;
export type Load8Instruction = Load8Instruction_1 | Load8Instruction_2 | Load8Instruction_3 | Load8Instruction_4 | Load8Instruction_5 | Load8Instruction_6 | Load8Instruction_7 | Load8Instruction_8 | Load8Instruction_9 | Load8Instruction_10 | Load8Instruction_11 | Load8Instruction_12 | Load8Instruction_13 | Load8Instruction_14 | Load8Instruction_15 | Load8Instruction_16 | Load8Instruction_17 | Load8Instruction_18 | Load8Instruction_19 | Load8Instruction_20 | Load8Instruction_21;
export class Load8Instruction_1 {
    public kind: ASTKinds.Load8Instruction_1 = ASTKinds.Load8Instruction_1;
    public r0: Reg8;
    public r1: Reg8;
    public bytes: Bytes;
    constructor(r0: Reg8, r1: Reg8){
        this.r0 = r0;
        this.r1 = r1;
        this.bytes = ((): Bytes => {
        return [0b01000000 | r_bits(r0.reg, 3) | r_bits(r1.reg)];
        })();
    }
}
export class Load8Instruction_2 {
    public kind: ASTKinds.Load8Instruction_2 = ASTKinds.Load8Instruction_2;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b01000110 | r_bits(r, 3)];
        })();
    }
}
export class Load8Instruction_3 {
    public kind: ASTKinds.Load8Instruction_3 = ASTKinds.Load8Instruction_3;
    public r: r;
    public s: Load8Instruction_$0;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(r: r, s: Load8Instruction_$0, pos: PosInfo, d: Expression){
        this.r = r;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0b01000110 | r_bits(r, 3), svalue8(pos, s, d)];
        })();
    }
}
export class Load8Instruction_4 {
    public kind: ASTKinds.Load8Instruction_4 = ASTKinds.Load8Instruction_4;
    public r: r;
    public s: Load8Instruction_$1;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(r: r, s: Load8Instruction_$1, pos: PosInfo, d: Expression){
        this.r = r;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0b01000110 | r_bits(r, 3), svalue8(pos, s, d)];
        })();
    }
}
export class Load8Instruction_5 {
    public kind: ASTKinds.Load8Instruction_5 = ASTKinds.Load8Instruction_5;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b01110000 | r_bits(r)];
        })();
    }
}
export class Load8Instruction_6 {
    public kind: ASTKinds.Load8Instruction_6 = ASTKinds.Load8Instruction_6;
    public s: Load8Instruction_$2;
    public pos: PosInfo;
    public d: Expression;
    public r: r;
    public bytes: Bytes;
    constructor(s: Load8Instruction_$2, pos: PosInfo, d: Expression, r: r){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xDD, 0b01110000 | r_bits(r), svalue8(pos, s, d)];
        })();
    }
}
export class Load8Instruction_7 {
    public kind: ASTKinds.Load8Instruction_7 = ASTKinds.Load8Instruction_7;
    public s: Load8Instruction_$3;
    public pos: PosInfo;
    public d: Expression;
    public r: r;
    public bytes: Bytes;
    constructor(s: Load8Instruction_$3, pos: PosInfo, d: Expression, r: r){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xFD, 0b01110000 | r_bits(r), svalue8(pos, s, d)];
        })();
    }
}
export class Load8Instruction_8 {
    public kind: ASTKinds.Load8Instruction_8 = ASTKinds.Load8Instruction_8;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0x36, value8(pos, n)];
        })();
    }
}
export class Load8Instruction_9 {
    public kind: ASTKinds.Load8Instruction_9 = ASTKinds.Load8Instruction_9;
    public s: Load8Instruction_$4;
    public pos0: PosInfo;
    public d: Expression;
    public pos1: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(s: Load8Instruction_$4, pos0: PosInfo, d: Expression, pos1: PosInfo, n: Expression){
        this.s = s;
        this.pos0 = pos0;
        this.d = d;
        this.pos1 = pos1;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x36, svalue8(pos0, s, d), value8(pos1, n)];
        })();
    }
}
export class Load8Instruction_10 {
    public kind: ASTKinds.Load8Instruction_10 = ASTKinds.Load8Instruction_10;
    public s: Load8Instruction_$5;
    public pos0: PosInfo;
    public d: Expression;
    public pos1: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(s: Load8Instruction_$5, pos0: PosInfo, d: Expression, pos1: PosInfo, n: Expression){
        this.s = s;
        this.pos0 = pos0;
        this.d = d;
        this.pos1 = pos1;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x36, svalue8(pos0, s, d), value8(pos1, n)];
        })();
    }
}
export class Load8Instruction_11 {
    public kind: ASTKinds.Load8Instruction_11 = ASTKinds.Load8Instruction_11;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x0A];
        })();
    }
}
export class Load8Instruction_12 {
    public kind: ASTKinds.Load8Instruction_12 = ASTKinds.Load8Instruction_12;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x1A];
        })();
    }
}
export class Load8Instruction_13 {
    public kind: ASTKinds.Load8Instruction_13 = ASTKinds.Load8Instruction_13;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0x3A, value16LE(pos, ee)];
        })();
    }
}
export class Load8Instruction_14 {
    public kind: ASTKinds.Load8Instruction_14 = ASTKinds.Load8Instruction_14;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x02];
        })();
    }
}
export class Load8Instruction_15 {
    public kind: ASTKinds.Load8Instruction_15 = ASTKinds.Load8Instruction_15;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x12];
        })();
    }
}
export class Load8Instruction_16 {
    public kind: ASTKinds.Load8Instruction_16 = ASTKinds.Load8Instruction_16;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0x32, value16LE(pos, ee)];
        })();
    }
}
export class Load8Instruction_17 {
    public kind: ASTKinds.Load8Instruction_17 = ASTKinds.Load8Instruction_17;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x57];
        })();
    }
}
export class Load8Instruction_18 {
    public kind: ASTKinds.Load8Instruction_18 = ASTKinds.Load8Instruction_18;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x5F];
        })();
    }
}
export class Load8Instruction_19 {
    public kind: ASTKinds.Load8Instruction_19 = ASTKinds.Load8Instruction_19;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x47];
        })();
    }
}
export class Load8Instruction_20 {
    public kind: ASTKinds.Load8Instruction_20 = ASTKinds.Load8Instruction_20;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x4F];
        })();
    }
}
export class Load8Instruction_21 {
    public kind: ASTKinds.Load8Instruction_21 = ASTKinds.Load8Instruction_21;
    public r: Reg8;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(r: Reg8, pos: PosInfo, n: Expression){
        this.r = r;
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0b00000110 | r_bits(r.reg, 3), value8(pos, n)];
        })();
    }
}
export type Load8Instruction_$0 = Load8Instruction_$0_1 | Load8Instruction_$0_2;
export type Load8Instruction_$0_1 = string;
export type Load8Instruction_$0_2 = string;
export type Load8Instruction_$1 = Load8Instruction_$1_1 | Load8Instruction_$1_2;
export type Load8Instruction_$1_1 = string;
export type Load8Instruction_$1_2 = string;
export type Load8Instruction_$2 = Load8Instruction_$2_1 | Load8Instruction_$2_2;
export type Load8Instruction_$2_1 = string;
export type Load8Instruction_$2_2 = string;
export type Load8Instruction_$3 = Load8Instruction_$3_1 | Load8Instruction_$3_2;
export type Load8Instruction_$3_1 = string;
export type Load8Instruction_$3_2 = string;
export type Load8Instruction_$4 = Load8Instruction_$4_1 | Load8Instruction_$4_2;
export type Load8Instruction_$4_1 = string;
export type Load8Instruction_$4_2 = string;
export type Load8Instruction_$5 = Load8Instruction_$5_1 | Load8Instruction_$5_2;
export type Load8Instruction_$5_1 = string;
export type Load8Instruction_$5_2 = string;
export type Load16Instruction = Load16Instruction_1 | Load16Instruction_2 | Load16Instruction_3 | Load16Instruction_4 | Load16Instruction_5 | Load16Instruction_6 | Load16Instruction_7 | Load16Instruction_8 | Load16Instruction_9 | Load16Instruction_10 | Load16Instruction_11 | Load16Instruction_12 | Load16Instruction_13 | Load16Instruction_14 | Load16Instruction_15 | Load16Instruction_16 | Load16Instruction_17 | Load16Instruction_18 | Load16Instruction_19 | Load16Instruction_20;
export class Load16Instruction_1 {
    public kind: ASTKinds.Load16Instruction_1 = ASTKinds.Load16Instruction_1;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x21, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_2 {
    public kind: ASTKinds.Load16Instruction_2 = ASTKinds.Load16Instruction_2;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x21, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_3 {
    public kind: ASTKinds.Load16Instruction_3 = ASTKinds.Load16Instruction_3;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0x2A, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_4 {
    public kind: ASTKinds.Load16Instruction_4 = ASTKinds.Load16Instruction_4;
    public dd: dd;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(dd: dd, pos: PosInfo, ee: Expression){
        this.dd = dd;
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xED, 0b01001011 | dd_bits(dd, 4), value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_5 {
    public kind: ASTKinds.Load16Instruction_5 = ASTKinds.Load16Instruction_5;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x2A, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_6 {
    public kind: ASTKinds.Load16Instruction_6 = ASTKinds.Load16Instruction_6;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x2A, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_7 {
    public kind: ASTKinds.Load16Instruction_7 = ASTKinds.Load16Instruction_7;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0x22, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_8 {
    public kind: ASTKinds.Load16Instruction_8 = ASTKinds.Load16Instruction_8;
    public pos: PosInfo;
    public ee: Expression;
    public dd: dd;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression, dd: dd){
        this.pos = pos;
        this.ee = ee;
        this.dd = dd;
        this.bytes = ((): Bytes => {
        return [0xED, 0b01000011 | dd_bits(dd, 4), value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_9 {
    public kind: ASTKinds.Load16Instruction_9 = ASTKinds.Load16Instruction_9;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x22, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_10 {
    public kind: ASTKinds.Load16Instruction_10 = ASTKinds.Load16Instruction_10;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x22, value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_11 {
    public kind: ASTKinds.Load16Instruction_11 = ASTKinds.Load16Instruction_11;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xF9];
        })();
    }
}
export class Load16Instruction_12 {
    public kind: ASTKinds.Load16Instruction_12 = ASTKinds.Load16Instruction_12;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xDD, 0xF9];
        })();
    }
}
export class Load16Instruction_13 {
    public kind: ASTKinds.Load16Instruction_13 = ASTKinds.Load16Instruction_13;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFD, 0xF9];
        })();
    }
}
export class Load16Instruction_14 {
    public kind: ASTKinds.Load16Instruction_14 = ASTKinds.Load16Instruction_14;
    public dd: dd;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(dd: dd, pos: PosInfo, ee: Expression){
        this.dd = dd;
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0b00000001 | dd_bits(dd, 4), value16LE(pos, ee)];
        })();
    }
}
export class Load16Instruction_15 {
    public kind: ASTKinds.Load16Instruction_15 = ASTKinds.Load16Instruction_15;
    public qq: qq;
    public bytes: Bytes;
    constructor(qq: qq){
        this.qq = qq;
        this.bytes = ((): Bytes => {
        return [0b11000101 | qq_bits(qq, 4)];
        })();
    }
}
export class Load16Instruction_16 {
    public kind: ASTKinds.Load16Instruction_16 = ASTKinds.Load16Instruction_16;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xDD, 0xE5];
        })();
    }
}
export class Load16Instruction_17 {
    public kind: ASTKinds.Load16Instruction_17 = ASTKinds.Load16Instruction_17;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFD, 0xE5];
        })();
    }
}
export class Load16Instruction_18 {
    public kind: ASTKinds.Load16Instruction_18 = ASTKinds.Load16Instruction_18;
    public qq: qq;
    public bytes: Bytes;
    constructor(qq: qq){
        this.qq = qq;
        this.bytes = ((): Bytes => {
        return [0b11000001 | qq_bits(qq, 4)];
        })();
    }
}
export class Load16Instruction_19 {
    public kind: ASTKinds.Load16Instruction_19 = ASTKinds.Load16Instruction_19;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xDD, 0xE1];
        })();
    }
}
export class Load16Instruction_20 {
    public kind: ASTKinds.Load16Instruction_20 = ASTKinds.Load16Instruction_20;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFD, 0xE1];
        })();
    }
}
export type ExchangeInstruction = ExchangeInstruction_1 | ExchangeInstruction_2 | ExchangeInstruction_3 | ExchangeInstruction_4 | ExchangeInstruction_5 | ExchangeInstruction_6;
export class ExchangeInstruction_1 {
    public kind: ASTKinds.ExchangeInstruction_1 = ASTKinds.ExchangeInstruction_1;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xEB];
        })();
    }
}
export class ExchangeInstruction_2 {
    public kind: ASTKinds.ExchangeInstruction_2 = ASTKinds.ExchangeInstruction_2;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x08];
        })();
    }
}
export class ExchangeInstruction_3 {
    public kind: ASTKinds.ExchangeInstruction_3 = ASTKinds.ExchangeInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xD9];
        })();
    }
}
export class ExchangeInstruction_4 {
    public kind: ASTKinds.ExchangeInstruction_4 = ASTKinds.ExchangeInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xE3];
        })();
    }
}
export class ExchangeInstruction_5 {
    public kind: ASTKinds.ExchangeInstruction_5 = ASTKinds.ExchangeInstruction_5;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xDD, 0xE3];
        })();
    }
}
export class ExchangeInstruction_6 {
    public kind: ASTKinds.ExchangeInstruction_6 = ASTKinds.ExchangeInstruction_6;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFD, 0xE3];
        })();
    }
}
export type BlockInstruction = BlockInstruction_1 | BlockInstruction_2 | BlockInstruction_3 | BlockInstruction_4 | BlockInstruction_5 | BlockInstruction_6 | BlockInstruction_7 | BlockInstruction_8;
export class BlockInstruction_1 {
    public kind: ASTKinds.BlockInstruction_1 = ASTKinds.BlockInstruction_1;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xB0];
        })();
    }
}
export class BlockInstruction_2 {
    public kind: ASTKinds.BlockInstruction_2 = ASTKinds.BlockInstruction_2;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xA0];
        })();
    }
}
export class BlockInstruction_3 {
    public kind: ASTKinds.BlockInstruction_3 = ASTKinds.BlockInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xB8];
        })();
    }
}
export class BlockInstruction_4 {
    public kind: ASTKinds.BlockInstruction_4 = ASTKinds.BlockInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xA8];
        })();
    }
}
export class BlockInstruction_5 {
    public kind: ASTKinds.BlockInstruction_5 = ASTKinds.BlockInstruction_5;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xB1];
        })();
    }
}
export class BlockInstruction_6 {
    public kind: ASTKinds.BlockInstruction_6 = ASTKinds.BlockInstruction_6;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xA1];
        })();
    }
}
export class BlockInstruction_7 {
    public kind: ASTKinds.BlockInstruction_7 = ASTKinds.BlockInstruction_7;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xB9];
        })();
    }
}
export class BlockInstruction_8 {
    public kind: ASTKinds.BlockInstruction_8 = ASTKinds.BlockInstruction_8;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xA9];
        })();
    }
}
export type ArithmeticLogic8Instruction = ArithmeticLogic8Instruction_1 | ArithmeticLogic8Instruction_2 | ArithmeticLogic8Instruction_3 | ArithmeticLogic8Instruction_4 | ArithmeticLogic8Instruction_5 | ArithmeticLogic8Instruction_6 | ArithmeticLogic8Instruction_7 | ArithmeticLogic8Instruction_8 | ArithmeticLogic8Instruction_9 | ArithmeticLogic8Instruction_10 | ArithmeticLogic8Instruction_11 | ArithmeticLogic8Instruction_12 | ArithmeticLogic8Instruction_13 | ArithmeticLogic8Instruction_14 | ArithmeticLogic8Instruction_15 | ArithmeticLogic8Instruction_16 | ArithmeticLogic8Instruction_17 | ArithmeticLogic8Instruction_18 | ArithmeticLogic8Instruction_19 | ArithmeticLogic8Instruction_20 | ArithmeticLogic8Instruction_21 | ArithmeticLogic8Instruction_22 | ArithmeticLogic8Instruction_23 | ArithmeticLogic8Instruction_24 | ArithmeticLogic8Instruction_25 | ArithmeticLogic8Instruction_26 | ArithmeticLogic8Instruction_27 | ArithmeticLogic8Instruction_28 | ArithmeticLogic8Instruction_29 | ArithmeticLogic8Instruction_30 | ArithmeticLogic8Instruction_31 | ArithmeticLogic8Instruction_32 | ArithmeticLogic8Instruction_33 | ArithmeticLogic8Instruction_34 | ArithmeticLogic8Instruction_35 | ArithmeticLogic8Instruction_36 | ArithmeticLogic8Instruction_37 | ArithmeticLogic8Instruction_38 | ArithmeticLogic8Instruction_39 | ArithmeticLogic8Instruction_40;
export class ArithmeticLogic8Instruction_1 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_1 = ASTKinds.ArithmeticLogic8Instruction_1;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10000000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_2 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_2 = ASTKinds.ArithmeticLogic8Instruction_2;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xC6, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_3 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_3 = ASTKinds.ArithmeticLogic8Instruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x86];
        })();
    }
}
export class ArithmeticLogic8Instruction_4 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_4 = ASTKinds.ArithmeticLogic8Instruction_4;
    public s: ArithmeticLogic8Instruction_$4;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$4, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x86, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_5 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_5 = ASTKinds.ArithmeticLogic8Instruction_5;
    public s: ArithmeticLogic8Instruction_$6;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$6, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x86, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_6 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_6 = ASTKinds.ArithmeticLogic8Instruction_6;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10001000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_7 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_7 = ASTKinds.ArithmeticLogic8Instruction_7;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xCE, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_8 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_8 = ASTKinds.ArithmeticLogic8Instruction_8;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x8E];
        })();
    }
}
export class ArithmeticLogic8Instruction_9 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_9 = ASTKinds.ArithmeticLogic8Instruction_9;
    public s: ArithmeticLogic8Instruction_$11;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$11, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x8E, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_10 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_10 = ASTKinds.ArithmeticLogic8Instruction_10;
    public s: ArithmeticLogic8Instruction_$13;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$13, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x8E, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_11 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_11 = ASTKinds.ArithmeticLogic8Instruction_11;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10010000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_12 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_12 = ASTKinds.ArithmeticLogic8Instruction_12;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xD6, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_13 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_13 = ASTKinds.ArithmeticLogic8Instruction_13;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x96];
        })();
    }
}
export class ArithmeticLogic8Instruction_14 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_14 = ASTKinds.ArithmeticLogic8Instruction_14;
    public s: ArithmeticLogic8Instruction_$18;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$18, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x96, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_15 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_15 = ASTKinds.ArithmeticLogic8Instruction_15;
    public s: ArithmeticLogic8Instruction_$20;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$20, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x96, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_16 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_16 = ASTKinds.ArithmeticLogic8Instruction_16;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10011000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_17 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_17 = ASTKinds.ArithmeticLogic8Instruction_17;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xDE, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_18 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_18 = ASTKinds.ArithmeticLogic8Instruction_18;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x9E];
        })();
    }
}
export class ArithmeticLogic8Instruction_19 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_19 = ASTKinds.ArithmeticLogic8Instruction_19;
    public s: ArithmeticLogic8Instruction_$25;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$25, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x9E, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_20 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_20 = ASTKinds.ArithmeticLogic8Instruction_20;
    public s: ArithmeticLogic8Instruction_$27;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$27, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x9E, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_21 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_21 = ASTKinds.ArithmeticLogic8Instruction_21;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10100000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_22 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_22 = ASTKinds.ArithmeticLogic8Instruction_22;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xE6, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_23 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_23 = ASTKinds.ArithmeticLogic8Instruction_23;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xA6];
        })();
    }
}
export class ArithmeticLogic8Instruction_24 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_24 = ASTKinds.ArithmeticLogic8Instruction_24;
    public s: ArithmeticLogic8Instruction_$32;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$32, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xA6, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_25 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_25 = ASTKinds.ArithmeticLogic8Instruction_25;
    public s: ArithmeticLogic8Instruction_$34;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$34, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xA6, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_26 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_26 = ASTKinds.ArithmeticLogic8Instruction_26;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10110000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_27 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_27 = ASTKinds.ArithmeticLogic8Instruction_27;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xF6, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_28 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_28 = ASTKinds.ArithmeticLogic8Instruction_28;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xB6];
        })();
    }
}
export class ArithmeticLogic8Instruction_29 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_29 = ASTKinds.ArithmeticLogic8Instruction_29;
    public s: ArithmeticLogic8Instruction_$39;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$39, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xB6, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_30 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_30 = ASTKinds.ArithmeticLogic8Instruction_30;
    public s: ArithmeticLogic8Instruction_$41;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$41, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xB6, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_31 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_31 = ASTKinds.ArithmeticLogic8Instruction_31;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10101000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_32 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_32 = ASTKinds.ArithmeticLogic8Instruction_32;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xEE, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_33 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_33 = ASTKinds.ArithmeticLogic8Instruction_33;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xAE];
        })();
    }
}
export class ArithmeticLogic8Instruction_34 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_34 = ASTKinds.ArithmeticLogic8Instruction_34;
    public s: ArithmeticLogic8Instruction_$46;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$46, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xAE, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_35 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_35 = ASTKinds.ArithmeticLogic8Instruction_35;
    public s: ArithmeticLogic8Instruction_$48;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$48, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xAE, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_36 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_36 = ASTKinds.ArithmeticLogic8Instruction_36;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b10111000 | r_bits(r)];
        })();
    }
}
export class ArithmeticLogic8Instruction_37 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_37 = ASTKinds.ArithmeticLogic8Instruction_37;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xFE, value8(pos, n)];
        })();
    }
}
export class ArithmeticLogic8Instruction_38 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_38 = ASTKinds.ArithmeticLogic8Instruction_38;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xBE];
        })();
    }
}
export class ArithmeticLogic8Instruction_39 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_39 = ASTKinds.ArithmeticLogic8Instruction_39;
    public s: ArithmeticLogic8Instruction_$53;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$53, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xBE, svalue8(pos, s, d)];
        })();
    }
}
export class ArithmeticLogic8Instruction_40 {
    public kind: ASTKinds.ArithmeticLogic8Instruction_40 = ASTKinds.ArithmeticLogic8Instruction_40;
    public s: ArithmeticLogic8Instruction_$55;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: ArithmeticLogic8Instruction_$55, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xBE, svalue8(pos, s, d)];
        })();
    }
}
export interface ArithmeticLogic8Instruction_$0 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$0;
}
export interface ArithmeticLogic8Instruction_$1 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$1;
}
export interface ArithmeticLogic8Instruction_$2 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$2;
}
export interface ArithmeticLogic8Instruction_$3 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$3;
}
export type ArithmeticLogic8Instruction_$4 = ArithmeticLogic8Instruction_$4_1 | ArithmeticLogic8Instruction_$4_2;
export type ArithmeticLogic8Instruction_$4_1 = string;
export type ArithmeticLogic8Instruction_$4_2 = string;
export interface ArithmeticLogic8Instruction_$5 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$5;
}
export type ArithmeticLogic8Instruction_$6 = ArithmeticLogic8Instruction_$6_1 | ArithmeticLogic8Instruction_$6_2;
export type ArithmeticLogic8Instruction_$6_1 = string;
export type ArithmeticLogic8Instruction_$6_2 = string;
export interface ArithmeticLogic8Instruction_$7 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$7;
}
export interface ArithmeticLogic8Instruction_$8 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$8;
}
export interface ArithmeticLogic8Instruction_$9 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$9;
}
export interface ArithmeticLogic8Instruction_$10 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$10;
}
export type ArithmeticLogic8Instruction_$11 = ArithmeticLogic8Instruction_$11_1 | ArithmeticLogic8Instruction_$11_2;
export type ArithmeticLogic8Instruction_$11_1 = string;
export type ArithmeticLogic8Instruction_$11_2 = string;
export interface ArithmeticLogic8Instruction_$12 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$12;
}
export type ArithmeticLogic8Instruction_$13 = ArithmeticLogic8Instruction_$13_1 | ArithmeticLogic8Instruction_$13_2;
export type ArithmeticLogic8Instruction_$13_1 = string;
export type ArithmeticLogic8Instruction_$13_2 = string;
export interface ArithmeticLogic8Instruction_$14 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$14;
}
export interface ArithmeticLogic8Instruction_$15 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$15;
}
export interface ArithmeticLogic8Instruction_$16 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$16;
}
export interface ArithmeticLogic8Instruction_$17 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$17;
}
export type ArithmeticLogic8Instruction_$18 = ArithmeticLogic8Instruction_$18_1 | ArithmeticLogic8Instruction_$18_2;
export type ArithmeticLogic8Instruction_$18_1 = string;
export type ArithmeticLogic8Instruction_$18_2 = string;
export interface ArithmeticLogic8Instruction_$19 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$19;
}
export type ArithmeticLogic8Instruction_$20 = ArithmeticLogic8Instruction_$20_1 | ArithmeticLogic8Instruction_$20_2;
export type ArithmeticLogic8Instruction_$20_1 = string;
export type ArithmeticLogic8Instruction_$20_2 = string;
export interface ArithmeticLogic8Instruction_$21 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$21;
}
export interface ArithmeticLogic8Instruction_$22 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$22;
}
export interface ArithmeticLogic8Instruction_$23 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$23;
}
export interface ArithmeticLogic8Instruction_$24 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$24;
}
export type ArithmeticLogic8Instruction_$25 = ArithmeticLogic8Instruction_$25_1 | ArithmeticLogic8Instruction_$25_2;
export type ArithmeticLogic8Instruction_$25_1 = string;
export type ArithmeticLogic8Instruction_$25_2 = string;
export interface ArithmeticLogic8Instruction_$26 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$26;
}
export type ArithmeticLogic8Instruction_$27 = ArithmeticLogic8Instruction_$27_1 | ArithmeticLogic8Instruction_$27_2;
export type ArithmeticLogic8Instruction_$27_1 = string;
export type ArithmeticLogic8Instruction_$27_2 = string;
export interface ArithmeticLogic8Instruction_$28 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$28;
}
export interface ArithmeticLogic8Instruction_$29 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$29;
}
export interface ArithmeticLogic8Instruction_$30 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$30;
}
export interface ArithmeticLogic8Instruction_$31 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$31;
}
export type ArithmeticLogic8Instruction_$32 = ArithmeticLogic8Instruction_$32_1 | ArithmeticLogic8Instruction_$32_2;
export type ArithmeticLogic8Instruction_$32_1 = string;
export type ArithmeticLogic8Instruction_$32_2 = string;
export interface ArithmeticLogic8Instruction_$33 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$33;
}
export type ArithmeticLogic8Instruction_$34 = ArithmeticLogic8Instruction_$34_1 | ArithmeticLogic8Instruction_$34_2;
export type ArithmeticLogic8Instruction_$34_1 = string;
export type ArithmeticLogic8Instruction_$34_2 = string;
export interface ArithmeticLogic8Instruction_$35 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$35;
}
export interface ArithmeticLogic8Instruction_$36 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$36;
}
export interface ArithmeticLogic8Instruction_$37 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$37;
}
export interface ArithmeticLogic8Instruction_$38 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$38;
}
export type ArithmeticLogic8Instruction_$39 = ArithmeticLogic8Instruction_$39_1 | ArithmeticLogic8Instruction_$39_2;
export type ArithmeticLogic8Instruction_$39_1 = string;
export type ArithmeticLogic8Instruction_$39_2 = string;
export interface ArithmeticLogic8Instruction_$40 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$40;
}
export type ArithmeticLogic8Instruction_$41 = ArithmeticLogic8Instruction_$41_1 | ArithmeticLogic8Instruction_$41_2;
export type ArithmeticLogic8Instruction_$41_1 = string;
export type ArithmeticLogic8Instruction_$41_2 = string;
export interface ArithmeticLogic8Instruction_$42 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$42;
}
export interface ArithmeticLogic8Instruction_$43 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$43;
}
export interface ArithmeticLogic8Instruction_$44 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$44;
}
export interface ArithmeticLogic8Instruction_$45 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$45;
}
export type ArithmeticLogic8Instruction_$46 = ArithmeticLogic8Instruction_$46_1 | ArithmeticLogic8Instruction_$46_2;
export type ArithmeticLogic8Instruction_$46_1 = string;
export type ArithmeticLogic8Instruction_$46_2 = string;
export interface ArithmeticLogic8Instruction_$47 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$47;
}
export type ArithmeticLogic8Instruction_$48 = ArithmeticLogic8Instruction_$48_1 | ArithmeticLogic8Instruction_$48_2;
export type ArithmeticLogic8Instruction_$48_1 = string;
export type ArithmeticLogic8Instruction_$48_2 = string;
export interface ArithmeticLogic8Instruction_$49 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$49;
}
export interface ArithmeticLogic8Instruction_$50 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$50;
}
export interface ArithmeticLogic8Instruction_$51 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$51;
}
export interface ArithmeticLogic8Instruction_$52 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$52;
}
export type ArithmeticLogic8Instruction_$53 = ArithmeticLogic8Instruction_$53_1 | ArithmeticLogic8Instruction_$53_2;
export type ArithmeticLogic8Instruction_$53_1 = string;
export type ArithmeticLogic8Instruction_$53_2 = string;
export interface ArithmeticLogic8Instruction_$54 {
    kind: ASTKinds.ArithmeticLogic8Instruction_$54;
}
export type ArithmeticLogic8Instruction_$55 = ArithmeticLogic8Instruction_$55_1 | ArithmeticLogic8Instruction_$55_2;
export type ArithmeticLogic8Instruction_$55_1 = string;
export type ArithmeticLogic8Instruction_$55_2 = string;
export type IncrementDecrement8Instruction = IncrementDecrement8Instruction_1 | IncrementDecrement8Instruction_2 | IncrementDecrement8Instruction_3 | IncrementDecrement8Instruction_4 | IncrementDecrement8Instruction_5 | IncrementDecrement8Instruction_6 | IncrementDecrement8Instruction_7 | IncrementDecrement8Instruction_8;
export class IncrementDecrement8Instruction_1 {
    public kind: ASTKinds.IncrementDecrement8Instruction_1 = ASTKinds.IncrementDecrement8Instruction_1;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b00000100 | r_bits(r, 3)];
        })();
    }
}
export class IncrementDecrement8Instruction_2 {
    public kind: ASTKinds.IncrementDecrement8Instruction_2 = ASTKinds.IncrementDecrement8Instruction_2;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x34];
        })();
    }
}
export class IncrementDecrement8Instruction_3 {
    public kind: ASTKinds.IncrementDecrement8Instruction_3 = ASTKinds.IncrementDecrement8Instruction_3;
    public s: IncrementDecrement8Instruction_$0;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: IncrementDecrement8Instruction_$0, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x34, svalue8(pos, s, d)];
        })();
    }
}
export class IncrementDecrement8Instruction_4 {
    public kind: ASTKinds.IncrementDecrement8Instruction_4 = ASTKinds.IncrementDecrement8Instruction_4;
    public s: IncrementDecrement8Instruction_$1;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: IncrementDecrement8Instruction_$1, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x34, svalue8(pos, s, d)];
        })();
    }
}
export class IncrementDecrement8Instruction_5 {
    public kind: ASTKinds.IncrementDecrement8Instruction_5 = ASTKinds.IncrementDecrement8Instruction_5;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0b00000101 | r_bits(r, 3)];
        })();
    }
}
export class IncrementDecrement8Instruction_6 {
    public kind: ASTKinds.IncrementDecrement8Instruction_6 = ASTKinds.IncrementDecrement8Instruction_6;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x35];
        })();
    }
}
export class IncrementDecrement8Instruction_7 {
    public kind: ASTKinds.IncrementDecrement8Instruction_7 = ASTKinds.IncrementDecrement8Instruction_7;
    public s: IncrementDecrement8Instruction_$2;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: IncrementDecrement8Instruction_$2, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0x35, svalue8(pos, s, d)];
        })();
    }
}
export class IncrementDecrement8Instruction_8 {
    public kind: ASTKinds.IncrementDecrement8Instruction_8 = ASTKinds.IncrementDecrement8Instruction_8;
    public s: IncrementDecrement8Instruction_$3;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: IncrementDecrement8Instruction_$3, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0x35, svalue8(pos, s, d)];
        })();
    }
}
export type IncrementDecrement8Instruction_$0 = IncrementDecrement8Instruction_$0_1 | IncrementDecrement8Instruction_$0_2;
export type IncrementDecrement8Instruction_$0_1 = string;
export type IncrementDecrement8Instruction_$0_2 = string;
export type IncrementDecrement8Instruction_$1 = IncrementDecrement8Instruction_$1_1 | IncrementDecrement8Instruction_$1_2;
export type IncrementDecrement8Instruction_$1_1 = string;
export type IncrementDecrement8Instruction_$1_2 = string;
export type IncrementDecrement8Instruction_$2 = IncrementDecrement8Instruction_$2_1 | IncrementDecrement8Instruction_$2_2;
export type IncrementDecrement8Instruction_$2_1 = string;
export type IncrementDecrement8Instruction_$2_2 = string;
export type IncrementDecrement8Instruction_$3 = IncrementDecrement8Instruction_$3_1 | IncrementDecrement8Instruction_$3_2;
export type IncrementDecrement8Instruction_$3_1 = string;
export type IncrementDecrement8Instruction_$3_2 = string;
export type GeneralPurposeArithmeticInstruction = GeneralPurposeArithmeticInstruction_1 | GeneralPurposeArithmeticInstruction_2 | GeneralPurposeArithmeticInstruction_3 | GeneralPurposeArithmeticInstruction_4 | GeneralPurposeArithmeticInstruction_5;
export class GeneralPurposeArithmeticInstruction_1 {
    public kind: ASTKinds.GeneralPurposeArithmeticInstruction_1 = ASTKinds.GeneralPurposeArithmeticInstruction_1;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x27];
        })();
    }
}
export class GeneralPurposeArithmeticInstruction_2 {
    public kind: ASTKinds.GeneralPurposeArithmeticInstruction_2 = ASTKinds.GeneralPurposeArithmeticInstruction_2;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x2F];
        })();
    }
}
export class GeneralPurposeArithmeticInstruction_3 {
    public kind: ASTKinds.GeneralPurposeArithmeticInstruction_3 = ASTKinds.GeneralPurposeArithmeticInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x44];
        })();
    }
}
export class GeneralPurposeArithmeticInstruction_4 {
    public kind: ASTKinds.GeneralPurposeArithmeticInstruction_4 = ASTKinds.GeneralPurposeArithmeticInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x3F];
        })();
    }
}
export class GeneralPurposeArithmeticInstruction_5 {
    public kind: ASTKinds.GeneralPurposeArithmeticInstruction_5 = ASTKinds.GeneralPurposeArithmeticInstruction_5;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x37];
        })();
    }
}
export type CpuControlGroupInstruction = CpuControlGroupInstruction_1 | CpuControlGroupInstruction_2 | CpuControlGroupInstruction_3 | CpuControlGroupInstruction_4 | CpuControlGroupInstruction_5;
export class CpuControlGroupInstruction_1 {
    public kind: ASTKinds.CpuControlGroupInstruction_1 = ASTKinds.CpuControlGroupInstruction_1;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x00];
        })();
    }
}
export class CpuControlGroupInstruction_2 {
    public kind: ASTKinds.CpuControlGroupInstruction_2 = ASTKinds.CpuControlGroupInstruction_2;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x76];
        })();
    }
}
export class CpuControlGroupInstruction_3 {
    public kind: ASTKinds.CpuControlGroupInstruction_3 = ASTKinds.CpuControlGroupInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xF3];
        })();
    }
}
export class CpuControlGroupInstruction_4 {
    public kind: ASTKinds.CpuControlGroupInstruction_4 = ASTKinds.CpuControlGroupInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFB];
        })();
    }
}
export class CpuControlGroupInstruction_5 {
    public kind: ASTKinds.CpuControlGroupInstruction_5 = ASTKinds.CpuControlGroupInstruction_5;
    public m: string;
    public bytes: Bytes;
    constructor(m: string){
        this.m = m;
        this.bytes = ((): Bytes => {
        return [0xED, imode(m)];
        })();
    }
}
export type ArithmeticLogic16Instruction = ArithmeticLogic16Instruction_1 | ArithmeticLogic16Instruction_2 | ArithmeticLogic16Instruction_3 | ArithmeticLogic16Instruction_4 | ArithmeticLogic16Instruction_5 | ArithmeticLogic16Instruction_6 | ArithmeticLogic16Instruction_7 | ArithmeticLogic16Instruction_8 | ArithmeticLogic16Instruction_9 | ArithmeticLogic16Instruction_10 | ArithmeticLogic16Instruction_11;
export class ArithmeticLogic16Instruction_1 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_1 = ASTKinds.ArithmeticLogic16Instruction_1;
    public ss: ss;
    public bytes: Bytes;
    constructor(ss: ss){
        this.ss = ss;
        this.bytes = ((): Bytes => {
        return [0b00001001 | ss_bits(ss, 4)];
        })();
    }
}
export class ArithmeticLogic16Instruction_2 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_2 = ASTKinds.ArithmeticLogic16Instruction_2;
    public ss: ss;
    public bytes: Bytes;
    constructor(ss: ss){
        this.ss = ss;
        this.bytes = ((): Bytes => {
        return [0xED, 0b01001010 | ss_bits(ss, 4)];
        })();
    }
}
export class ArithmeticLogic16Instruction_3 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_3 = ASTKinds.ArithmeticLogic16Instruction_3;
    public ss: ss;
    public bytes: Bytes;
    constructor(ss: ss){
        this.ss = ss;
        this.bytes = ((): Bytes => {
        return [0xED, 0b01000010 | ss_bits(ss, 4)];
        })();
    }
}
export class ArithmeticLogic16Instruction_4 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_4 = ASTKinds.ArithmeticLogic16Instruction_4;
    public pp: pp;
    public bytes: Bytes;
    constructor(pp: pp){
        this.pp = pp;
        this.bytes = ((): Bytes => {
        return [0xDD, 0b00001001 | pp_bits(pp, 4)];
        })();
    }
}
export class ArithmeticLogic16Instruction_5 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_5 = ASTKinds.ArithmeticLogic16Instruction_5;
    public rr: rr;
    public bytes: Bytes;
    constructor(rr: rr){
        this.rr = rr;
        this.bytes = ((): Bytes => {
        return [0xFD, 0b00001001 | rr_bits(rr, 4)];
        })();
    }
}
export class ArithmeticLogic16Instruction_6 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_6 = ASTKinds.ArithmeticLogic16Instruction_6;
    public ss: ss;
    public bytes: Bytes;
    constructor(ss: ss){
        this.ss = ss;
        this.bytes = ((): Bytes => {
        return [0b00000011 | ss_bits(ss, 4)];
        })();
    }
}
export class ArithmeticLogic16Instruction_7 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_7 = ASTKinds.ArithmeticLogic16Instruction_7;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xDD, 0x23];
        })();
    }
}
export class ArithmeticLogic16Instruction_8 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_8 = ASTKinds.ArithmeticLogic16Instruction_8;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFD, 0x23];
        })();
    }
}
export class ArithmeticLogic16Instruction_9 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_9 = ASTKinds.ArithmeticLogic16Instruction_9;
    public ss: ss;
    public bytes: Bytes;
    constructor(ss: ss){
        this.ss = ss;
        this.bytes = ((): Bytes => {
        return [0b00001011 | ss_bits(ss, 4)];
        })();
    }
}
export class ArithmeticLogic16Instruction_10 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_10 = ASTKinds.ArithmeticLogic16Instruction_10;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xDD, 0x2B];
        })();
    }
}
export class ArithmeticLogic16Instruction_11 {
    public kind: ASTKinds.ArithmeticLogic16Instruction_11 = ASTKinds.ArithmeticLogic16Instruction_11;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFD, 0x2B];
        })();
    }
}
export type RotateShiftInstruction = RotateShiftInstruction_1 | RotateShiftInstruction_2 | RotateShiftInstruction_3 | RotateShiftInstruction_4 | RotateShiftInstruction_5 | RotateShiftInstruction_6 | RotateShiftInstruction_7 | RotateShiftInstruction_8 | RotateShiftInstruction_9 | RotateShiftInstruction_10 | RotateShiftInstruction_11 | RotateShiftInstruction_12 | RotateShiftInstruction_13 | RotateShiftInstruction_14 | RotateShiftInstruction_15 | RotateShiftInstruction_16 | RotateShiftInstruction_17 | RotateShiftInstruction_18 | RotateShiftInstruction_19 | RotateShiftInstruction_20 | RotateShiftInstruction_21 | RotateShiftInstruction_22 | RotateShiftInstruction_23 | RotateShiftInstruction_24 | RotateShiftInstruction_25 | RotateShiftInstruction_26 | RotateShiftInstruction_27 | RotateShiftInstruction_28 | RotateShiftInstruction_29 | RotateShiftInstruction_30 | RotateShiftInstruction_31 | RotateShiftInstruction_32 | RotateShiftInstruction_33 | RotateShiftInstruction_34;
export class RotateShiftInstruction_1 {
    public kind: ASTKinds.RotateShiftInstruction_1 = ASTKinds.RotateShiftInstruction_1;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x07];
        })();
    }
}
export class RotateShiftInstruction_2 {
    public kind: ASTKinds.RotateShiftInstruction_2 = ASTKinds.RotateShiftInstruction_2;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x17];
        })();
    }
}
export class RotateShiftInstruction_3 {
    public kind: ASTKinds.RotateShiftInstruction_3 = ASTKinds.RotateShiftInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x0F];
        })();
    }
}
export class RotateShiftInstruction_4 {
    public kind: ASTKinds.RotateShiftInstruction_4 = ASTKinds.RotateShiftInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0x1F];
        })();
    }
}
export class RotateShiftInstruction_5 {
    public kind: ASTKinds.RotateShiftInstruction_5 = ASTKinds.RotateShiftInstruction_5;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b00000000 | r_bits(r)];
        })();
    }
}
export class RotateShiftInstruction_6 {
    public kind: ASTKinds.RotateShiftInstruction_6 = ASTKinds.RotateShiftInstruction_6;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xCB, 0x06];
        })();
    }
}
export class RotateShiftInstruction_7 {
    public kind: ASTKinds.RotateShiftInstruction_7 = ASTKinds.RotateShiftInstruction_7;
    public s: RotateShiftInstruction_$0;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$0, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0x06];
        })();
    }
}
export class RotateShiftInstruction_8 {
    public kind: ASTKinds.RotateShiftInstruction_8 = ASTKinds.RotateShiftInstruction_8;
    public s: RotateShiftInstruction_$1;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$1, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0x06];
        })();
    }
}
export class RotateShiftInstruction_9 {
    public kind: ASTKinds.RotateShiftInstruction_9 = ASTKinds.RotateShiftInstruction_9;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b00010000 | r_bits(r)];
        })();
    }
}
export class RotateShiftInstruction_10 {
    public kind: ASTKinds.RotateShiftInstruction_10 = ASTKinds.RotateShiftInstruction_10;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xCB, 0x16];
        })();
    }
}
export class RotateShiftInstruction_11 {
    public kind: ASTKinds.RotateShiftInstruction_11 = ASTKinds.RotateShiftInstruction_11;
    public s: RotateShiftInstruction_$2;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$2, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0x16];
        })();
    }
}
export class RotateShiftInstruction_12 {
    public kind: ASTKinds.RotateShiftInstruction_12 = ASTKinds.RotateShiftInstruction_12;
    public s: RotateShiftInstruction_$3;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$3, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0x16];
        })();
    }
}
export class RotateShiftInstruction_13 {
    public kind: ASTKinds.RotateShiftInstruction_13 = ASTKinds.RotateShiftInstruction_13;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b00001000 | r_bits(r)];
        })();
    }
}
export class RotateShiftInstruction_14 {
    public kind: ASTKinds.RotateShiftInstruction_14 = ASTKinds.RotateShiftInstruction_14;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xCB, 0x0E];
        })();
    }
}
export class RotateShiftInstruction_15 {
    public kind: ASTKinds.RotateShiftInstruction_15 = ASTKinds.RotateShiftInstruction_15;
    public s: RotateShiftInstruction_$4;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$4, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0x0E];
        })();
    }
}
export class RotateShiftInstruction_16 {
    public kind: ASTKinds.RotateShiftInstruction_16 = ASTKinds.RotateShiftInstruction_16;
    public s: RotateShiftInstruction_$5;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$5, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0x0E];
        })();
    }
}
export class RotateShiftInstruction_17 {
    public kind: ASTKinds.RotateShiftInstruction_17 = ASTKinds.RotateShiftInstruction_17;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b00011000 | r_bits(r)];
        })();
    }
}
export class RotateShiftInstruction_18 {
    public kind: ASTKinds.RotateShiftInstruction_18 = ASTKinds.RotateShiftInstruction_18;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xCB, 0x1E];
        })();
    }
}
export class RotateShiftInstruction_19 {
    public kind: ASTKinds.RotateShiftInstruction_19 = ASTKinds.RotateShiftInstruction_19;
    public s: RotateShiftInstruction_$6;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$6, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0x1E];
        })();
    }
}
export class RotateShiftInstruction_20 {
    public kind: ASTKinds.RotateShiftInstruction_20 = ASTKinds.RotateShiftInstruction_20;
    public s: RotateShiftInstruction_$7;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$7, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0x1E];
        })();
    }
}
export class RotateShiftInstruction_21 {
    public kind: ASTKinds.RotateShiftInstruction_21 = ASTKinds.RotateShiftInstruction_21;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b00100000 | r_bits(r)];
        })();
    }
}
export class RotateShiftInstruction_22 {
    public kind: ASTKinds.RotateShiftInstruction_22 = ASTKinds.RotateShiftInstruction_22;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xCB, 0x26];
        })();
    }
}
export class RotateShiftInstruction_23 {
    public kind: ASTKinds.RotateShiftInstruction_23 = ASTKinds.RotateShiftInstruction_23;
    public s: RotateShiftInstruction_$8;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$8, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0x26];
        })();
    }
}
export class RotateShiftInstruction_24 {
    public kind: ASTKinds.RotateShiftInstruction_24 = ASTKinds.RotateShiftInstruction_24;
    public s: RotateShiftInstruction_$9;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$9, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0x26];
        })();
    }
}
export class RotateShiftInstruction_25 {
    public kind: ASTKinds.RotateShiftInstruction_25 = ASTKinds.RotateShiftInstruction_25;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b00101000 | r_bits(r)];
        })();
    }
}
export class RotateShiftInstruction_26 {
    public kind: ASTKinds.RotateShiftInstruction_26 = ASTKinds.RotateShiftInstruction_26;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xCB, 0x2E];
        })();
    }
}
export class RotateShiftInstruction_27 {
    public kind: ASTKinds.RotateShiftInstruction_27 = ASTKinds.RotateShiftInstruction_27;
    public s: RotateShiftInstruction_$10;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$10, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0x2E];
        })();
    }
}
export class RotateShiftInstruction_28 {
    public kind: ASTKinds.RotateShiftInstruction_28 = ASTKinds.RotateShiftInstruction_28;
    public s: RotateShiftInstruction_$11;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$11, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0x2E];
        })();
    }
}
export class RotateShiftInstruction_29 {
    public kind: ASTKinds.RotateShiftInstruction_29 = ASTKinds.RotateShiftInstruction_29;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b00111000 | r_bits(r)];
        })();
    }
}
export class RotateShiftInstruction_30 {
    public kind: ASTKinds.RotateShiftInstruction_30 = ASTKinds.RotateShiftInstruction_30;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xCB, 0x3E];
        })();
    }
}
export class RotateShiftInstruction_31 {
    public kind: ASTKinds.RotateShiftInstruction_31 = ASTKinds.RotateShiftInstruction_31;
    public s: RotateShiftInstruction_$12;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$12, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0x3E];
        })();
    }
}
export class RotateShiftInstruction_32 {
    public kind: ASTKinds.RotateShiftInstruction_32 = ASTKinds.RotateShiftInstruction_32;
    public s: RotateShiftInstruction_$13;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(s: RotateShiftInstruction_$13, pos: PosInfo, d: Expression){
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0x3E];
        })();
    }
}
export class RotateShiftInstruction_33 {
    public kind: ASTKinds.RotateShiftInstruction_33 = ASTKinds.RotateShiftInstruction_33;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x6F];
        })();
    }
}
export class RotateShiftInstruction_34 {
    public kind: ASTKinds.RotateShiftInstruction_34 = ASTKinds.RotateShiftInstruction_34;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x67];
        })();
    }
}
export type RotateShiftInstruction_$0 = RotateShiftInstruction_$0_1 | RotateShiftInstruction_$0_2;
export type RotateShiftInstruction_$0_1 = string;
export type RotateShiftInstruction_$0_2 = string;
export type RotateShiftInstruction_$1 = RotateShiftInstruction_$1_1 | RotateShiftInstruction_$1_2;
export type RotateShiftInstruction_$1_1 = string;
export type RotateShiftInstruction_$1_2 = string;
export type RotateShiftInstruction_$2 = RotateShiftInstruction_$2_1 | RotateShiftInstruction_$2_2;
export type RotateShiftInstruction_$2_1 = string;
export type RotateShiftInstruction_$2_2 = string;
export type RotateShiftInstruction_$3 = RotateShiftInstruction_$3_1 | RotateShiftInstruction_$3_2;
export type RotateShiftInstruction_$3_1 = string;
export type RotateShiftInstruction_$3_2 = string;
export type RotateShiftInstruction_$4 = RotateShiftInstruction_$4_1 | RotateShiftInstruction_$4_2;
export type RotateShiftInstruction_$4_1 = string;
export type RotateShiftInstruction_$4_2 = string;
export type RotateShiftInstruction_$5 = RotateShiftInstruction_$5_1 | RotateShiftInstruction_$5_2;
export type RotateShiftInstruction_$5_1 = string;
export type RotateShiftInstruction_$5_2 = string;
export type RotateShiftInstruction_$6 = RotateShiftInstruction_$6_1 | RotateShiftInstruction_$6_2;
export type RotateShiftInstruction_$6_1 = string;
export type RotateShiftInstruction_$6_2 = string;
export type RotateShiftInstruction_$7 = RotateShiftInstruction_$7_1 | RotateShiftInstruction_$7_2;
export type RotateShiftInstruction_$7_1 = string;
export type RotateShiftInstruction_$7_2 = string;
export type RotateShiftInstruction_$8 = RotateShiftInstruction_$8_1 | RotateShiftInstruction_$8_2;
export type RotateShiftInstruction_$8_1 = string;
export type RotateShiftInstruction_$8_2 = string;
export type RotateShiftInstruction_$9 = RotateShiftInstruction_$9_1 | RotateShiftInstruction_$9_2;
export type RotateShiftInstruction_$9_1 = string;
export type RotateShiftInstruction_$9_2 = string;
export type RotateShiftInstruction_$10 = RotateShiftInstruction_$10_1 | RotateShiftInstruction_$10_2;
export type RotateShiftInstruction_$10_1 = string;
export type RotateShiftInstruction_$10_2 = string;
export type RotateShiftInstruction_$11 = RotateShiftInstruction_$11_1 | RotateShiftInstruction_$11_2;
export type RotateShiftInstruction_$11_1 = string;
export type RotateShiftInstruction_$11_2 = string;
export type RotateShiftInstruction_$12 = RotateShiftInstruction_$12_1 | RotateShiftInstruction_$12_2;
export type RotateShiftInstruction_$12_1 = string;
export type RotateShiftInstruction_$12_2 = string;
export type RotateShiftInstruction_$13 = RotateShiftInstruction_$13_1 | RotateShiftInstruction_$13_2;
export type RotateShiftInstruction_$13_1 = string;
export type RotateShiftInstruction_$13_2 = string;
export type BitManipulationInstruction = BitManipulationInstruction_1 | BitManipulationInstruction_2 | BitManipulationInstruction_3 | BitManipulationInstruction_4 | BitManipulationInstruction_5 | BitManipulationInstruction_6 | BitManipulationInstruction_7 | BitManipulationInstruction_8 | BitManipulationInstruction_9 | BitManipulationInstruction_10 | BitManipulationInstruction_11 | BitManipulationInstruction_12;
export class BitManipulationInstruction_1 {
    public kind: ASTKinds.BitManipulationInstruction_1 = ASTKinds.BitManipulationInstruction_1;
    public b: b;
    public r: r;
    public bytes: Bytes;
    constructor(b: b, r: r){
        this.b = b;
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b01000000 | (b.value << 3) | r_bits(r)];
        })();
    }
}
export class BitManipulationInstruction_2 {
    public kind: ASTKinds.BitManipulationInstruction_2 = ASTKinds.BitManipulationInstruction_2;
    public b: b;
    public bytes: Bytes;
    constructor(b: b){
        this.b = b;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b01000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_3 {
    public kind: ASTKinds.BitManipulationInstruction_3 = ASTKinds.BitManipulationInstruction_3;
    public b: b;
    public s: BitManipulationInstruction_$0;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(b: b, s: BitManipulationInstruction_$0, pos: PosInfo, d: Expression){
        this.b = b;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0b01000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_4 {
    public kind: ASTKinds.BitManipulationInstruction_4 = ASTKinds.BitManipulationInstruction_4;
    public b: b;
    public s: BitManipulationInstruction_$1;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(b: b, s: BitManipulationInstruction_$1, pos: PosInfo, d: Expression){
        this.b = b;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0b01000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_5 {
    public kind: ASTKinds.BitManipulationInstruction_5 = ASTKinds.BitManipulationInstruction_5;
    public b: b;
    public r: r;
    public bytes: Bytes;
    constructor(b: b, r: r){
        this.b = b;
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b11000000 | (b.value << 3) | r_bits(r)];
        })();
    }
}
export class BitManipulationInstruction_6 {
    public kind: ASTKinds.BitManipulationInstruction_6 = ASTKinds.BitManipulationInstruction_6;
    public b: b;
    public bytes: Bytes;
    constructor(b: b){
        this.b = b;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b11000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_7 {
    public kind: ASTKinds.BitManipulationInstruction_7 = ASTKinds.BitManipulationInstruction_7;
    public b: b;
    public s: BitManipulationInstruction_$2;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(b: b, s: BitManipulationInstruction_$2, pos: PosInfo, d: Expression){
        this.b = b;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0b11000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_8 {
    public kind: ASTKinds.BitManipulationInstruction_8 = ASTKinds.BitManipulationInstruction_8;
    public b: b;
    public s: BitManipulationInstruction_$3;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(b: b, s: BitManipulationInstruction_$3, pos: PosInfo, d: Expression){
        this.b = b;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0b11000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_9 {
    public kind: ASTKinds.BitManipulationInstruction_9 = ASTKinds.BitManipulationInstruction_9;
    public b: b;
    public r: r;
    public bytes: Bytes;
    constructor(b: b, r: r){
        this.b = b;
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b10000000 | (b.value << 3) | r_bits(r)];
        })();
    }
}
export class BitManipulationInstruction_10 {
    public kind: ASTKinds.BitManipulationInstruction_10 = ASTKinds.BitManipulationInstruction_10;
    public b: b;
    public bytes: Bytes;
    constructor(b: b){
        this.b = b;
        this.bytes = ((): Bytes => {
        return [0xCB, 0b10000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_11 {
    public kind: ASTKinds.BitManipulationInstruction_11 = ASTKinds.BitManipulationInstruction_11;
    public b: b;
    public s: BitManipulationInstruction_$4;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(b: b, s: BitManipulationInstruction_$4, pos: PosInfo, d: Expression){
        this.b = b;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xDD, 0xCB, svalue8(pos, s, d), 0b10000110 | (b.value << 3)];
        })();
    }
}
export class BitManipulationInstruction_12 {
    public kind: ASTKinds.BitManipulationInstruction_12 = ASTKinds.BitManipulationInstruction_12;
    public b: b;
    public s: BitManipulationInstruction_$5;
    public pos: PosInfo;
    public d: Expression;
    public bytes: Bytes;
    constructor(b: b, s: BitManipulationInstruction_$5, pos: PosInfo, d: Expression){
        this.b = b;
        this.s = s;
        this.pos = pos;
        this.d = d;
        this.bytes = ((): Bytes => {
        return [0xFD, 0xCB, svalue8(pos, s, d), 0b10000110 | (b.value << 3)];
        })();
    }
}
export type BitManipulationInstruction_$0 = BitManipulationInstruction_$0_1 | BitManipulationInstruction_$0_2;
export type BitManipulationInstruction_$0_1 = string;
export type BitManipulationInstruction_$0_2 = string;
export type BitManipulationInstruction_$1 = BitManipulationInstruction_$1_1 | BitManipulationInstruction_$1_2;
export type BitManipulationInstruction_$1_1 = string;
export type BitManipulationInstruction_$1_2 = string;
export type BitManipulationInstruction_$2 = BitManipulationInstruction_$2_1 | BitManipulationInstruction_$2_2;
export type BitManipulationInstruction_$2_1 = string;
export type BitManipulationInstruction_$2_2 = string;
export type BitManipulationInstruction_$3 = BitManipulationInstruction_$3_1 | BitManipulationInstruction_$3_2;
export type BitManipulationInstruction_$3_1 = string;
export type BitManipulationInstruction_$3_2 = string;
export type BitManipulationInstruction_$4 = BitManipulationInstruction_$4_1 | BitManipulationInstruction_$4_2;
export type BitManipulationInstruction_$4_1 = string;
export type BitManipulationInstruction_$4_2 = string;
export type BitManipulationInstruction_$5 = BitManipulationInstruction_$5_1 | BitManipulationInstruction_$5_2;
export type BitManipulationInstruction_$5_1 = string;
export type BitManipulationInstruction_$5_2 = string;
export type Offset = Offset_1 | Offset_2;
export class Offset_1 {
    public kind: ASTKinds.Offset_1 = ASTKinds.Offset_1;
    public pos: PosInfo;
    public label: Label;
    public eval: EvalFunc;
    constructor(pos: PosInfo, label: Label){
        this.pos = pos;
        this.label = label;
        this.eval = ((): EvalFunc => {
        return () => getLabelValue(label.name);
        })();
    }
}
export class Offset_2 {
    public kind: ASTKinds.Offset_2 = ASTKinds.Offset_2;
    public e: Expression;
    public eval: EvalFunc;
    constructor(e: Expression){
        this.e = e;
        this.eval = ((): EvalFunc => {
        return e.eval;
        })();
    }
}
export type JumpInstruction = JumpInstruction_1 | JumpInstruction_2 | JumpInstruction_3 | JumpInstruction_4 | JumpInstruction_5 | JumpInstruction_6 | JumpInstruction_7 | JumpInstruction_8 | JumpInstruction_9 | JumpInstruction_10 | JumpInstruction_11;
export class JumpInstruction_1 {
    public kind: ASTKinds.JumpInstruction_1 = ASTKinds.JumpInstruction_1;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xC3, value16LE(pos, ee)];
        })();
    }
}
export class JumpInstruction_2 {
    public kind: ASTKinds.JumpInstruction_2 = ASTKinds.JumpInstruction_2;
    public cc: cc;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(cc: cc, pos: PosInfo, ee: Expression){
        this.cc = cc;
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0b11000010 | cc_bits(cc, 3), value16LE(pos, ee)];
        })();
    }
}
export class JumpInstruction_3 {
    public kind: ASTKinds.JumpInstruction_3 = ASTKinds.JumpInstruction_3;
    public pos: PosInfo;
    public label: Label;
    public bytes: Bytes;
    constructor(pos: PosInfo, label: Label){
        this.pos = pos;
        this.label = label;
        this.bytes = ((): Bytes => {
        return [jj_bits(), jrRelativeOffset(pos, label.name)];
        })();
    }
}
export class JumpInstruction_4 {
    public kind: ASTKinds.JumpInstruction_4 = ASTKinds.JumpInstruction_4;
    public pos: PosInfo;
    public e: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, e: Expression){
        this.pos = pos;
        this.e = e;
        this.bytes = ((): Bytes => {
        return [jj_bits(), jrOffset(pos, e)];
        })();
    }
}
export class JumpInstruction_5 {
    public kind: ASTKinds.JumpInstruction_5 = ASTKinds.JumpInstruction_5;
    public jj: jj;
    public pos: PosInfo;
    public label: Label;
    public bytes: Bytes;
    constructor(jj: jj, pos: PosInfo, label: Label){
        this.jj = jj;
        this.pos = pos;
        this.label = label;
        this.bytes = ((): Bytes => {
        return [jj_bits(jj), jrRelativeOffset(pos, label.name)];
        })();
    }
}
export class JumpInstruction_6 {
    public kind: ASTKinds.JumpInstruction_6 = ASTKinds.JumpInstruction_6;
    public jj: jj;
    public pos: PosInfo;
    public e: Expression;
    public bytes: Bytes;
    constructor(jj: jj, pos: PosInfo, e: Expression){
        this.jj = jj;
        this.pos = pos;
        this.e = e;
        this.bytes = ((): Bytes => {
        return [jj_bits(jj), jrOffset(pos, e)];
        })();
    }
}
export class JumpInstruction_7 {
    public kind: ASTKinds.JumpInstruction_7 = ASTKinds.JumpInstruction_7;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xE9];
        })();
    }
}
export class JumpInstruction_8 {
    public kind: ASTKinds.JumpInstruction_8 = ASTKinds.JumpInstruction_8;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xDD, 0xE9];
        })();
    }
}
export class JumpInstruction_9 {
    public kind: ASTKinds.JumpInstruction_9 = ASTKinds.JumpInstruction_9;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xFD, 0xE9];
        })();
    }
}
export class JumpInstruction_10 {
    public kind: ASTKinds.JumpInstruction_10 = ASTKinds.JumpInstruction_10;
    public pos: PosInfo;
    public label: Label;
    public bytes: Bytes;
    constructor(pos: PosInfo, label: Label){
        this.pos = pos;
        this.label = label;
        this.bytes = ((): Bytes => {
        return [0x10, jrRelativeOffset(pos, label.name)];
        })();
    }
}
export class JumpInstruction_11 {
    public kind: ASTKinds.JumpInstruction_11 = ASTKinds.JumpInstruction_11;
    public pos: PosInfo;
    public e: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, e: Expression){
        this.pos = pos;
        this.e = e;
        this.bytes = ((): Bytes => {
        return [0x10, jrOffset(pos, e)];
        })();
    }
}
export type CallInstruction = CallInstruction_1 | CallInstruction_2;
export class CallInstruction_1 {
    public kind: ASTKinds.CallInstruction_1 = ASTKinds.CallInstruction_1;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, ee: Expression){
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0xCD, value16LE(pos, ee)];
        })();
    }
}
export class CallInstruction_2 {
    public kind: ASTKinds.CallInstruction_2 = ASTKinds.CallInstruction_2;
    public cc: cc;
    public pos: PosInfo;
    public ee: Expression;
    public bytes: Bytes;
    constructor(cc: cc, pos: PosInfo, ee: Expression){
        this.cc = cc;
        this.pos = pos;
        this.ee = ee;
        this.bytes = ((): Bytes => {
        return [0b11000100 | cc_bits(cc, 3), value16LE(pos, ee)];
        })();
    }
}
export type ReturnInstruction = ReturnInstruction_1 | ReturnInstruction_2 | ReturnInstruction_3 | ReturnInstruction_4 | ReturnInstruction_5;
export class ReturnInstruction_1 {
    public kind: ASTKinds.ReturnInstruction_1 = ASTKinds.ReturnInstruction_1;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xC9];
        })();
    }
}
export class ReturnInstruction_2 {
    public kind: ASTKinds.ReturnInstruction_2 = ASTKinds.ReturnInstruction_2;
    public cc: cc;
    public bytes: Bytes;
    constructor(cc: cc){
        this.cc = cc;
        this.bytes = ((): Bytes => {
        return [0b11000000 | cc_bits(cc, 3)];
        })();
    }
}
export class ReturnInstruction_3 {
    public kind: ASTKinds.ReturnInstruction_3 = ASTKinds.ReturnInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x4D];
        })();
    }
}
export class ReturnInstruction_4 {
    public kind: ASTKinds.ReturnInstruction_4 = ASTKinds.ReturnInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0x45];
        })();
    }
}
export class ReturnInstruction_5 {
    public kind: ASTKinds.ReturnInstruction_5 = ASTKinds.ReturnInstruction_5;
    public p: p;
    public bytes: Bytes;
    constructor(p: p){
        this.p = p;
        this.bytes = ((): Bytes => {
        return [0b11000111 | p_bits(p.value, 3)];
        })();
    }
}
export type InputInstruction = InputInstruction_1 | InputInstruction_2 | InputInstruction_3 | InputInstruction_4 | InputInstruction_5 | InputInstruction_6;
export class InputInstruction_1 {
    public kind: ASTKinds.InputInstruction_1 = ASTKinds.InputInstruction_1;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xED, 0b01000000 | r_bits(r, 3)];
        })();
    }
}
export class InputInstruction_2 {
    public kind: ASTKinds.InputInstruction_2 = ASTKinds.InputInstruction_2;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xDB, value8(pos, n)];
        })();
    }
}
export class InputInstruction_3 {
    public kind: ASTKinds.InputInstruction_3 = ASTKinds.InputInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xA2];
        })();
    }
}
export class InputInstruction_4 {
    public kind: ASTKinds.InputInstruction_4 = ASTKinds.InputInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xB2];
        })();
    }
}
export class InputInstruction_5 {
    public kind: ASTKinds.InputInstruction_5 = ASTKinds.InputInstruction_5;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xAA];
        })();
    }
}
export class InputInstruction_6 {
    public kind: ASTKinds.InputInstruction_6 = ASTKinds.InputInstruction_6;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xBA];
        })();
    }
}
export type OutputInstruction = OutputInstruction_1 | OutputInstruction_2 | OutputInstruction_3 | OutputInstruction_4 | OutputInstruction_5 | OutputInstruction_6;
export class OutputInstruction_1 {
    public kind: ASTKinds.OutputInstruction_1 = ASTKinds.OutputInstruction_1;
    public r: r;
    public bytes: Bytes;
    constructor(r: r){
        this.r = r;
        this.bytes = ((): Bytes => {
        return [0xED, 0b01000001 | r_bits(r, 3)];
        })();
    }
}
export class OutputInstruction_2 {
    public kind: ASTKinds.OutputInstruction_2 = ASTKinds.OutputInstruction_2;
    public pos: PosInfo;
    public n: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, n: Expression){
        this.pos = pos;
        this.n = n;
        this.bytes = ((): Bytes => {
        return [0xD3, value8(pos, n)];
        })();
    }
}
export class OutputInstruction_3 {
    public kind: ASTKinds.OutputInstruction_3 = ASTKinds.OutputInstruction_3;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xA3];
        })();
    }
}
export class OutputInstruction_4 {
    public kind: ASTKinds.OutputInstruction_4 = ASTKinds.OutputInstruction_4;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xB3];
        })();
    }
}
export class OutputInstruction_5 {
    public kind: ASTKinds.OutputInstruction_5 = ASTKinds.OutputInstruction_5;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xAB];
        })();
    }
}
export class OutputInstruction_6 {
    public kind: ASTKinds.OutputInstruction_6 = ASTKinds.OutputInstruction_6;
    public bytes: Bytes;
    constructor(){
        this.bytes = ((): Bytes => {
        return [0xED, 0xBB];
        })();
    }
}
export type ByteDirective = ByteDirective_1 | ByteDirective_2 | ByteDirective_3 | ByteDirective_4 | ByteDirective_5;
export type ByteDirective_1 = string;
export type ByteDirective_2 = string;
export type ByteDirective_3 = string;
export type ByteDirective_4 = string;
export type ByteDirective_5 = string;
export type WordDirective = WordDirective_1 | WordDirective_2 | WordDirective_3;
export type WordDirective_1 = string;
export type WordDirective_2 = string;
export type WordDirective_3 = string;
export type BlockDirective = BlockDirective_1 | BlockDirective_2 | BlockDirective_3;
export type BlockDirective_1 = string;
export type BlockDirective_2 = string;
export type BlockDirective_3 = string;
export type ByteValue = ByteValue_1 | ByteValue_2 | ByteValue_3 | ByteValue_4;
export class ByteValue_1 {
    public kind: ASTKinds.ByteValue_1 = ASTKinds.ByteValue_1;
    public c: Char;
    public bytes: Bytes;
    constructor(c: Char){
        this.c = c;
        this.bytes = ((): Bytes => {
        return c.bytes;
        })();
    }
}
export class ByteValue_2 {
    public kind: ASTKinds.ByteValue_2 = ASTKinds.ByteValue_2;
    public s: Str;
    public bytes: Bytes;
    constructor(s: Str){
        this.s = s;
        this.bytes = ((): Bytes => {
        return s.bytes;
        })();
    }
}
export class ByteValue_3 {
    public kind: ASTKinds.ByteValue_3 = ASTKinds.ByteValue_3;
    public s: ZX81Str;
    public bytes: Bytes;
    constructor(s: ZX81Str){
        this.s = s;
        this.bytes = ((): Bytes => {
        return s.bytes;
        })();
    }
}
export class ByteValue_4 {
    public kind: ASTKinds.ByteValue_4 = ASTKinds.ByteValue_4;
    public pos: PosInfo;
    public e: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, e: Expression){
        this.pos = pos;
        this.e = e;
        this.bytes = ((): Bytes => {
        return [value8(pos, e)];
        })();
    }
}
export class WordValue {
    public kind: ASTKinds.WordValue = ASTKinds.WordValue;
    public pos: PosInfo;
    public e: Expression;
    public bytes: Bytes;
    constructor(pos: PosInfo, e: Expression){
        this.pos = pos;
        this.e = e;
        this.bytes = ((): Bytes => {
        return [value16LE(pos, e)];
        })();
    }
}
export type DataDirective = DataDirective_1 | DataDirective_2 | DataDirective_3 | DataDirective_4;
export class DataDirective_1 {
    public kind: ASTKinds.DataDirective_1 = ASTKinds.DataDirective_1;
    public pos0: PosInfo;
    public data0: ByteValue;
    public data: DataDirective_$0[];
    public bytes: Bytes;
    constructor(pos0: PosInfo, data0: ByteValue, data: DataDirective_$0[]){
        this.pos0 = pos0;
        this.data0 = data0;
        this.data = data;
        this.bytes = ((): Bytes => {
        return dataBytes(pos0, data0, data);
        })();
    }
}
export class DataDirective_2 {
    public kind: ASTKinds.DataDirective_2 = ASTKinds.DataDirective_2;
    public pos0: PosInfo;
    public data0: ByteValue;
    public data: DataDirective_$1[];
    public bytes: Bytes;
    constructor(pos0: PosInfo, data0: ByteValue, data: DataDirective_$1[]){
        this.pos0 = pos0;
        this.data0 = data0;
        this.data = data;
        this.bytes = ((): Bytes => {
        return dataBytesZero(pos0, data0, data);
        })();
    }
}
export class DataDirective_3 {
    public kind: ASTKinds.DataDirective_3 = ASTKinds.DataDirective_3;
    public pos0: PosInfo;
    public data0: WordValue;
    public data: DataDirective_$2[];
    public bytes: Bytes;
    constructor(pos0: PosInfo, data0: WordValue, data: DataDirective_$2[]){
        this.pos0 = pos0;
        this.data0 = data0;
        this.data = data;
        this.bytes = ((): Bytes => {
        return dataWords(pos0, data0, data);
        })();
    }
}
export class DataDirective_4 {
    public kind: ASTKinds.DataDirective_4 = ASTKinds.DataDirective_4;
    public pos0: PosInfo;
    public nn: Expression;
    public data: Nullable<DataDirective_$3>;
    public bytes: Bytes;
    constructor(pos0: PosInfo, nn: Expression, data: Nullable<DataDirective_$3>){
        this.pos0 = pos0;
        this.nn = nn;
        this.data = data;
        this.bytes = ((): Bytes => {
        return [dataBlock(pos0, nn, data?.pos1, data?.b)];
        })();
    }
}
export interface DataDirective_$0 {
    kind: ASTKinds.DataDirective_$0;
    inner: ByteValue;
}
export interface DataDirective_$1 {
    kind: ASTKinds.DataDirective_$1;
    inner: ByteValue;
}
export interface DataDirective_$2 {
    kind: ASTKinds.DataDirective_$2;
    inner: WordValue;
}
export interface DataDirective_$3 {
    kind: ASTKinds.DataDirective_$3;
    pos1: PosInfo;
    b: Expression;
}
export type EscapeSequence = EscapeSequence_1 | EscapeSequence_2 | EscapeSequence_3;
export type EscapeSequence_1 = SimpleEscapeSequence;
export type EscapeSequence_2 = OctalEscapeSequence;
export type EscapeSequence_3 = HexadecimalEscapeSequence;
export class SimpleEscapeSequence {
    public kind: ASTKinds.SimpleEscapeSequence = ASTKinds.SimpleEscapeSequence;
    public raw: SimpleEscapeSequence_$0;
    public bytes: Bytes;
    constructor(raw: SimpleEscapeSequence_$0){
        this.raw = raw;
        this.bytes = ((): Bytes => {
        return parseSimpleEscape(raw);
        })();
    }
}
export type SimpleEscapeSequence_$0 = SimpleEscapeSequence_$0_1 | SimpleEscapeSequence_$0_2 | SimpleEscapeSequence_$0_3 | SimpleEscapeSequence_$0_4 | SimpleEscapeSequence_$0_5 | SimpleEscapeSequence_$0_6 | SimpleEscapeSequence_$0_7 | SimpleEscapeSequence_$0_8 | SimpleEscapeSequence_$0_9 | SimpleEscapeSequence_$0_10 | SimpleEscapeSequence_$0_11 | SimpleEscapeSequence_$0_12;
export type SimpleEscapeSequence_$0_1 = string;
export type SimpleEscapeSequence_$0_2 = string;
export type SimpleEscapeSequence_$0_3 = string;
export type SimpleEscapeSequence_$0_4 = string;
export type SimpleEscapeSequence_$0_5 = string;
export type SimpleEscapeSequence_$0_6 = string;
export type SimpleEscapeSequence_$0_7 = string;
export type SimpleEscapeSequence_$0_8 = string;
export type SimpleEscapeSequence_$0_9 = string;
export type SimpleEscapeSequence_$0_10 = string;
export type SimpleEscapeSequence_$0_11 = string;
export type SimpleEscapeSequence_$0_12 = string;
export class OctalEscapeSequence {
    public kind: ASTKinds.OctalEscapeSequence = ASTKinds.OctalEscapeSequence;
    public pos: PosInfo;
    public raw: string;
    public bytes: Bytes;
    constructor(pos: PosInfo, raw: string){
        this.pos = pos;
        this.raw = raw;
        this.bytes = ((): Bytes => {
        return parseOctalEscape(pos, raw);
        })();
    }
}
export class HexadecimalEscapeSequence {
    public kind: ASTKinds.HexadecimalEscapeSequence = ASTKinds.HexadecimalEscapeSequence;
    public pos: PosInfo;
    public raw: string;
    public bytes: Bytes;
    constructor(pos: PosInfo, raw: string){
        this.pos = pos;
        this.raw = raw;
        this.bytes = ((): Bytes => {
        return parseHexadecimalEscape(pos, raw);
        })();
    }
}
export class SimpleChar {
    public kind: ASTKinds.SimpleChar = ASTKinds.SimpleChar;
    public pos: PosInfo;
    public raw: string;
    public bytes: Bytes;
    constructor(pos: PosInfo, raw: string){
        this.pos = pos;
        this.raw = raw;
        this.bytes = ((): Bytes => {
        return parseSimpleChar(pos, raw);
        })();
    }
}
export class StringChar {
    public kind: ASTKinds.StringChar = ASTKinds.StringChar;
    public pos: PosInfo;
    public raw: string;
    public bytes: Bytes;
    constructor(pos: PosInfo, raw: string){
        this.pos = pos;
        this.raw = raw;
        this.bytes = ((): Bytes => {
        return parseSimpleChar(pos, raw);
        })();
    }
}
export class Char {
    public kind: ASTKinds.Char = ASTKinds.Char;
    public char: Char_$0;
    public bytes: Bytes;
    constructor(char: Char_$0){
        this.char = char;
        this.bytes = ((): Bytes => {
        return char.bytes;
        })();
    }
}
export type Char_$0 = Char_$0_1 | Char_$0_2;
export type Char_$0_1 = SimpleChar;
export type Char_$0_2 = EscapeSequence;
export class Str {
    public kind: ASTKinds.Str = ASTKinds.Str;
    public chars: Str_$0[];
    public bytes: Bytes;
    constructor(chars: Str_$0[]){
        this.chars = chars;
        this.bytes = ((): Bytes => {
        return chars.reduce((r, c) => { return r.concat(c.bytes); }, [] as Bytes);
        })();
    }
}
export type Str_$0 = Str_$0_1 | Str_$0_2;
export type Str_$0_1 = StringChar;
export type Str_$0_2 = EscapeSequence;
export class ZX81Str {
    public kind: ASTKinds.ZX81Str = ASTKinds.ZX81Str;
    public pos: PosInfo;
    public chars: string;
    public bytes: Bytes;
    constructor(pos: PosInfo, chars: string){
        this.pos = pos;
        this.chars = chars;
        this.bytes = ((): Bytes => {
        return parseZX81String(pos, chars);
        })();
    }
}
export type Comment = string;
export interface OriginDirective {
    kind: ASTKinds.OriginDirective;
    address: nn;
}
export type Filename = Filename_1 | Filename_2;
export interface Filename_1 {
    kind: ASTKinds.Filename_1;
    raw: string;
}
export interface Filename_2 {
    kind: ASTKinds.Filename_2;
    raw: string;
}
export class IncludeDirective {
    public kind: ASTKinds.IncludeDirective = ASTKinds.IncludeDirective;
    public name: Filename;
    public bytes: Bytes;
    constructor(name: Filename){
        this.name = name;
        this.bytes = ((): Bytes => {
        return includeFile(name.raw);
        })();
    }
}
export class OutputDirective {
    public kind: ASTKinds.OutputDirective = ASTKinds.OutputDirective;
    public name: Filename;
    public sld: Nullable<OutputDirective_$0>;
    public void: void;
    constructor(name: Filename, sld: Nullable<OutputDirective_$0>){
        this.name = name;
        this.sld = sld;
        this.void = ((): void => {
        setOutputName(name.raw, sld != null);
        })();
    }
}
export interface OutputDirective_$0 {
    kind: ASTKinds.OutputDirective_$0;
}
export class DeviceDirective {
    public kind: ASTKinds.DeviceDirective = ASTKinds.DeviceDirective;
    public raw: string;
    public void: void;
    constructor(raw: string){
        this.raw = raw;
        this.void = ((): void => {
        setDeviceName(raw);
        })();
    }
}
export class Parser {
    private readonly input: string;
    private pos: PosInfo;
    private negating: boolean = false;
    private memoSafe: boolean = true;
    constructor(input: string) {
        this.pos = {overallPos: 0, line: 1, offset: 0};
        this.input = input;
    }
    public reset(pos: PosInfo) {
        this.pos = pos;
    }
    public finished(): boolean {
        return this.pos.overallPos === this.input.length;
    }
    public clearMemos(): void {
    }
    public matchstart($$dpth: number, $$cr?: ErrorTracker): Nullable<start> {
        return this.run<start>($$dpth,
            () => {
                let $scope$program: Nullable<Program>;
                let $$res: Nullable<start> = null;
                if (true
                    && ($scope$program = this.matchProgram($$dpth + 1, $$cr)) !== null
                    && this.match$EOF($$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.start, program: $scope$program};
                }
                return $$res;
            });
    }
    public matchr($$dpth: number, $$cr?: ErrorTracker): Nullable<r> {
        return this.choice<r>([
            () => this.matchr_1($$dpth + 1, $$cr),
            () => this.matchr_2($$dpth + 1, $$cr),
            () => this.matchr_3($$dpth + 1, $$cr),
            () => this.matchr_4($$dpth + 1, $$cr),
            () => this.matchr_5($$dpth + 1, $$cr),
            () => this.matchr_6($$dpth + 1, $$cr),
            () => this.matchr_7($$dpth + 1, $$cr),
        ]);
    }
    public matchr_1($$dpth: number, $$cr?: ErrorTracker): Nullable<r_1> {
        return this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr);
    }
    public matchr_2($$dpth: number, $$cr?: ErrorTracker): Nullable<r_2> {
        return this.regexAccept(String.raw`(?:b)`, $$dpth + 1, $$cr);
    }
    public matchr_3($$dpth: number, $$cr?: ErrorTracker): Nullable<r_3> {
        return this.regexAccept(String.raw`(?:c)`, $$dpth + 1, $$cr);
    }
    public matchr_4($$dpth: number, $$cr?: ErrorTracker): Nullable<r_4> {
        return this.regexAccept(String.raw`(?:d)`, $$dpth + 1, $$cr);
    }
    public matchr_5($$dpth: number, $$cr?: ErrorTracker): Nullable<r_5> {
        return this.regexAccept(String.raw`(?:e)`, $$dpth + 1, $$cr);
    }
    public matchr_6($$dpth: number, $$cr?: ErrorTracker): Nullable<r_6> {
        return this.regexAccept(String.raw`(?:h)`, $$dpth + 1, $$cr);
    }
    public matchr_7($$dpth: number, $$cr?: ErrorTracker): Nullable<r_7> {
        return this.regexAccept(String.raw`(?:l)`, $$dpth + 1, $$cr);
    }
    public matchdd($$dpth: number, $$cr?: ErrorTracker): Nullable<dd> {
        return this.choice<dd>([
            () => this.matchdd_1($$dpth + 1, $$cr),
            () => this.matchdd_2($$dpth + 1, $$cr),
            () => this.matchdd_3($$dpth + 1, $$cr),
            () => this.matchdd_4($$dpth + 1, $$cr),
        ]);
    }
    public matchdd_1($$dpth: number, $$cr?: ErrorTracker): Nullable<dd_1> {
        return this.regexAccept(String.raw`(?:bc)`, $$dpth + 1, $$cr);
    }
    public matchdd_2($$dpth: number, $$cr?: ErrorTracker): Nullable<dd_2> {
        return this.regexAccept(String.raw`(?:de)`, $$dpth + 1, $$cr);
    }
    public matchdd_3($$dpth: number, $$cr?: ErrorTracker): Nullable<dd_3> {
        return this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr);
    }
    public matchdd_4($$dpth: number, $$cr?: ErrorTracker): Nullable<dd_4> {
        return this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr);
    }
    public matchss($$dpth: number, $$cr?: ErrorTracker): Nullable<ss> {
        return this.matchdd($$dpth + 1, $$cr);
    }
    public matchqq($$dpth: number, $$cr?: ErrorTracker): Nullable<qq> {
        return this.choice<qq>([
            () => this.matchqq_1($$dpth + 1, $$cr),
            () => this.matchqq_2($$dpth + 1, $$cr),
            () => this.matchqq_3($$dpth + 1, $$cr),
            () => this.matchqq_4($$dpth + 1, $$cr),
        ]);
    }
    public matchqq_1($$dpth: number, $$cr?: ErrorTracker): Nullable<qq_1> {
        return this.regexAccept(String.raw`(?:bc)`, $$dpth + 1, $$cr);
    }
    public matchqq_2($$dpth: number, $$cr?: ErrorTracker): Nullable<qq_2> {
        return this.regexAccept(String.raw`(?:de)`, $$dpth + 1, $$cr);
    }
    public matchqq_3($$dpth: number, $$cr?: ErrorTracker): Nullable<qq_3> {
        return this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr);
    }
    public matchqq_4($$dpth: number, $$cr?: ErrorTracker): Nullable<qq_4> {
        return this.regexAccept(String.raw`(?:af)`, $$dpth + 1, $$cr);
    }
    public matchpp($$dpth: number, $$cr?: ErrorTracker): Nullable<pp> {
        return this.choice<pp>([
            () => this.matchpp_1($$dpth + 1, $$cr),
            () => this.matchpp_2($$dpth + 1, $$cr),
            () => this.matchpp_3($$dpth + 1, $$cr),
            () => this.matchpp_4($$dpth + 1, $$cr),
        ]);
    }
    public matchpp_1($$dpth: number, $$cr?: ErrorTracker): Nullable<pp_1> {
        return this.regexAccept(String.raw`(?:bc)`, $$dpth + 1, $$cr);
    }
    public matchpp_2($$dpth: number, $$cr?: ErrorTracker): Nullable<pp_2> {
        return this.regexAccept(String.raw`(?:de)`, $$dpth + 1, $$cr);
    }
    public matchpp_3($$dpth: number, $$cr?: ErrorTracker): Nullable<pp_3> {
        return this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr);
    }
    public matchpp_4($$dpth: number, $$cr?: ErrorTracker): Nullable<pp_4> {
        return this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr);
    }
    public matchrr($$dpth: number, $$cr?: ErrorTracker): Nullable<rr> {
        return this.choice<rr>([
            () => this.matchrr_1($$dpth + 1, $$cr),
            () => this.matchrr_2($$dpth + 1, $$cr),
            () => this.matchrr_3($$dpth + 1, $$cr),
            () => this.matchrr_4($$dpth + 1, $$cr),
        ]);
    }
    public matchrr_1($$dpth: number, $$cr?: ErrorTracker): Nullable<rr_1> {
        return this.regexAccept(String.raw`(?:bc)`, $$dpth + 1, $$cr);
    }
    public matchrr_2($$dpth: number, $$cr?: ErrorTracker): Nullable<rr_2> {
        return this.regexAccept(String.raw`(?:de)`, $$dpth + 1, $$cr);
    }
    public matchrr_3($$dpth: number, $$cr?: ErrorTracker): Nullable<rr_3> {
        return this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr);
    }
    public matchrr_4($$dpth: number, $$cr?: ErrorTracker): Nullable<rr_4> {
        return this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr);
    }
    public matchn($$dpth: number, $$cr?: ErrorTracker): Nullable<n> {
        return this.choice<n>([
            () => this.matchn_1($$dpth + 1, $$cr),
            () => this.matchn_2($$dpth + 1, $$cr),
            () => this.matchn_3($$dpth + 1, $$cr),
            () => this.matchn_4($$dpth + 1, $$cr),
        ]);
    }
    public matchn_1($$dpth: number, $$cr?: ErrorTracker): Nullable<n_1> {
        return this.run<n_1>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$binary: Nullable<binary>;
                let $$res: Nullable<n_1> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$binary = this.matchbinary($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new n_1($scope$pos, $scope$binary);
                }
                return $$res;
            });
    }
    public matchn_2($$dpth: number, $$cr?: ErrorTracker): Nullable<n_2> {
        return this.run<n_2>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$hexadecimal: Nullable<hexadecimal>;
                let $$res: Nullable<n_2> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$hexadecimal = this.matchhexadecimal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new n_2($scope$pos, $scope$hexadecimal);
                }
                return $$res;
            });
    }
    public matchn_3($$dpth: number, $$cr?: ErrorTracker): Nullable<n_3> {
        return this.run<n_3>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$octal: Nullable<octal>;
                let $$res: Nullable<n_3> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$octal = this.matchoctal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new n_3($scope$pos, $scope$octal);
                }
                return $$res;
            });
    }
    public matchn_4($$dpth: number, $$cr?: ErrorTracker): Nullable<n_4> {
        return this.run<n_4>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$decimal: Nullable<decimal>;
                let $$res: Nullable<n_4> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$decimal = this.matchdecimal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new n_4($scope$pos, $scope$decimal);
                }
                return $$res;
            });
    }
    public matchnn($$dpth: number, $$cr?: ErrorTracker): Nullable<nn> {
        return this.choice<nn>([
            () => this.matchnn_1($$dpth + 1, $$cr),
            () => this.matchnn_2($$dpth + 1, $$cr),
            () => this.matchnn_3($$dpth + 1, $$cr),
            () => this.matchnn_4($$dpth + 1, $$cr),
        ]);
    }
    public matchnn_1($$dpth: number, $$cr?: ErrorTracker): Nullable<nn_1> {
        return this.run<nn_1>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$binary: Nullable<binary>;
                let $$res: Nullable<nn_1> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$binary = this.matchbinary($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new nn_1($scope$pos, $scope$binary);
                }
                return $$res;
            });
    }
    public matchnn_2($$dpth: number, $$cr?: ErrorTracker): Nullable<nn_2> {
        return this.run<nn_2>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$hexadecimal: Nullable<hexadecimal>;
                let $$res: Nullable<nn_2> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$hexadecimal = this.matchhexadecimal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new nn_2($scope$pos, $scope$hexadecimal);
                }
                return $$res;
            });
    }
    public matchnn_3($$dpth: number, $$cr?: ErrorTracker): Nullable<nn_3> {
        return this.run<nn_3>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$octal: Nullable<octal>;
                let $$res: Nullable<nn_3> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$octal = this.matchoctal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new nn_3($scope$pos, $scope$octal);
                }
                return $$res;
            });
    }
    public matchnn_4($$dpth: number, $$cr?: ErrorTracker): Nullable<nn_4> {
        return this.run<nn_4>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$decimal: Nullable<decimal>;
                let $$res: Nullable<nn_4> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$decimal = this.matchdecimal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new nn_4($scope$pos, $scope$decimal);
                }
                return $$res;
            });
    }
    public matchdecimal($$dpth: number, $$cr?: ErrorTracker): Nullable<decimal> {
        return this.run<decimal>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<decimal> = null;
                if (true
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-9]+)`, $$dpth + 1, $$cr)) !== null
                    && ((this.regexAccept(String.raw`(?:d)`, $$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.decimal, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchbinary($$dpth: number, $$cr?: ErrorTracker): Nullable<binary> {
        return this.run<binary>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<binary> = null;
                if (true
                    && this.matchbinary_$0($$dpth + 1, $$cr) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-1]+)`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.binary, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchbinary_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<binary_$0> {
        return this.choice<binary_$0>([
            () => this.matchbinary_$0_1($$dpth + 1, $$cr),
            () => this.matchbinary_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchbinary_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<binary_$0_1> {
        return this.regexAccept(String.raw`(?:0b)`, $$dpth + 1, $$cr);
    }
    public matchbinary_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<binary_$0_2> {
        return this.regexAccept(String.raw`(?:%)`, $$dpth + 1, $$cr);
    }
    public matchoctal($$dpth: number, $$cr?: ErrorTracker): Nullable<octal> {
        return this.choice<octal>([
            () => this.matchoctal_1($$dpth + 1, $$cr),
            () => this.matchoctal_2($$dpth + 1, $$cr),
        ]);
    }
    public matchoctal_1($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_1> {
        return this.run<octal_1>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<octal_1> = null;
                if (true
                    && this.matchoctal_$0($$dpth + 1, $$cr) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-7]+)`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.octal_1, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchoctal_2($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_2> {
        return this.run<octal_2>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<octal_2> = null;
                if (true
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-7]+)`, $$dpth + 1, $$cr)) !== null
                    && this.matchoctal_$1($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.octal_2, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchoctal_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_$0> {
        return this.choice<octal_$0>([
            () => this.matchoctal_$0_1($$dpth + 1, $$cr),
            () => this.matchoctal_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchoctal_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_$0_1> {
        return this.regexAccept(String.raw`(?:0q)`, $$dpth + 1, $$cr);
    }
    public matchoctal_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_$0_2> {
        return this.regexAccept(String.raw`(?:0o)`, $$dpth + 1, $$cr);
    }
    public matchoctal_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_$1> {
        return this.choice<octal_$1>([
            () => this.matchoctal_$1_1($$dpth + 1, $$cr),
            () => this.matchoctal_$1_2($$dpth + 1, $$cr),
        ]);
    }
    public matchoctal_$1_1($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_$1_1> {
        return this.regexAccept(String.raw`(?:q)`, $$dpth + 1, $$cr);
    }
    public matchoctal_$1_2($$dpth: number, $$cr?: ErrorTracker): Nullable<octal_$1_2> {
        return this.regexAccept(String.raw`(?:o)`, $$dpth + 1, $$cr);
    }
    public matchhexadecimal($$dpth: number, $$cr?: ErrorTracker): Nullable<hexadecimal> {
        return this.choice<hexadecimal>([
            () => this.matchhexadecimal_1($$dpth + 1, $$cr),
            () => this.matchhexadecimal_2($$dpth + 1, $$cr),
        ]);
    }
    public matchhexadecimal_1($$dpth: number, $$cr?: ErrorTracker): Nullable<hexadecimal_1> {
        return this.run<hexadecimal_1>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<hexadecimal_1> = null;
                if (true
                    && this.matchhexadecimal_$0($$dpth + 1, $$cr) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-9a-f]+)`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.hexadecimal_1, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchhexadecimal_2($$dpth: number, $$cr?: ErrorTracker): Nullable<hexadecimal_2> {
        return this.run<hexadecimal_2>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<hexadecimal_2> = null;
                if (true
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-9][0-9a-f]?)`, $$dpth + 1, $$cr)) !== null
                    && this.regexAccept(String.raw`(?:h)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.hexadecimal_2, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchhexadecimal_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<hexadecimal_$0> {
        return this.choice<hexadecimal_$0>([
            () => this.matchhexadecimal_$0_1($$dpth + 1, $$cr),
            () => this.matchhexadecimal_$0_2($$dpth + 1, $$cr),
            () => this.matchhexadecimal_$0_3($$dpth + 1, $$cr),
        ]);
    }
    public matchhexadecimal_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<hexadecimal_$0_1> {
        return this.regexAccept(String.raw`(?:0x)`, $$dpth + 1, $$cr);
    }
    public matchhexadecimal_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<hexadecimal_$0_2> {
        return this.regexAccept(String.raw`(?:\$)`, $$dpth + 1, $$cr);
    }
    public matchhexadecimal_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<hexadecimal_$0_3> {
        return this.regexAccept(String.raw`(?:#)`, $$dpth + 1, $$cr);
    }
    public matchd($$dpth: number, $$cr?: ErrorTracker): Nullable<d> {
        return this.matchn($$dpth + 1, $$cr);
    }
    public matche($$dpth: number, $$cr?: ErrorTracker): Nullable<e> {
        return this.matchn($$dpth + 1, $$cr);
    }
    public matchp($$dpth: number, $$cr?: ErrorTracker): Nullable<p> {
        return this.matchn($$dpth + 1, $$cr);
    }
    public matchb($$dpth: number, $$cr?: ErrorTracker): Nullable<b> {
        return this.run<b>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<b> = null;
                if (true
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-7])`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new b($scope$raw);
                }
                return $$res;
            });
    }
    public matchcc($$dpth: number, $$cr?: ErrorTracker): Nullable<cc> {
        return this.choice<cc>([
            () => this.matchcc_1($$dpth + 1, $$cr),
            () => this.matchcc_2($$dpth + 1, $$cr),
            () => this.matchcc_3($$dpth + 1, $$cr),
            () => this.matchcc_4($$dpth + 1, $$cr),
            () => this.matchcc_5($$dpth + 1, $$cr),
            () => this.matchcc_6($$dpth + 1, $$cr),
            () => this.matchcc_7($$dpth + 1, $$cr),
            () => this.matchcc_8($$dpth + 1, $$cr),
            () => this.matchcc_9($$dpth + 1, $$cr),
        ]);
    }
    public matchcc_1($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_1> {
        return this.regexAccept(String.raw`(?:nz)`, $$dpth + 1, $$cr);
    }
    public matchcc_2($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_2> {
        return this.regexAccept(String.raw`(?:z)`, $$dpth + 1, $$cr);
    }
    public matchcc_3($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_3> {
        return this.regexAccept(String.raw`(?:nc)`, $$dpth + 1, $$cr);
    }
    public matchcc_4($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_4> {
        return this.regexAccept(String.raw`(?:c)`, $$dpth + 1, $$cr);
    }
    public matchcc_5($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_5> {
        return this.regexAccept(String.raw`(?:po)`, $$dpth + 1, $$cr);
    }
    public matchcc_6($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_6> {
        return this.regexAccept(String.raw`(?:pe)`, $$dpth + 1, $$cr);
    }
    public matchcc_7($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_7> {
        return this.regexAccept(String.raw`(?:p)`, $$dpth + 1, $$cr);
    }
    public matchcc_8($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_8> {
        return this.regexAccept(String.raw`(?:m)`, $$dpth + 1, $$cr);
    }
    public matchcc_9($$dpth: number, $$cr?: ErrorTracker): Nullable<cc_9> {
        return this.regexAccept(String.raw`(?:s)`, $$dpth + 1, $$cr);
    }
    public matchjj($$dpth: number, $$cr?: ErrorTracker): Nullable<jj> {
        return this.choice<jj>([
            () => this.matchjj_1($$dpth + 1, $$cr),
            () => this.matchjj_2($$dpth + 1, $$cr),
            () => this.matchjj_3($$dpth + 1, $$cr),
            () => this.matchjj_4($$dpth + 1, $$cr),
        ]);
    }
    public matchjj_1($$dpth: number, $$cr?: ErrorTracker): Nullable<jj_1> {
        return this.regexAccept(String.raw`(?:c)`, $$dpth + 1, $$cr);
    }
    public matchjj_2($$dpth: number, $$cr?: ErrorTracker): Nullable<jj_2> {
        return this.regexAccept(String.raw`(?:nc)`, $$dpth + 1, $$cr);
    }
    public matchjj_3($$dpth: number, $$cr?: ErrorTracker): Nullable<jj_3> {
        return this.regexAccept(String.raw`(?:z)`, $$dpth + 1, $$cr);
    }
    public matchjj_4($$dpth: number, $$cr?: ErrorTracker): Nullable<jj_4> {
        return this.regexAccept(String.raw`(?:nz)`, $$dpth + 1, $$cr);
    }
    public match__($$dpth: number, $$cr?: ErrorTracker): Nullable<__> {
        return this.regexAccept(String.raw`(?:[ \t]+)`, $$dpth + 1, $$cr);
    }
    public match_($$dpth: number, $$cr?: ErrorTracker): Nullable<_> {
        return this.regexAccept(String.raw`(?:[ \t]*)`, $$dpth + 1, $$cr);
    }
    public match_eos($$dpth: number, $$cr?: ErrorTracker): Nullable<_eos> {
        return this.regexAccept(String.raw`(?:[ \t]*(;|\r\n|\n|//))`, $$dpth + 1, $$cr);
    }
    public matchProgram($$dpth: number, $$cr?: ErrorTracker): Nullable<Program> {
        return this.loop<Line>(() => this.matchLine($$dpth + 1, $$cr), true);
    }
    public matchLine($$dpth: number, $$cr?: ErrorTracker): Nullable<Line> {
        return this.choice<Line>([
            () => this.matchLine_1($$dpth + 1, $$cr),
            () => this.matchLine_2($$dpth + 1, $$cr),
        ]);
    }
    public matchLine_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Line_1> {
        return this.matchLineEqual($$dpth + 1, $$cr);
    }
    public matchLine_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Line_2> {
        return this.matchLineStatement($$dpth + 1, $$cr);
    }
    public matchEqual($$dpth: number, $$cr?: ErrorTracker): Nullable<Equal> {
        return this.regexAccept(String.raw`(?:\.?equ|eq)`, $$dpth + 1, $$cr);
    }
    public matchLineEqual($$dpth: number, $$cr?: ErrorTracker): Nullable<LineEqual> {
        return this.run<LineEqual>($$dpth,
            () => {
                let $scope$label: Nullable<LabelDeclaration>;
                let $scope$e: Nullable<Expression>;
                let $scope$comment: Nullable<Nullable<Comment>>;
                let $$res: Nullable<LineEqual> = null;
                if (true
                    && ($scope$label = this.matchLabelDeclaration($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.matchEqual($$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && (($scope$comment = this.matchComment($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\r\n|\n)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.LineEqual, label: $scope$label, e: $scope$e, comment: $scope$comment};
                }
                return $$res;
            });
    }
    public matchLineStatement($$dpth: number, $$cr?: ErrorTracker): Nullable<LineStatement> {
        return this.run<LineStatement>($$dpth,
            () => {
                let $scope$label: Nullable<Nullable<LabelDeclaration>>;
                let $scope$statement: Nullable<Nullable<Statement>>;
                let $scope$comment: Nullable<Nullable<Comment>>;
                let $$res: Nullable<LineStatement> = null;
                if (true
                    && (($scope$label = this.matchLabelDeclaration($$dpth + 1, $$cr)) || true)
                    && this.match_($$dpth + 1, $$cr) !== null
                    && (($scope$statement = this.matchStatement($$dpth + 1, $$cr)) || true)
                    && this.match_($$dpth + 1, $$cr) !== null
                    && (($scope$comment = this.matchComment($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\r\n|\n)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.LineStatement, label: $scope$label, statement: $scope$statement, comment: $scope$comment};
                }
                return $$res;
            });
    }
    public matchStatement($$dpth: number, $$cr?: ErrorTracker): Nullable<Statement> {
        return this.choice<Statement>([
            () => this.matchStatement_1($$dpth + 1, $$cr),
            () => this.matchStatement_2($$dpth + 1, $$cr),
        ]);
    }
    public matchStatement_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Statement_1> {
        return this.run<Statement_1>($$dpth,
            () => {
                let $scope$instruction: Nullable<Instruction>;
                let $$res: Nullable<Statement_1> = null;
                if (true
                    && ($scope$instruction = this.matchInstruction($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Statement_1($scope$instruction);
                }
                return $$res;
            });
    }
    public matchStatement_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Statement_2> {
        return this.run<Statement_2>($$dpth,
            () => {
                let $scope$directive: Nullable<Directive>;
                let $$res: Nullable<Statement_2> = null;
                if (true
                    && ($scope$directive = this.matchDirective($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Statement_2($scope$directive);
                }
                return $$res;
            });
    }
    public matchDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<Directive> {
        return this.choice<Directive>([
            () => this.matchDirective_1($$dpth + 1, $$cr),
            () => this.matchDirective_2($$dpth + 1, $$cr),
            () => this.matchDirective_3($$dpth + 1, $$cr),
            () => this.matchDirective_4($$dpth + 1, $$cr),
            () => this.matchDirective_5($$dpth + 1, $$cr),
        ]);
    }
    public matchDirective_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Directive_1> {
        return this.run<Directive_1>($$dpth,
            () => {
                let $scope$data: Nullable<DataDirective>;
                let $$res: Nullable<Directive_1> = null;
                if (true
                    && ($scope$data = this.matchDataDirective($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Directive_1($scope$data);
                }
                return $$res;
            });
    }
    public matchDirective_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Directive_2> {
        return this.run<Directive_2>($$dpth,
            () => {
                let $scope$origin: Nullable<OriginDirective>;
                let $$res: Nullable<Directive_2> = null;
                if (true
                    && ($scope$origin = this.matchOriginDirective($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Directive_2($scope$origin);
                }
                return $$res;
            });
    }
    public matchDirective_3($$dpth: number, $$cr?: ErrorTracker): Nullable<Directive_3> {
        return this.run<Directive_3>($$dpth,
            () => {
                let $scope$directive: Nullable<IncludeDirective>;
                let $$res: Nullable<Directive_3> = null;
                if (true
                    && ($scope$directive = this.matchIncludeDirective($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Directive_3($scope$directive);
                }
                return $$res;
            });
    }
    public matchDirective_4($$dpth: number, $$cr?: ErrorTracker): Nullable<Directive_4> {
        return this.run<Directive_4>($$dpth,
            () => {
                let $scope$directive: Nullable<OutputDirective>;
                let $$res: Nullable<Directive_4> = null;
                if (true
                    && ($scope$directive = this.matchOutputDirective($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Directive_4($scope$directive);
                }
                return $$res;
            });
    }
    public matchDirective_5($$dpth: number, $$cr?: ErrorTracker): Nullable<Directive_5> {
        return this.run<Directive_5>($$dpth,
            () => {
                let $scope$directive: Nullable<DeviceDirective>;
                let $$res: Nullable<Directive_5> = null;
                if (true
                    && ($scope$directive = this.matchDeviceDirective($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Directive_5($scope$directive);
                }
                return $$res;
            });
    }
    public matchForbiddenNames($$dpth: number, $$cr?: ErrorTracker): Nullable<ForbiddenNames> {
        return this.choice<ForbiddenNames>([
            () => this.matchForbiddenNames_1($$dpth + 1, $$cr),
            () => this.matchForbiddenNames_2($$dpth + 1, $$cr),
            () => this.matchForbiddenNames_3($$dpth + 1, $$cr),
            () => this.matchForbiddenNames_4($$dpth + 1, $$cr),
            () => this.matchForbiddenNames_5($$dpth + 1, $$cr),
        ]);
    }
    public matchForbiddenNames_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ForbiddenNames_1> {
        return this.regexAccept(String.raw`(?:block|.\?equ|\.?org|\.?include|\.?output|\.?device)`, $$dpth + 1, $$cr);
    }
    public matchForbiddenNames_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ForbiddenNames_2> {
        return this.regexAccept(String.raw`(?:byte|call|cpdr|cpir|defb|defm|defs|defw|djnz|eq|halt|indr|inir|lddr|ldir|otdr|otir|outd|outi|push|reti|retn|rlca|rrca|word)`, $$dpth + 1, $$cr);
    }
    public matchForbiddenNames_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ForbiddenNames_3> {
        return this.regexAccept(String.raw`(?:adc|add|and|bit|ccf|cpd|cpi|cpl|daa|dec|exx|inc|ind|ini|ldd|ldi|neg|nop|org|out|pop|res|ret|rla)`, $$dpth + 1, $$cr);
    }
    public matchForbiddenNames_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ForbiddenNames_4> {
        return this.regexAccept(String.raw`(?:rlc|rld|rra|rrc|rrd|rst|sbc|scf|set|sla|sra|srl|sub|xor)`, $$dpth + 1, $$cr);
    }
    public matchForbiddenNames_5($$dpth: number, $$cr?: ErrorTracker): Nullable<ForbiddenNames_5> {
        return this.regexAccept(String.raw`(?:cp|db|di|dm|ds|dw|dz|ei|eq|ex|im|in|jp|jr|ld|or|rl|rr)`, $$dpth + 1, $$cr);
    }
    public matchForbiddenLabel($$dpth: number, $$cr?: ErrorTracker): Nullable<ForbiddenLabel> {
        return this.run<ForbiddenLabel>($$dpth,
            () => {
                let $$res: Nullable<ForbiddenLabel> = null;
                if (true
                    && this.matchForbiddenNames($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:[ \t:\r\n])`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ForbiddenLabel, };
                }
                return $$res;
            });
    }
    public matchLabel($$dpth: number, $$cr?: ErrorTracker): Nullable<Label> {
        return this.run<Label>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$name: Nullable<string>;
                let $$res: Nullable<Label> = null;
                if (true
                    && this.negate(() => this.matchForbiddenLabel($$dpth + 1, $$cr)) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$name = this.regexAccept(String.raw`(?:[a-z_][a-z0-9_!\?#@\.]*)`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.Label, pos: $scope$pos, name: $scope$name};
                }
                return $$res;
            });
    }
    public matchLabelDeclaration($$dpth: number, $$cr?: ErrorTracker): Nullable<LabelDeclaration> {
        return this.run<LabelDeclaration>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$name: Nullable<string>;
                let $$res: Nullable<LabelDeclaration> = null;
                if (true
                    && this.negate(() => this.matchForbiddenLabel($$dpth + 1, $$cr)) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$name = this.regexAccept(String.raw`(?:[a-z_][a-z0-9_!\?#@\.]*)`, $$dpth + 1, $$cr)) !== null
                    && ((this.regexAccept(String.raw`(?:\:)`, $$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.LabelDeclaration, pos: $scope$pos, name: $scope$name};
                }
                return $$res;
            });
    }
    public matchExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<Expression> {
        return this.run<Expression>($$dpth,
            () => {
                let $scope$e1: Nullable<BitwiseOrExpression>;
                let $$res: Nullable<Expression> = null;
                if (true
                    && this.negate(() => this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr)) !== null
                    && ($scope$e1 = this.matchBitwiseOrExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Expression($scope$e1);
                }
                return $$res;
            });
    }
    public matchBitwiseOrExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<BitwiseOrExpression> {
        return this.run<BitwiseOrExpression>($$dpth,
            () => {
                let $scope$left: Nullable<BitwiseXOrExpression>;
                let $scope$right: Nullable<BitwiseOrExpression_$0[]>;
                let $$res: Nullable<BitwiseOrExpression> = null;
                if (true
                    && ($scope$left = this.matchBitwiseXOrExpression($$dpth + 1, $$cr)) !== null
                    && ($scope$right = this.loop<BitwiseOrExpression_$0>(() => this.matchBitwiseOrExpression_$0($$dpth + 1, $$cr), true)) !== null
                ) {
                    $$res = new BitwiseOrExpression($scope$left, $scope$right);
                }
                return $$res;
            });
    }
    public matchBitwiseOrExpression_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<BitwiseOrExpression_$0> {
        return this.run<BitwiseOrExpression_$0>($$dpth,
            () => {
                let $scope$e: Nullable<BitwiseOrExpression>;
                let $$res: Nullable<BitwiseOrExpression_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\|)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchBitwiseOrExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.BitwiseOrExpression_$0, e: $scope$e};
                }
                return $$res;
            });
    }
    public matchBitwiseXOrExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<BitwiseXOrExpression> {
        return this.run<BitwiseXOrExpression>($$dpth,
            () => {
                let $scope$left: Nullable<BitwiseAndExpression>;
                let $scope$right: Nullable<BitwiseXOrExpression_$0[]>;
                let $$res: Nullable<BitwiseXOrExpression> = null;
                if (true
                    && ($scope$left = this.matchBitwiseAndExpression($$dpth + 1, $$cr)) !== null
                    && ($scope$right = this.loop<BitwiseXOrExpression_$0>(() => this.matchBitwiseXOrExpression_$0($$dpth + 1, $$cr), true)) !== null
                ) {
                    $$res = new BitwiseXOrExpression($scope$left, $scope$right);
                }
                return $$res;
            });
    }
    public matchBitwiseXOrExpression_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<BitwiseXOrExpression_$0> {
        return this.run<BitwiseXOrExpression_$0>($$dpth,
            () => {
                let $scope$e: Nullable<BitwiseXOrExpression>;
                let $$res: Nullable<BitwiseXOrExpression_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\^)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchBitwiseXOrExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.BitwiseXOrExpression_$0, e: $scope$e};
                }
                return $$res;
            });
    }
    public matchBitwiseAndExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<BitwiseAndExpression> {
        return this.run<BitwiseAndExpression>($$dpth,
            () => {
                let $scope$left: Nullable<ShiftExpression>;
                let $scope$right: Nullable<BitwiseAndExpression_$0[]>;
                let $$res: Nullable<BitwiseAndExpression> = null;
                if (true
                    && ($scope$left = this.matchShiftExpression($$dpth + 1, $$cr)) !== null
                    && ($scope$right = this.loop<BitwiseAndExpression_$0>(() => this.matchBitwiseAndExpression_$0($$dpth + 1, $$cr), true)) !== null
                ) {
                    $$res = new BitwiseAndExpression($scope$left, $scope$right);
                }
                return $$res;
            });
    }
    public matchBitwiseAndExpression_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<BitwiseAndExpression_$0> {
        return this.run<BitwiseAndExpression_$0>($$dpth,
            () => {
                let $scope$e: Nullable<BitwiseAndExpression>;
                let $$res: Nullable<BitwiseAndExpression_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\&)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchBitwiseAndExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.BitwiseAndExpression_$0, e: $scope$e};
                }
                return $$res;
            });
    }
    public matchShiftExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<ShiftExpression> {
        return this.run<ShiftExpression>($$dpth,
            () => {
                let $scope$left: Nullable<AdditiveExpression>;
                let $scope$right: Nullable<ShiftExpression_$0[]>;
                let $$res: Nullable<ShiftExpression> = null;
                if (true
                    && ($scope$left = this.matchAdditiveExpression($$dpth + 1, $$cr)) !== null
                    && ($scope$right = this.loop<ShiftExpression_$0>(() => this.matchShiftExpression_$0($$dpth + 1, $$cr), true)) !== null
                ) {
                    $$res = new ShiftExpression($scope$left, $scope$right);
                }
                return $$res;
            });
    }
    public matchShiftExpression_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<ShiftExpression_$0> {
        return this.run<ShiftExpression_$0>($$dpth,
            () => {
                let $scope$op: Nullable<ShiftExpression_$0_$0>;
                let $scope$e: Nullable<ShiftExpression>;
                let $$res: Nullable<ShiftExpression_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$op = this.matchShiftExpression_$0_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchShiftExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.ShiftExpression_$0, op: $scope$op, e: $scope$e};
                }
                return $$res;
            });
    }
    public matchShiftExpression_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<ShiftExpression_$0_$0> {
        return this.choice<ShiftExpression_$0_$0>([
            () => this.matchShiftExpression_$0_$0_1($$dpth + 1, $$cr),
            () => this.matchShiftExpression_$0_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchShiftExpression_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ShiftExpression_$0_$0_1> {
        return this.regexAccept(String.raw`(?:<<)`, $$dpth + 1, $$cr);
    }
    public matchShiftExpression_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ShiftExpression_$0_$0_2> {
        return this.regexAccept(String.raw`(?:>>)`, $$dpth + 1, $$cr);
    }
    public matchAdditiveExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<AdditiveExpression> {
        return this.run<AdditiveExpression>($$dpth,
            () => {
                let $scope$left: Nullable<MultiplicativeExpression>;
                let $scope$right: Nullable<AdditiveExpression_$0[]>;
                let $$res: Nullable<AdditiveExpression> = null;
                if (true
                    && ($scope$left = this.matchMultiplicativeExpression($$dpth + 1, $$cr)) !== null
                    && ($scope$right = this.loop<AdditiveExpression_$0>(() => this.matchAdditiveExpression_$0($$dpth + 1, $$cr), true)) !== null
                ) {
                    $$res = new AdditiveExpression($scope$left, $scope$right);
                }
                return $$res;
            });
    }
    public matchAdditiveExpression_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<AdditiveExpression_$0> {
        return this.run<AdditiveExpression_$0>($$dpth,
            () => {
                let $scope$op: Nullable<AdditiveExpression_$0_$0>;
                let $scope$e: Nullable<AdditiveExpression>;
                let $$res: Nullable<AdditiveExpression_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$op = this.matchAdditiveExpression_$0_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchAdditiveExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.AdditiveExpression_$0, op: $scope$op, e: $scope$e};
                }
                return $$res;
            });
    }
    public matchAdditiveExpression_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<AdditiveExpression_$0_$0> {
        return this.choice<AdditiveExpression_$0_$0>([
            () => this.matchAdditiveExpression_$0_$0_1($$dpth + 1, $$cr),
            () => this.matchAdditiveExpression_$0_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchAdditiveExpression_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<AdditiveExpression_$0_$0_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchAdditiveExpression_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<AdditiveExpression_$0_$0_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchMultiplicativeExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<MultiplicativeExpression> {
        return this.run<MultiplicativeExpression>($$dpth,
            () => {
                let $scope$left: Nullable<UnaryExpression>;
                let $scope$right: Nullable<MultiplicativeExpression_$0[]>;
                let $$res: Nullable<MultiplicativeExpression> = null;
                if (true
                    && ($scope$left = this.matchUnaryExpression($$dpth + 1, $$cr)) !== null
                    && ($scope$right = this.loop<MultiplicativeExpression_$0>(() => this.matchMultiplicativeExpression_$0($$dpth + 1, $$cr), true)) !== null
                ) {
                    $$res = new MultiplicativeExpression($scope$left, $scope$right);
                }
                return $$res;
            });
    }
    public matchMultiplicativeExpression_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<MultiplicativeExpression_$0> {
        return this.run<MultiplicativeExpression_$0>($$dpth,
            () => {
                let $scope$op: Nullable<MultiplicativeExpression_$0_$0>;
                let $scope$e: Nullable<MultiplicativeExpression>;
                let $$res: Nullable<MultiplicativeExpression_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$op = this.matchMultiplicativeExpression_$0_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchMultiplicativeExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.MultiplicativeExpression_$0, op: $scope$op, e: $scope$e};
                }
                return $$res;
            });
    }
    public matchMultiplicativeExpression_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<MultiplicativeExpression_$0_$0> {
        return this.choice<MultiplicativeExpression_$0_$0>([
            () => this.matchMultiplicativeExpression_$0_$0_1($$dpth + 1, $$cr),
            () => this.matchMultiplicativeExpression_$0_$0_2($$dpth + 1, $$cr),
            () => this.matchMultiplicativeExpression_$0_$0_3($$dpth + 1, $$cr),
        ]);
    }
    public matchMultiplicativeExpression_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<MultiplicativeExpression_$0_$0_1> {
        return this.regexAccept(String.raw`(?:\*)`, $$dpth + 1, $$cr);
    }
    public matchMultiplicativeExpression_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<MultiplicativeExpression_$0_$0_2> {
        return this.regexAccept(String.raw`(?:%)`, $$dpth + 1, $$cr);
    }
    public matchMultiplicativeExpression_$0_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<MultiplicativeExpression_$0_$0_3> {
        return this.regexAccept(String.raw`(?:/)`, $$dpth + 1, $$cr);
    }
    public matchUnaryExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<UnaryExpression> {
        return this.choice<UnaryExpression>([
            () => this.matchUnaryExpression_1($$dpth + 1, $$cr),
            () => this.matchUnaryExpression_2($$dpth + 1, $$cr),
        ]);
    }
    public matchUnaryExpression_1($$dpth: number, $$cr?: ErrorTracker): Nullable<UnaryExpression_1> {
        return this.run<UnaryExpression_1>($$dpth,
            () => {
                let $scope$op: Nullable<UnaryExpression_$0>;
                let $scope$e: Nullable<PrimaryExpression>;
                let $$res: Nullable<UnaryExpression_1> = null;
                if (true
                    && ($scope$op = this.matchUnaryExpression_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchPrimaryExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new UnaryExpression_1($scope$op, $scope$e);
                }
                return $$res;
            });
    }
    public matchUnaryExpression_2($$dpth: number, $$cr?: ErrorTracker): Nullable<UnaryExpression_2> {
        return this.run<UnaryExpression_2>($$dpth,
            () => {
                let $scope$e: Nullable<PrimaryExpression>;
                let $$res: Nullable<UnaryExpression_2> = null;
                if (true
                    && ($scope$e = this.matchPrimaryExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new UnaryExpression_2($scope$e);
                }
                return $$res;
            });
    }
    public matchUnaryExpression_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<UnaryExpression_$0> {
        return this.choice<UnaryExpression_$0>([
            () => this.matchUnaryExpression_$0_1($$dpth + 1, $$cr),
            () => this.matchUnaryExpression_$0_2($$dpth + 1, $$cr),
            () => this.matchUnaryExpression_$0_3($$dpth + 1, $$cr),
        ]);
    }
    public matchUnaryExpression_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<UnaryExpression_$0_1> {
        return this.regexAccept(String.raw`(?:~)`, $$dpth + 1, $$cr);
    }
    public matchUnaryExpression_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<UnaryExpression_$0_2> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchUnaryExpression_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<UnaryExpression_$0_3> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchPrimaryExpression($$dpth: number, $$cr?: ErrorTracker): Nullable<PrimaryExpression> {
        return this.choice<PrimaryExpression>([
            () => this.matchPrimaryExpression_1($$dpth + 1, $$cr),
            () => this.matchPrimaryExpression_2($$dpth + 1, $$cr),
            () => this.matchPrimaryExpression_3($$dpth + 1, $$cr),
        ]);
    }
    public matchPrimaryExpression_1($$dpth: number, $$cr?: ErrorTracker): Nullable<PrimaryExpression_1> {
        return this.run<PrimaryExpression_1>($$dpth,
            () => {
                let $scope$nn: Nullable<nn>;
                let $$res: Nullable<PrimaryExpression_1> = null;
                if (true
                    && ($scope$nn = this.matchnn($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new PrimaryExpression_1($scope$nn);
                }
                return $$res;
            });
    }
    public matchPrimaryExpression_2($$dpth: number, $$cr?: ErrorTracker): Nullable<PrimaryExpression_2> {
        return this.run<PrimaryExpression_2>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$label: Nullable<Label>;
                let $$res: Nullable<PrimaryExpression_2> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$label = this.matchLabel($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new PrimaryExpression_2($scope$pos, $scope$label);
                }
                return $$res;
            });
    }
    public matchPrimaryExpression_3($$dpth: number, $$cr?: ErrorTracker): Nullable<PrimaryExpression_3> {
        return this.run<PrimaryExpression_3>($$dpth,
            () => {
                let $scope$e: Nullable<BitwiseOrExpression>;
                let $$res: Nullable<PrimaryExpression_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && ($scope$e = this.matchBitwiseOrExpression($$dpth + 1, $$cr)) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = new PrimaryExpression_3($scope$e);
                }
                return $$res;
            });
    }
    public matchReg8($$dpth: number, $$cr?: ErrorTracker): Nullable<Reg8> {
        return this.run<Reg8>($$dpth,
            () => {
                let $scope$reg: Nullable<r>;
                let $$res: Nullable<Reg8> = null;
                if (true
                    && ($scope$reg = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<string>(() => this.regexAccept(String.raw`(?:[^a-z0-9_!\?#@\.])`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.Reg8, reg: $scope$reg};
                }
                return $$res;
            });
    }
    public matchInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction> {
        return this.choice<Instruction>([
            () => this.matchInstruction_1($$dpth + 1, $$cr),
            () => this.matchInstruction_2($$dpth + 1, $$cr),
            () => this.matchInstruction_3($$dpth + 1, $$cr),
            () => this.matchInstruction_4($$dpth + 1, $$cr),
            () => this.matchInstruction_5($$dpth + 1, $$cr),
            () => this.matchInstruction_6($$dpth + 1, $$cr),
            () => this.matchInstruction_7($$dpth + 1, $$cr),
            () => this.matchInstruction_8($$dpth + 1, $$cr),
            () => this.matchInstruction_9($$dpth + 1, $$cr),
            () => this.matchInstruction_10($$dpth + 1, $$cr),
            () => this.matchInstruction_11($$dpth + 1, $$cr),
            () => this.matchInstruction_12($$dpth + 1, $$cr),
            () => this.matchInstruction_13($$dpth + 1, $$cr),
            () => this.matchInstruction_14($$dpth + 1, $$cr),
            () => this.matchInstruction_15($$dpth + 1, $$cr),
            () => this.matchInstruction_16($$dpth + 1, $$cr),
        ]);
    }
    public matchInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_1> {
        return this.matchLoad8Instruction($$dpth + 1, $$cr);
    }
    public matchInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_2> {
        return this.matchLoad16Instruction($$dpth + 1, $$cr);
    }
    public matchInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_3> {
        return this.matchExchangeInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_4> {
        return this.matchBlockInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_5> {
        return this.matchArithmeticLogic8Instruction($$dpth + 1, $$cr);
    }
    public matchInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_6> {
        return this.matchIncrementDecrement8Instruction($$dpth + 1, $$cr);
    }
    public matchInstruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_7> {
        return this.matchGeneralPurposeArithmeticInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_8> {
        return this.matchArithmeticLogic16Instruction($$dpth + 1, $$cr);
    }
    public matchInstruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_9> {
        return this.matchRotateShiftInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_10> {
        return this.matchBitManipulationInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_11> {
        return this.matchJumpInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_12($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_12> {
        return this.matchCallInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_13($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_13> {
        return this.matchReturnInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_14($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_14> {
        return this.matchInputInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_15($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_15> {
        return this.matchOutputInstruction($$dpth + 1, $$cr);
    }
    public matchInstruction_16($$dpth: number, $$cr?: ErrorTracker): Nullable<Instruction_16> {
        return this.matchCpuControlGroupInstruction($$dpth + 1, $$cr);
    }
    public matchLoad8Instruction($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction> {
        return this.choice<Load8Instruction>([
            () => this.matchLoad8Instruction_1($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_2($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_3($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_4($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_5($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_6($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_7($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_8($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_9($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_10($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_11($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_12($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_13($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_14($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_15($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_16($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_17($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_18($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_19($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_20($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_21($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad8Instruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_1> {
        return this.run<Load8Instruction_1>($$dpth,
            () => {
                let $scope$r0: Nullable<Reg8>;
                let $scope$r1: Nullable<Reg8>;
                let $$res: Nullable<Load8Instruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r0 = this.matchReg8($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r1 = this.matchReg8($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_1($scope$r0, $scope$r1);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_2> {
        return this.run<Load8Instruction_2>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<Load8Instruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_2($scope$r);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_3> {
        return this.run<Load8Instruction_3>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $scope$s: Nullable<Load8Instruction_$0>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchLoad8Instruction_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_3($scope$r, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_4> {
        return this.run<Load8Instruction_4>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $scope$s: Nullable<Load8Instruction_$1>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchLoad8Instruction_$1($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_4($scope$r, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_5> {
        return this.run<Load8Instruction_5>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<Load8Instruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_5($scope$r);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_6> {
        return this.run<Load8Instruction_6>($$dpth,
            () => {
                let $scope$s: Nullable<Load8Instruction_$2>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $scope$r: Nullable<r>;
                let $$res: Nullable<Load8Instruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchLoad8Instruction_$2($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_6($scope$s, $scope$pos, $scope$d, $scope$r);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_7> {
        return this.run<Load8Instruction_7>($$dpth,
            () => {
                let $scope$s: Nullable<Load8Instruction_$3>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $scope$r: Nullable<r>;
                let $$res: Nullable<Load8Instruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchLoad8Instruction_$3($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_7($scope$s, $scope$pos, $scope$d, $scope$r);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_8> {
        return this.run<Load8Instruction_8>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_8($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_9> {
        return this.run<Load8Instruction_9>($$dpth,
            () => {
                let $scope$s: Nullable<Load8Instruction_$4>;
                let $scope$pos0: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $scope$pos1: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchLoad8Instruction_$4($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos0 = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos1 = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_9($scope$s, $scope$pos0, $scope$d, $scope$pos1, $scope$n);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_10> {
        return this.run<Load8Instruction_10>($$dpth,
            () => {
                let $scope$s: Nullable<Load8Instruction_$5>;
                let $scope$pos0: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $scope$pos1: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchLoad8Instruction_$5($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos0 = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos1 = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_10($scope$s, $scope$pos0, $scope$d, $scope$pos1, $scope$n);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_11> {
        return this.run<Load8Instruction_11>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:bc)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_11();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_12($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_12> {
        return this.run<Load8Instruction_12>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_12> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:de)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_12();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_13($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_13> {
        return this.run<Load8Instruction_13>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_13> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_13($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_14($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_14> {
        return this.run<Load8Instruction_14>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_14> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:bc)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_14();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_15($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_15> {
        return this.run<Load8Instruction_15>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_15> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:de)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_15();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_16($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_16> {
        return this.run<Load8Instruction_16>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_16> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_16($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_17($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_17> {
        return this.run<Load8Instruction_17>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_17> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:i)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_17();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_18($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_18> {
        return this.run<Load8Instruction_18>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_18> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:r)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_18();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_19($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_19> {
        return this.run<Load8Instruction_19>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_19> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:i)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_19();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_20($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_20> {
        return this.run<Load8Instruction_20>($$dpth,
            () => {
                let $$res: Nullable<Load8Instruction_20> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:r)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_20();
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_21($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_21> {
        return this.run<Load8Instruction_21>($$dpth,
            () => {
                let $scope$r: Nullable<Reg8>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<Load8Instruction_21> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchReg8($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load8Instruction_21($scope$r, $scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchLoad8Instruction_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$0> {
        return this.choice<Load8Instruction_$0>([
            () => this.matchLoad8Instruction_$0_1($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad8Instruction_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$0_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$0_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$1> {
        return this.choice<Load8Instruction_$1>([
            () => this.matchLoad8Instruction_$1_1($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_$1_2($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad8Instruction_$1_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$1_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$1_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$1_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$2> {
        return this.choice<Load8Instruction_$2>([
            () => this.matchLoad8Instruction_$2_1($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_$2_2($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad8Instruction_$2_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$2_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$2_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$2_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$3($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$3> {
        return this.choice<Load8Instruction_$3>([
            () => this.matchLoad8Instruction_$3_1($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_$3_2($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad8Instruction_$3_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$3_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$3_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$3_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$4($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$4> {
        return this.choice<Load8Instruction_$4>([
            () => this.matchLoad8Instruction_$4_1($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_$4_2($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad8Instruction_$4_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$4_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$4_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$4_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$5($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$5> {
        return this.choice<Load8Instruction_$5>([
            () => this.matchLoad8Instruction_$5_1($$dpth + 1, $$cr),
            () => this.matchLoad8Instruction_$5_2($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad8Instruction_$5_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$5_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchLoad8Instruction_$5_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load8Instruction_$5_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchLoad16Instruction($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction> {
        return this.choice<Load16Instruction>([
            () => this.matchLoad16Instruction_1($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_2($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_3($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_4($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_5($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_6($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_7($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_8($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_9($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_10($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_11($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_12($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_13($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_14($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_15($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_16($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_17($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_18($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_19($$dpth + 1, $$cr),
            () => this.matchLoad16Instruction_20($$dpth + 1, $$cr),
        ]);
    }
    public matchLoad16Instruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_1> {
        return this.run<Load16Instruction_1>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_1($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_2> {
        return this.run<Load16Instruction_2>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_2($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_3> {
        return this.run<Load16Instruction_3>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_3($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_4> {
        return this.run<Load16Instruction_4>($$dpth,
            () => {
                let $scope$dd: Nullable<dd>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$dd = this.matchdd($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_4($scope$dd, $scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_5> {
        return this.run<Load16Instruction_5>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_5($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_6> {
        return this.run<Load16Instruction_6>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_6($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_7> {
        return this.run<Load16Instruction_7>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_7($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_8> {
        return this.run<Load16Instruction_8>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $scope$dd: Nullable<dd>;
                let $$res: Nullable<Load16Instruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$dd = this.matchdd($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_8($scope$pos, $scope$ee, $scope$dd);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_9> {
        return this.run<Load16Instruction_9>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_9($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_10> {
        return this.run<Load16Instruction_10>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_10($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_11> {
        return this.run<Load16Instruction_11>($$dpth,
            () => {
                let $$res: Nullable<Load16Instruction_11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_11();
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_12($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_12> {
        return this.run<Load16Instruction_12>($$dpth,
            () => {
                let $$res: Nullable<Load16Instruction_12> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_12();
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_13($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_13> {
        return this.run<Load16Instruction_13>($$dpth,
            () => {
                let $$res: Nullable<Load16Instruction_13> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_13();
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_14($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_14> {
        return this.run<Load16Instruction_14>($$dpth,
            () => {
                let $scope$dd: Nullable<dd>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<Load16Instruction_14> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ld)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$dd = this.matchdd($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_14($scope$dd, $scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_15($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_15> {
        return this.run<Load16Instruction_15>($$dpth,
            () => {
                let $scope$qq: Nullable<qq>;
                let $$res: Nullable<Load16Instruction_15> = null;
                if (true
                    && this.regexAccept(String.raw`(?:push)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$qq = this.matchqq($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_15($scope$qq);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_16($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_16> {
        return this.run<Load16Instruction_16>($$dpth,
            () => {
                let $$res: Nullable<Load16Instruction_16> = null;
                if (true
                    && this.regexAccept(String.raw`(?:push)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_16();
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_17($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_17> {
        return this.run<Load16Instruction_17>($$dpth,
            () => {
                let $$res: Nullable<Load16Instruction_17> = null;
                if (true
                    && this.regexAccept(String.raw`(?:push)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_17();
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_18($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_18> {
        return this.run<Load16Instruction_18>($$dpth,
            () => {
                let $scope$qq: Nullable<qq>;
                let $$res: Nullable<Load16Instruction_18> = null;
                if (true
                    && this.regexAccept(String.raw`(?:pop)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$qq = this.matchqq($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_18($scope$qq);
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_19($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_19> {
        return this.run<Load16Instruction_19>($$dpth,
            () => {
                let $$res: Nullable<Load16Instruction_19> = null;
                if (true
                    && this.regexAccept(String.raw`(?:pop)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_19();
                }
                return $$res;
            });
    }
    public matchLoad16Instruction_20($$dpth: number, $$cr?: ErrorTracker): Nullable<Load16Instruction_20> {
        return this.run<Load16Instruction_20>($$dpth,
            () => {
                let $$res: Nullable<Load16Instruction_20> = null;
                if (true
                    && this.regexAccept(String.raw`(?:pop)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Load16Instruction_20();
                }
                return $$res;
            });
    }
    public matchExchangeInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<ExchangeInstruction> {
        return this.choice<ExchangeInstruction>([
            () => this.matchExchangeInstruction_1($$dpth + 1, $$cr),
            () => this.matchExchangeInstruction_2($$dpth + 1, $$cr),
            () => this.matchExchangeInstruction_3($$dpth + 1, $$cr),
            () => this.matchExchangeInstruction_4($$dpth + 1, $$cr),
            () => this.matchExchangeInstruction_5($$dpth + 1, $$cr),
            () => this.matchExchangeInstruction_6($$dpth + 1, $$cr),
        ]);
    }
    public matchExchangeInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ExchangeInstruction_1> {
        return this.run<ExchangeInstruction_1>($$dpth,
            () => {
                let $$res: Nullable<ExchangeInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ex)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:de)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ExchangeInstruction_1();
                }
                return $$res;
            });
    }
    public matchExchangeInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ExchangeInstruction_2> {
        return this.run<ExchangeInstruction_2>($$dpth,
            () => {
                let $$res: Nullable<ExchangeInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ex)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:af)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:af\')`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ExchangeInstruction_2();
                }
                return $$res;
            });
    }
    public matchExchangeInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ExchangeInstruction_3> {
        return this.run<ExchangeInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<ExchangeInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:exx)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ExchangeInstruction_3();
                }
                return $$res;
            });
    }
    public matchExchangeInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ExchangeInstruction_4> {
        return this.run<ExchangeInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<ExchangeInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ex)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ExchangeInstruction_4();
                }
                return $$res;
            });
    }
    public matchExchangeInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<ExchangeInstruction_5> {
        return this.run<ExchangeInstruction_5>($$dpth,
            () => {
                let $$res: Nullable<ExchangeInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ex)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ExchangeInstruction_5();
                }
                return $$res;
            });
    }
    public matchExchangeInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<ExchangeInstruction_6> {
        return this.run<ExchangeInstruction_6>($$dpth,
            () => {
                let $$res: Nullable<ExchangeInstruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ex)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:sp)`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ExchangeInstruction_6();
                }
                return $$res;
            });
    }
    public matchBlockInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction> {
        return this.choice<BlockInstruction>([
            () => this.matchBlockInstruction_1($$dpth + 1, $$cr),
            () => this.matchBlockInstruction_2($$dpth + 1, $$cr),
            () => this.matchBlockInstruction_3($$dpth + 1, $$cr),
            () => this.matchBlockInstruction_4($$dpth + 1, $$cr),
            () => this.matchBlockInstruction_5($$dpth + 1, $$cr),
            () => this.matchBlockInstruction_6($$dpth + 1, $$cr),
            () => this.matchBlockInstruction_7($$dpth + 1, $$cr),
            () => this.matchBlockInstruction_8($$dpth + 1, $$cr),
        ]);
    }
    public matchBlockInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_1> {
        return this.run<BlockInstruction_1>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ldir)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_1();
                }
                return $$res;
            });
    }
    public matchBlockInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_2> {
        return this.run<BlockInstruction_2>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ldi)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_2();
                }
                return $$res;
            });
    }
    public matchBlockInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_3> {
        return this.run<BlockInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:lddr)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_3();
                }
                return $$res;
            });
    }
    public matchBlockInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_4> {
        return this.run<BlockInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ldd)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_4();
                }
                return $$res;
            });
    }
    public matchBlockInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_5> {
        return this.run<BlockInstruction_5>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cpir)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_5();
                }
                return $$res;
            });
    }
    public matchBlockInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_6> {
        return this.run<BlockInstruction_6>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cpi)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_6();
                }
                return $$res;
            });
    }
    public matchBlockInstruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_7> {
        return this.run<BlockInstruction_7>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cpdr)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_7();
                }
                return $$res;
            });
    }
    public matchBlockInstruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockInstruction_8> {
        return this.run<BlockInstruction_8>($$dpth,
            () => {
                let $$res: Nullable<BlockInstruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cpd)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BlockInstruction_8();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction> {
        return this.choice<ArithmeticLogic8Instruction>([
            () => this.matchArithmeticLogic8Instruction_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_2($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_3($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_4($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_5($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_6($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_7($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_8($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_9($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_10($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_11($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_12($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_13($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_14($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_15($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_16($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_17($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_18($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_19($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_20($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_21($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_22($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_23($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_24($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_25($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_26($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_27($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_28($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_29($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_30($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_31($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_32($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_33($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_34($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_35($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_36($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_37($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_38($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_39($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_40($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_1> {
        return this.run<ArithmeticLogic8Instruction_1>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$0($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_1($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_2> {
        return this.run<ArithmeticLogic8Instruction_2>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$1($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_2($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_3> {
        return this.run<ArithmeticLogic8Instruction_3>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$2($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_3();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_4> {
        return this.run<ArithmeticLogic8Instruction_4>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$4>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$3($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$4($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_4($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_5> {
        return this.run<ArithmeticLogic8Instruction_5>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$6>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$5($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$6($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_5($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_6> {
        return this.run<ArithmeticLogic8Instruction_6>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:adc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$7($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_6($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_7> {
        return this.run<ArithmeticLogic8Instruction_7>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:adc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$8($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_7($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_8> {
        return this.run<ArithmeticLogic8Instruction_8>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:adc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$9($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_8();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_9> {
        return this.run<ArithmeticLogic8Instruction_9>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$11>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:adc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$10($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$11($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_9($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_10> {
        return this.run<ArithmeticLogic8Instruction_10>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$13>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:adc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$12($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$13($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_10($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_11> {
        return this.run<ArithmeticLogic8Instruction_11>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sub)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$14($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_11($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_12($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_12> {
        return this.run<ArithmeticLogic8Instruction_12>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_12> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sub)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$15($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_12($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_13($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_13> {
        return this.run<ArithmeticLogic8Instruction_13>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_13> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sub)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$16($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_13();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_14($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_14> {
        return this.run<ArithmeticLogic8Instruction_14>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$18>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_14> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sub)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$17($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$18($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_14($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_15($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_15> {
        return this.run<ArithmeticLogic8Instruction_15>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$20>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_15> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sub)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$19($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$20($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_15($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_16($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_16> {
        return this.run<ArithmeticLogic8Instruction_16>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_16> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sbc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$21($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_16($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_17($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_17> {
        return this.run<ArithmeticLogic8Instruction_17>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_17> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sbc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$22($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_17($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_18($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_18> {
        return this.run<ArithmeticLogic8Instruction_18>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_18> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sbc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$23($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_18();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_19($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_19> {
        return this.run<ArithmeticLogic8Instruction_19>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$25>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_19> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sbc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$24($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$25($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_19($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_20($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_20> {
        return this.run<ArithmeticLogic8Instruction_20>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$27>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_20> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sbc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$26($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$27($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_20($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_21($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_21> {
        return this.run<ArithmeticLogic8Instruction_21>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_21> = null;
                if (true
                    && this.regexAccept(String.raw`(?:and)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$28($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_21($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_22($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_22> {
        return this.run<ArithmeticLogic8Instruction_22>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_22> = null;
                if (true
                    && this.regexAccept(String.raw`(?:and)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$29($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_22($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_23($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_23> {
        return this.run<ArithmeticLogic8Instruction_23>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_23> = null;
                if (true
                    && this.regexAccept(String.raw`(?:and)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$30($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_23();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_24($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_24> {
        return this.run<ArithmeticLogic8Instruction_24>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$32>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_24> = null;
                if (true
                    && this.regexAccept(String.raw`(?:and)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$31($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$32($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_24($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_25($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_25> {
        return this.run<ArithmeticLogic8Instruction_25>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$34>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_25> = null;
                if (true
                    && this.regexAccept(String.raw`(?:and)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$33($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$34($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_25($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_26($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_26> {
        return this.run<ArithmeticLogic8Instruction_26>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_26> = null;
                if (true
                    && this.regexAccept(String.raw`(?:or)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$35($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_26($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_27($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_27> {
        return this.run<ArithmeticLogic8Instruction_27>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_27> = null;
                if (true
                    && this.regexAccept(String.raw`(?:or)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$36($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_27($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_28($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_28> {
        return this.run<ArithmeticLogic8Instruction_28>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_28> = null;
                if (true
                    && this.regexAccept(String.raw`(?:or)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$37($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_28();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_29($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_29> {
        return this.run<ArithmeticLogic8Instruction_29>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$39>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_29> = null;
                if (true
                    && this.regexAccept(String.raw`(?:or)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$38($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$39($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_29($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_30($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_30> {
        return this.run<ArithmeticLogic8Instruction_30>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$41>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_30> = null;
                if (true
                    && this.regexAccept(String.raw`(?:or)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$40($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$41($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_30($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_31($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_31> {
        return this.run<ArithmeticLogic8Instruction_31>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_31> = null;
                if (true
                    && this.regexAccept(String.raw`(?:xor)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$42($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_31($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_32($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_32> {
        return this.run<ArithmeticLogic8Instruction_32>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_32> = null;
                if (true
                    && this.regexAccept(String.raw`(?:xor)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$43($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_32($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_33($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_33> {
        return this.run<ArithmeticLogic8Instruction_33>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_33> = null;
                if (true
                    && this.regexAccept(String.raw`(?:xor)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$44($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_33();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_34($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_34> {
        return this.run<ArithmeticLogic8Instruction_34>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$46>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_34> = null;
                if (true
                    && this.regexAccept(String.raw`(?:xor)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$45($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$46($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_34($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_35($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_35> {
        return this.run<ArithmeticLogic8Instruction_35>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$48>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_35> = null;
                if (true
                    && this.regexAccept(String.raw`(?:xor)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$47($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$48($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_35($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_36($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_36> {
        return this.run<ArithmeticLogic8Instruction_36>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<ArithmeticLogic8Instruction_36> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$49($$dpth + 1, $$cr)) || true)
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_36($scope$r);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_37($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_37> {
        return this.run<ArithmeticLogic8Instruction_37>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_37> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$50($$dpth + 1, $$cr)) || true)
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_37($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_38($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_38> {
        return this.run<ArithmeticLogic8Instruction_38>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_38> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$51($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_38();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_39($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_39> {
        return this.run<ArithmeticLogic8Instruction_39>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$53>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_39> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$52($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$53($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_39($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_40($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_40> {
        return this.run<ArithmeticLogic8Instruction_40>($$dpth,
            () => {
                let $scope$s: Nullable<ArithmeticLogic8Instruction_$55>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<ArithmeticLogic8Instruction_40> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ((this.matchArithmeticLogic8Instruction_$54($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchArithmeticLogic8Instruction_$55($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic8Instruction_40($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$0> {
        return this.run<ArithmeticLogic8Instruction_$0>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$0> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$0, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$1> {
        return this.run<ArithmeticLogic8Instruction_$1>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$1, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$2> {
        return this.run<ArithmeticLogic8Instruction_$2>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$2, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$3($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$3> {
        return this.run<ArithmeticLogic8Instruction_$3>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$3, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$4($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$4> {
        return this.choice<ArithmeticLogic8Instruction_$4>([
            () => this.matchArithmeticLogic8Instruction_$4_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$4_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$4_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$4_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$4_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$4_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$5($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$5> {
        return this.run<ArithmeticLogic8Instruction_$5>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$5, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$6($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$6> {
        return this.choice<ArithmeticLogic8Instruction_$6>([
            () => this.matchArithmeticLogic8Instruction_$6_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$6_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$6_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$6_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$6_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$6_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$7($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$7> {
        return this.run<ArithmeticLogic8Instruction_$7>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$7, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$8($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$8> {
        return this.run<ArithmeticLogic8Instruction_$8>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$8, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$9($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$9> {
        return this.run<ArithmeticLogic8Instruction_$9>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$9, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$10($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$10> {
        return this.run<ArithmeticLogic8Instruction_$10>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$10, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$11($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$11> {
        return this.choice<ArithmeticLogic8Instruction_$11>([
            () => this.matchArithmeticLogic8Instruction_$11_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$11_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$11_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$11_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$11_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$11_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$12($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$12> {
        return this.run<ArithmeticLogic8Instruction_$12>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$12> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$12, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$13($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$13> {
        return this.choice<ArithmeticLogic8Instruction_$13>([
            () => this.matchArithmeticLogic8Instruction_$13_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$13_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$13_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$13_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$13_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$13_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$14($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$14> {
        return this.run<ArithmeticLogic8Instruction_$14>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$14> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$14, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$15($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$15> {
        return this.run<ArithmeticLogic8Instruction_$15>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$15> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$15, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$16($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$16> {
        return this.run<ArithmeticLogic8Instruction_$16>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$16> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$16, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$17($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$17> {
        return this.run<ArithmeticLogic8Instruction_$17>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$17> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$17, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$18($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$18> {
        return this.choice<ArithmeticLogic8Instruction_$18>([
            () => this.matchArithmeticLogic8Instruction_$18_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$18_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$18_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$18_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$18_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$18_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$19($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$19> {
        return this.run<ArithmeticLogic8Instruction_$19>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$19> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$19, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$20($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$20> {
        return this.choice<ArithmeticLogic8Instruction_$20>([
            () => this.matchArithmeticLogic8Instruction_$20_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$20_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$20_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$20_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$20_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$20_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$21($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$21> {
        return this.run<ArithmeticLogic8Instruction_$21>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$21> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$21, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$22($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$22> {
        return this.run<ArithmeticLogic8Instruction_$22>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$22> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$22, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$23($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$23> {
        return this.run<ArithmeticLogic8Instruction_$23>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$23> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$23, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$24($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$24> {
        return this.run<ArithmeticLogic8Instruction_$24>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$24> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$24, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$25($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$25> {
        return this.choice<ArithmeticLogic8Instruction_$25>([
            () => this.matchArithmeticLogic8Instruction_$25_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$25_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$25_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$25_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$25_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$25_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$26($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$26> {
        return this.run<ArithmeticLogic8Instruction_$26>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$26> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$26, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$27($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$27> {
        return this.choice<ArithmeticLogic8Instruction_$27>([
            () => this.matchArithmeticLogic8Instruction_$27_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$27_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$27_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$27_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$27_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$27_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$28($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$28> {
        return this.run<ArithmeticLogic8Instruction_$28>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$28> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$28, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$29($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$29> {
        return this.run<ArithmeticLogic8Instruction_$29>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$29> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$29, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$30($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$30> {
        return this.run<ArithmeticLogic8Instruction_$30>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$30> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$30, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$31($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$31> {
        return this.run<ArithmeticLogic8Instruction_$31>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$31> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$31, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$32($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$32> {
        return this.choice<ArithmeticLogic8Instruction_$32>([
            () => this.matchArithmeticLogic8Instruction_$32_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$32_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$32_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$32_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$32_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$32_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$33($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$33> {
        return this.run<ArithmeticLogic8Instruction_$33>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$33> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$33, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$34($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$34> {
        return this.choice<ArithmeticLogic8Instruction_$34>([
            () => this.matchArithmeticLogic8Instruction_$34_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$34_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$34_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$34_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$34_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$34_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$35($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$35> {
        return this.run<ArithmeticLogic8Instruction_$35>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$35> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$35, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$36($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$36> {
        return this.run<ArithmeticLogic8Instruction_$36>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$36> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$36, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$37($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$37> {
        return this.run<ArithmeticLogic8Instruction_$37>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$37> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$37, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$38($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$38> {
        return this.run<ArithmeticLogic8Instruction_$38>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$38> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$38, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$39($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$39> {
        return this.choice<ArithmeticLogic8Instruction_$39>([
            () => this.matchArithmeticLogic8Instruction_$39_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$39_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$39_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$39_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$39_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$39_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$40($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$40> {
        return this.run<ArithmeticLogic8Instruction_$40>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$40> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$40, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$41($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$41> {
        return this.choice<ArithmeticLogic8Instruction_$41>([
            () => this.matchArithmeticLogic8Instruction_$41_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$41_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$41_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$41_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$41_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$41_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$42($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$42> {
        return this.run<ArithmeticLogic8Instruction_$42>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$42> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$42, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$43($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$43> {
        return this.run<ArithmeticLogic8Instruction_$43>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$43> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$43, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$44($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$44> {
        return this.run<ArithmeticLogic8Instruction_$44>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$44> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$44, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$45($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$45> {
        return this.run<ArithmeticLogic8Instruction_$45>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$45> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$45, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$46($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$46> {
        return this.choice<ArithmeticLogic8Instruction_$46>([
            () => this.matchArithmeticLogic8Instruction_$46_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$46_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$46_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$46_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$46_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$46_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$47($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$47> {
        return this.run<ArithmeticLogic8Instruction_$47>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$47> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$47, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$48($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$48> {
        return this.choice<ArithmeticLogic8Instruction_$48>([
            () => this.matchArithmeticLogic8Instruction_$48_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$48_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$48_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$48_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$48_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$48_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$49($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$49> {
        return this.run<ArithmeticLogic8Instruction_$49>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$49> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$49, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$50($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$50> {
        return this.run<ArithmeticLogic8Instruction_$50>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$50> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$50, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$51($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$51> {
        return this.run<ArithmeticLogic8Instruction_$51>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$51> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$51, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$52($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$52> {
        return this.run<ArithmeticLogic8Instruction_$52>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$52> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$52, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$53($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$53> {
        return this.choice<ArithmeticLogic8Instruction_$53>([
            () => this.matchArithmeticLogic8Instruction_$53_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$53_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$53_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$53_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$53_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$53_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$54($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$54> {
        return this.run<ArithmeticLogic8Instruction_$54>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic8Instruction_$54> = null;
                if (true
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.ArithmeticLogic8Instruction_$54, };
                }
                return $$res;
            });
    }
    public matchArithmeticLogic8Instruction_$55($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$55> {
        return this.choice<ArithmeticLogic8Instruction_$55>([
            () => this.matchArithmeticLogic8Instruction_$55_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic8Instruction_$55_2($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic8Instruction_$55_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$55_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchArithmeticLogic8Instruction_$55_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic8Instruction_$55_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction> {
        return this.choice<IncrementDecrement8Instruction>([
            () => this.matchIncrementDecrement8Instruction_1($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_2($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_3($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_4($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_5($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_6($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_7($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_8($$dpth + 1, $$cr),
        ]);
    }
    public matchIncrementDecrement8Instruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_1> {
        return this.run<IncrementDecrement8Instruction_1>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<IncrementDecrement8Instruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_1($scope$r);
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_2> {
        return this.run<IncrementDecrement8Instruction_2>($$dpth,
            () => {
                let $$res: Nullable<IncrementDecrement8Instruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_2();
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_3> {
        return this.run<IncrementDecrement8Instruction_3>($$dpth,
            () => {
                let $scope$s: Nullable<IncrementDecrement8Instruction_$0>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<IncrementDecrement8Instruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchIncrementDecrement8Instruction_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_3($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_4> {
        return this.run<IncrementDecrement8Instruction_4>($$dpth,
            () => {
                let $scope$s: Nullable<IncrementDecrement8Instruction_$1>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<IncrementDecrement8Instruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchIncrementDecrement8Instruction_$1($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_4($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_5> {
        return this.run<IncrementDecrement8Instruction_5>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<IncrementDecrement8Instruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dec)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_5($scope$r);
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_6> {
        return this.run<IncrementDecrement8Instruction_6>($$dpth,
            () => {
                let $$res: Nullable<IncrementDecrement8Instruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dec)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_6();
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_7> {
        return this.run<IncrementDecrement8Instruction_7>($$dpth,
            () => {
                let $scope$s: Nullable<IncrementDecrement8Instruction_$2>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<IncrementDecrement8Instruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dec)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchIncrementDecrement8Instruction_$2($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_7($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_8> {
        return this.run<IncrementDecrement8Instruction_8>($$dpth,
            () => {
                let $scope$s: Nullable<IncrementDecrement8Instruction_$3>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<IncrementDecrement8Instruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dec)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchIncrementDecrement8Instruction_$3($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncrementDecrement8Instruction_8($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchIncrementDecrement8Instruction_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$0> {
        return this.choice<IncrementDecrement8Instruction_$0>([
            () => this.matchIncrementDecrement8Instruction_$0_1($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchIncrementDecrement8Instruction_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$0_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$0_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$1> {
        return this.choice<IncrementDecrement8Instruction_$1>([
            () => this.matchIncrementDecrement8Instruction_$1_1($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_$1_2($$dpth + 1, $$cr),
        ]);
    }
    public matchIncrementDecrement8Instruction_$1_1($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$1_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction_$1_2($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$1_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction_$2($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$2> {
        return this.choice<IncrementDecrement8Instruction_$2>([
            () => this.matchIncrementDecrement8Instruction_$2_1($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_$2_2($$dpth + 1, $$cr),
        ]);
    }
    public matchIncrementDecrement8Instruction_$2_1($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$2_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction_$2_2($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$2_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction_$3($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$3> {
        return this.choice<IncrementDecrement8Instruction_$3>([
            () => this.matchIncrementDecrement8Instruction_$3_1($$dpth + 1, $$cr),
            () => this.matchIncrementDecrement8Instruction_$3_2($$dpth + 1, $$cr),
        ]);
    }
    public matchIncrementDecrement8Instruction_$3_1($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$3_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchIncrementDecrement8Instruction_$3_2($$dpth: number, $$cr?: ErrorTracker): Nullable<IncrementDecrement8Instruction_$3_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchGeneralPurposeArithmeticInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<GeneralPurposeArithmeticInstruction> {
        return this.choice<GeneralPurposeArithmeticInstruction>([
            () => this.matchGeneralPurposeArithmeticInstruction_1($$dpth + 1, $$cr),
            () => this.matchGeneralPurposeArithmeticInstruction_2($$dpth + 1, $$cr),
            () => this.matchGeneralPurposeArithmeticInstruction_3($$dpth + 1, $$cr),
            () => this.matchGeneralPurposeArithmeticInstruction_4($$dpth + 1, $$cr),
            () => this.matchGeneralPurposeArithmeticInstruction_5($$dpth + 1, $$cr),
        ]);
    }
    public matchGeneralPurposeArithmeticInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<GeneralPurposeArithmeticInstruction_1> {
        return this.run<GeneralPurposeArithmeticInstruction_1>($$dpth,
            () => {
                let $$res: Nullable<GeneralPurposeArithmeticInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:daa)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new GeneralPurposeArithmeticInstruction_1();
                }
                return $$res;
            });
    }
    public matchGeneralPurposeArithmeticInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<GeneralPurposeArithmeticInstruction_2> {
        return this.run<GeneralPurposeArithmeticInstruction_2>($$dpth,
            () => {
                let $$res: Nullable<GeneralPurposeArithmeticInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:cpl)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new GeneralPurposeArithmeticInstruction_2();
                }
                return $$res;
            });
    }
    public matchGeneralPurposeArithmeticInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<GeneralPurposeArithmeticInstruction_3> {
        return this.run<GeneralPurposeArithmeticInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<GeneralPurposeArithmeticInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:neg)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new GeneralPurposeArithmeticInstruction_3();
                }
                return $$res;
            });
    }
    public matchGeneralPurposeArithmeticInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<GeneralPurposeArithmeticInstruction_4> {
        return this.run<GeneralPurposeArithmeticInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<GeneralPurposeArithmeticInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ccf)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new GeneralPurposeArithmeticInstruction_4();
                }
                return $$res;
            });
    }
    public matchGeneralPurposeArithmeticInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<GeneralPurposeArithmeticInstruction_5> {
        return this.run<GeneralPurposeArithmeticInstruction_5>($$dpth,
            () => {
                let $$res: Nullable<GeneralPurposeArithmeticInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:scf)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new GeneralPurposeArithmeticInstruction_5();
                }
                return $$res;
            });
    }
    public matchCpuControlGroupInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<CpuControlGroupInstruction> {
        return this.choice<CpuControlGroupInstruction>([
            () => this.matchCpuControlGroupInstruction_1($$dpth + 1, $$cr),
            () => this.matchCpuControlGroupInstruction_2($$dpth + 1, $$cr),
            () => this.matchCpuControlGroupInstruction_3($$dpth + 1, $$cr),
            () => this.matchCpuControlGroupInstruction_4($$dpth + 1, $$cr),
            () => this.matchCpuControlGroupInstruction_5($$dpth + 1, $$cr),
        ]);
    }
    public matchCpuControlGroupInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<CpuControlGroupInstruction_1> {
        return this.run<CpuControlGroupInstruction_1>($$dpth,
            () => {
                let $$res: Nullable<CpuControlGroupInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:nop)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new CpuControlGroupInstruction_1();
                }
                return $$res;
            });
    }
    public matchCpuControlGroupInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<CpuControlGroupInstruction_2> {
        return this.run<CpuControlGroupInstruction_2>($$dpth,
            () => {
                let $$res: Nullable<CpuControlGroupInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:halt)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new CpuControlGroupInstruction_2();
                }
                return $$res;
            });
    }
    public matchCpuControlGroupInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<CpuControlGroupInstruction_3> {
        return this.run<CpuControlGroupInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<CpuControlGroupInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:di)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new CpuControlGroupInstruction_3();
                }
                return $$res;
            });
    }
    public matchCpuControlGroupInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<CpuControlGroupInstruction_4> {
        return this.run<CpuControlGroupInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<CpuControlGroupInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ei)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new CpuControlGroupInstruction_4();
                }
                return $$res;
            });
    }
    public matchCpuControlGroupInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<CpuControlGroupInstruction_5> {
        return this.run<CpuControlGroupInstruction_5>($$dpth,
            () => {
                let $scope$m: Nullable<string>;
                let $$res: Nullable<CpuControlGroupInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:im)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$m = this.regexAccept(String.raw`(?:[012])`, $$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new CpuControlGroupInstruction_5($scope$m);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction> {
        return this.choice<ArithmeticLogic16Instruction>([
            () => this.matchArithmeticLogic16Instruction_1($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_2($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_3($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_4($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_5($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_6($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_7($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_8($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_9($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_10($$dpth + 1, $$cr),
            () => this.matchArithmeticLogic16Instruction_11($$dpth + 1, $$cr),
        ]);
    }
    public matchArithmeticLogic16Instruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_1> {
        return this.run<ArithmeticLogic16Instruction_1>($$dpth,
            () => {
                let $scope$ss: Nullable<ss>;
                let $$res: Nullable<ArithmeticLogic16Instruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$ss = this.matchss($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_1($scope$ss);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_2> {
        return this.run<ArithmeticLogic16Instruction_2>($$dpth,
            () => {
                let $scope$ss: Nullable<ss>;
                let $$res: Nullable<ArithmeticLogic16Instruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:adc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$ss = this.matchss($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_2($scope$ss);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_3> {
        return this.run<ArithmeticLogic16Instruction_3>($$dpth,
            () => {
                let $scope$ss: Nullable<ss>;
                let $$res: Nullable<ArithmeticLogic16Instruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sbc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$ss = this.matchss($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_3($scope$ss);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_4> {
        return this.run<ArithmeticLogic16Instruction_4>($$dpth,
            () => {
                let $scope$pp: Nullable<pp>;
                let $$res: Nullable<ArithmeticLogic16Instruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pp = this.matchpp($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_4($scope$pp);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_5> {
        return this.run<ArithmeticLogic16Instruction_5>($$dpth,
            () => {
                let $scope$rr: Nullable<rr>;
                let $$res: Nullable<ArithmeticLogic16Instruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:add)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$rr = this.matchrr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_5($scope$rr);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_6> {
        return this.run<ArithmeticLogic16Instruction_6>($$dpth,
            () => {
                let $scope$ss: Nullable<ss>;
                let $$res: Nullable<ArithmeticLogic16Instruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$ss = this.matchss($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_6($scope$ss);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_7> {
        return this.run<ArithmeticLogic16Instruction_7>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic16Instruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_7();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_8> {
        return this.run<ArithmeticLogic16Instruction_8>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic16Instruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_8();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_9> {
        return this.run<ArithmeticLogic16Instruction_9>($$dpth,
            () => {
                let $scope$ss: Nullable<ss>;
                let $$res: Nullable<ArithmeticLogic16Instruction_9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dec)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$ss = this.matchss($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_9($scope$ss);
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_10> {
        return this.run<ArithmeticLogic16Instruction_10>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic16Instruction_10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dec)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_10();
                }
                return $$res;
            });
    }
    public matchArithmeticLogic16Instruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<ArithmeticLogic16Instruction_11> {
        return this.run<ArithmeticLogic16Instruction_11>($$dpth,
            () => {
                let $$res: Nullable<ArithmeticLogic16Instruction_11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dec)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ArithmeticLogic16Instruction_11();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction> {
        return this.choice<RotateShiftInstruction>([
            () => this.matchRotateShiftInstruction_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_2($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_3($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_4($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_5($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_6($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_7($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_8($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_9($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_10($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_11($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_12($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_13($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_14($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_15($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_16($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_17($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_18($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_19($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_20($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_21($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_22($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_23($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_24($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_25($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_26($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_27($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_28($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_29($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_30($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_31($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_32($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_33($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_34($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_1> {
        return this.run<RotateShiftInstruction_1>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rlca)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_1();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_2> {
        return this.run<RotateShiftInstruction_2>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rla)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_2();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_3> {
        return this.run<RotateShiftInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rrca)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_3();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_4> {
        return this.run<RotateShiftInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rra)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_4();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_5> {
        return this.run<RotateShiftInstruction_5>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<RotateShiftInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rlc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_5($scope$r);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_6> {
        return this.run<RotateShiftInstruction_6>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rlc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_6();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_7> {
        return this.run<RotateShiftInstruction_7>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$0>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rlc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_7($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_8> {
        return this.run<RotateShiftInstruction_8>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$1>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rlc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$1($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_8($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_9> {
        return this.run<RotateShiftInstruction_9>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<RotateShiftInstruction_9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_9($scope$r);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_10> {
        return this.run<RotateShiftInstruction_10>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_10();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_11> {
        return this.run<RotateShiftInstruction_11>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$2>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$2($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_11($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_12($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_12> {
        return this.run<RotateShiftInstruction_12>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$3>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_12> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$3($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_12($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_13($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_13> {
        return this.run<RotateShiftInstruction_13>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<RotateShiftInstruction_13> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rrc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_13($scope$r);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_14($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_14> {
        return this.run<RotateShiftInstruction_14>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_14> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rrc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_14();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_15($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_15> {
        return this.run<RotateShiftInstruction_15>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$4>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_15> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rrc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$4($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_15($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_16($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_16> {
        return this.run<RotateShiftInstruction_16>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$5>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_16> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rrc)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$5($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_16($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_17($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_17> {
        return this.run<RotateShiftInstruction_17>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<RotateShiftInstruction_17> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_17($scope$r);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_18($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_18> {
        return this.run<RotateShiftInstruction_18>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_18> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_18();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_19($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_19> {
        return this.run<RotateShiftInstruction_19>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$6>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_19> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$6($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_19($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_20($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_20> {
        return this.run<RotateShiftInstruction_20>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$7>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_20> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$7($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_20($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_21($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_21> {
        return this.run<RotateShiftInstruction_21>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<RotateShiftInstruction_21> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sla)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_21($scope$r);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_22($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_22> {
        return this.run<RotateShiftInstruction_22>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_22> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sla)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_22();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_23($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_23> {
        return this.run<RotateShiftInstruction_23>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$8>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_23> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sla)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$8($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_23($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_24($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_24> {
        return this.run<RotateShiftInstruction_24>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$9>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_24> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sla)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$9($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_24($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_25($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_25> {
        return this.run<RotateShiftInstruction_25>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<RotateShiftInstruction_25> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sra)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_25($scope$r);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_26($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_26> {
        return this.run<RotateShiftInstruction_26>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_26> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sra)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_26();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_27($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_27> {
        return this.run<RotateShiftInstruction_27>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$10>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_27> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sra)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$10($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_27($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_28($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_28> {
        return this.run<RotateShiftInstruction_28>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$11>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_28> = null;
                if (true
                    && this.regexAccept(String.raw`(?:sra)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$11($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_28($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_29($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_29> {
        return this.run<RotateShiftInstruction_29>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<RotateShiftInstruction_29> = null;
                if (true
                    && this.regexAccept(String.raw`(?:srl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_29($scope$r);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_30($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_30> {
        return this.run<RotateShiftInstruction_30>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_30> = null;
                if (true
                    && this.regexAccept(String.raw`(?:srl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_30();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_31($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_31> {
        return this.run<RotateShiftInstruction_31>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$12>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_31> = null;
                if (true
                    && this.regexAccept(String.raw`(?:srl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$12($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_31($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_32($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_32> {
        return this.run<RotateShiftInstruction_32>($$dpth,
            () => {
                let $scope$s: Nullable<RotateShiftInstruction_$13>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<RotateShiftInstruction_32> = null;
                if (true
                    && this.regexAccept(String.raw`(?:srl)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchRotateShiftInstruction_$13($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_32($scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_33($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_33> {
        return this.run<RotateShiftInstruction_33>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_33> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rld)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_33();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_34($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_34> {
        return this.run<RotateShiftInstruction_34>($$dpth,
            () => {
                let $$res: Nullable<RotateShiftInstruction_34> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rrd)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new RotateShiftInstruction_34();
                }
                return $$res;
            });
    }
    public matchRotateShiftInstruction_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$0> {
        return this.choice<RotateShiftInstruction_$0>([
            () => this.matchRotateShiftInstruction_$0_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$0_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$0_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$1> {
        return this.choice<RotateShiftInstruction_$1>([
            () => this.matchRotateShiftInstruction_$1_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$1_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$1_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$1_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$1_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$1_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$2> {
        return this.choice<RotateShiftInstruction_$2>([
            () => this.matchRotateShiftInstruction_$2_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$2_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$2_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$2_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$2_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$2_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$3($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$3> {
        return this.choice<RotateShiftInstruction_$3>([
            () => this.matchRotateShiftInstruction_$3_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$3_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$3_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$3_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$3_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$3_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$4($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$4> {
        return this.choice<RotateShiftInstruction_$4>([
            () => this.matchRotateShiftInstruction_$4_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$4_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$4_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$4_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$4_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$4_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$5($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$5> {
        return this.choice<RotateShiftInstruction_$5>([
            () => this.matchRotateShiftInstruction_$5_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$5_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$5_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$5_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$5_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$5_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$6($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$6> {
        return this.choice<RotateShiftInstruction_$6>([
            () => this.matchRotateShiftInstruction_$6_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$6_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$6_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$6_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$6_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$6_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$7($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$7> {
        return this.choice<RotateShiftInstruction_$7>([
            () => this.matchRotateShiftInstruction_$7_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$7_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$7_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$7_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$7_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$7_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$8($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$8> {
        return this.choice<RotateShiftInstruction_$8>([
            () => this.matchRotateShiftInstruction_$8_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$8_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$8_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$8_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$8_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$8_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$9($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$9> {
        return this.choice<RotateShiftInstruction_$9>([
            () => this.matchRotateShiftInstruction_$9_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$9_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$9_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$9_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$9_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$9_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$10($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$10> {
        return this.choice<RotateShiftInstruction_$10>([
            () => this.matchRotateShiftInstruction_$10_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$10_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$10_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$10_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$10_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$10_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$11($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$11> {
        return this.choice<RotateShiftInstruction_$11>([
            () => this.matchRotateShiftInstruction_$11_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$11_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$11_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$11_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$11_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$11_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$12($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$12> {
        return this.choice<RotateShiftInstruction_$12>([
            () => this.matchRotateShiftInstruction_$12_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$12_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$12_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$12_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$12_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$12_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$13($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$13> {
        return this.choice<RotateShiftInstruction_$13>([
            () => this.matchRotateShiftInstruction_$13_1($$dpth + 1, $$cr),
            () => this.matchRotateShiftInstruction_$13_2($$dpth + 1, $$cr),
        ]);
    }
    public matchRotateShiftInstruction_$13_1($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$13_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchRotateShiftInstruction_$13_2($$dpth: number, $$cr?: ErrorTracker): Nullable<RotateShiftInstruction_$13_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction> {
        return this.choice<BitManipulationInstruction>([
            () => this.matchBitManipulationInstruction_1($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_2($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_3($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_4($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_5($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_6($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_7($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_8($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_9($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_10($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_11($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_12($$dpth + 1, $$cr),
        ]);
    }
    public matchBitManipulationInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_1> {
        return this.run<BitManipulationInstruction_1>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$r: Nullable<r>;
                let $$res: Nullable<BitManipulationInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:bit)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_1($scope$b, $scope$r);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_2> {
        return this.run<BitManipulationInstruction_2>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $$res: Nullable<BitManipulationInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:bit)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_2($scope$b);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_3> {
        return this.run<BitManipulationInstruction_3>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$s: Nullable<BitManipulationInstruction_$0>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<BitManipulationInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:bit)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchBitManipulationInstruction_$0($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_3($scope$b, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_4> {
        return this.run<BitManipulationInstruction_4>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$s: Nullable<BitManipulationInstruction_$1>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<BitManipulationInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:bit)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchBitManipulationInstruction_$1($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_4($scope$b, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_5> {
        return this.run<BitManipulationInstruction_5>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$r: Nullable<r>;
                let $$res: Nullable<BitManipulationInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:set)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_5($scope$b, $scope$r);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_6> {
        return this.run<BitManipulationInstruction_6>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $$res: Nullable<BitManipulationInstruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:set)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_6($scope$b);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_7> {
        return this.run<BitManipulationInstruction_7>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$s: Nullable<BitManipulationInstruction_$2>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<BitManipulationInstruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:set)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchBitManipulationInstruction_$2($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_7($scope$b, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_8> {
        return this.run<BitManipulationInstruction_8>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$s: Nullable<BitManipulationInstruction_$3>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<BitManipulationInstruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:set)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchBitManipulationInstruction_$3($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_8($scope$b, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_9> {
        return this.run<BitManipulationInstruction_9>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$r: Nullable<r>;
                let $$res: Nullable<BitManipulationInstruction_9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:res)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_9($scope$b, $scope$r);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_10> {
        return this.run<BitManipulationInstruction_10>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $$res: Nullable<BitManipulationInstruction_10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:res)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_10($scope$b);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_11> {
        return this.run<BitManipulationInstruction_11>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$s: Nullable<BitManipulationInstruction_$4>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<BitManipulationInstruction_11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:res)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchBitManipulationInstruction_$4($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_11($scope$b, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_12($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_12> {
        return this.run<BitManipulationInstruction_12>($$dpth,
            () => {
                let $scope$b: Nullable<b>;
                let $scope$s: Nullable<BitManipulationInstruction_$5>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$d: Nullable<Expression>;
                let $$res: Nullable<BitManipulationInstruction_12> = null;
                if (true
                    && this.regexAccept(String.raw`(?:res)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$b = this.matchb($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$s = this.matchBitManipulationInstruction_$5($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$d = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new BitManipulationInstruction_12($scope$b, $scope$s, $scope$pos, $scope$d);
                }
                return $$res;
            });
    }
    public matchBitManipulationInstruction_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$0> {
        return this.choice<BitManipulationInstruction_$0>([
            () => this.matchBitManipulationInstruction_$0_1($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchBitManipulationInstruction_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$0_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$0_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$1> {
        return this.choice<BitManipulationInstruction_$1>([
            () => this.matchBitManipulationInstruction_$1_1($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_$1_2($$dpth + 1, $$cr),
        ]);
    }
    public matchBitManipulationInstruction_$1_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$1_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$1_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$1_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$2> {
        return this.choice<BitManipulationInstruction_$2>([
            () => this.matchBitManipulationInstruction_$2_1($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_$2_2($$dpth + 1, $$cr),
        ]);
    }
    public matchBitManipulationInstruction_$2_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$2_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$2_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$2_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$3($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$3> {
        return this.choice<BitManipulationInstruction_$3>([
            () => this.matchBitManipulationInstruction_$3_1($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_$3_2($$dpth + 1, $$cr),
        ]);
    }
    public matchBitManipulationInstruction_$3_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$3_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$3_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$3_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$4($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$4> {
        return this.choice<BitManipulationInstruction_$4>([
            () => this.matchBitManipulationInstruction_$4_1($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_$4_2($$dpth + 1, $$cr),
        ]);
    }
    public matchBitManipulationInstruction_$4_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$4_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$4_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$4_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$5($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$5> {
        return this.choice<BitManipulationInstruction_$5>([
            () => this.matchBitManipulationInstruction_$5_1($$dpth + 1, $$cr),
            () => this.matchBitManipulationInstruction_$5_2($$dpth + 1, $$cr),
        ]);
    }
    public matchBitManipulationInstruction_$5_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$5_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchBitManipulationInstruction_$5_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BitManipulationInstruction_$5_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchOffset($$dpth: number, $$cr?: ErrorTracker): Nullable<Offset> {
        return this.choice<Offset>([
            () => this.matchOffset_1($$dpth + 1, $$cr),
            () => this.matchOffset_2($$dpth + 1, $$cr),
        ]);
    }
    public matchOffset_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Offset_1> {
        return this.run<Offset_1>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$label: Nullable<Label>;
                let $$res: Nullable<Offset_1> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$label = this.matchLabel($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Offset_1($scope$pos, $scope$label);
                }
                return $$res;
            });
    }
    public matchOffset_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Offset_2> {
        return this.run<Offset_2>($$dpth,
            () => {
                let $scope$e: Nullable<Expression>;
                let $$res: Nullable<Offset_2> = null;
                if (true
                    && ($scope$e = this.matchExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new Offset_2($scope$e);
                }
                return $$res;
            });
    }
    public matchJumpInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction> {
        return this.choice<JumpInstruction>([
            () => this.matchJumpInstruction_1($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_2($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_3($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_4($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_5($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_6($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_7($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_8($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_9($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_10($$dpth + 1, $$cr),
            () => this.matchJumpInstruction_11($$dpth + 1, $$cr),
        ]);
    }
    public matchJumpInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_1> {
        return this.run<JumpInstruction_1>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<JumpInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_1($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchJumpInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_2> {
        return this.run<JumpInstruction_2>($$dpth,
            () => {
                let $scope$cc: Nullable<cc>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<JumpInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$cc = this.matchcc($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_2($scope$cc, $scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchJumpInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_3> {
        return this.run<JumpInstruction_3>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$label: Nullable<Label>;
                let $$res: Nullable<JumpInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$label = this.matchLabel($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_3($scope$pos, $scope$label);
                }
                return $$res;
            });
    }
    public matchJumpInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_4> {
        return this.run<JumpInstruction_4>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$e: Nullable<Expression>;
                let $$res: Nullable<JumpInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$e = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_4($scope$pos, $scope$e);
                }
                return $$res;
            });
    }
    public matchJumpInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_5> {
        return this.run<JumpInstruction_5>($$dpth,
            () => {
                let $scope$jj: Nullable<jj>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$label: Nullable<Label>;
                let $$res: Nullable<JumpInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$jj = this.matchjj($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$label = this.matchLabel($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_5($scope$jj, $scope$pos, $scope$label);
                }
                return $$res;
            });
    }
    public matchJumpInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_6> {
        return this.run<JumpInstruction_6>($$dpth,
            () => {
                let $scope$jj: Nullable<jj>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$e: Nullable<Expression>;
                let $$res: Nullable<JumpInstruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jr)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$jj = this.matchjj($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$e = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_6($scope$jj, $scope$pos, $scope$e);
                }
                return $$res;
            });
    }
    public matchJumpInstruction_7($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_7> {
        return this.run<JumpInstruction_7>($$dpth,
            () => {
                let $$res: Nullable<JumpInstruction_7> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:hl)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_7();
                }
                return $$res;
            });
    }
    public matchJumpInstruction_8($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_8> {
        return this.run<JumpInstruction_8>($$dpth,
            () => {
                let $$res: Nullable<JumpInstruction_8> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:ix)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_8();
                }
                return $$res;
            });
    }
    public matchJumpInstruction_9($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_9> {
        return this.run<JumpInstruction_9>($$dpth,
            () => {
                let $$res: Nullable<JumpInstruction_9> = null;
                if (true
                    && this.regexAccept(String.raw`(?:jp)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:iy)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_9();
                }
                return $$res;
            });
    }
    public matchJumpInstruction_10($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_10> {
        return this.run<JumpInstruction_10>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$label: Nullable<Label>;
                let $$res: Nullable<JumpInstruction_10> = null;
                if (true
                    && this.regexAccept(String.raw`(?:djnz)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$label = this.matchLabel($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_10($scope$pos, $scope$label);
                }
                return $$res;
            });
    }
    public matchJumpInstruction_11($$dpth: number, $$cr?: ErrorTracker): Nullable<JumpInstruction_11> {
        return this.run<JumpInstruction_11>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$e: Nullable<Expression>;
                let $$res: Nullable<JumpInstruction_11> = null;
                if (true
                    && this.regexAccept(String.raw`(?:djnz)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$e = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new JumpInstruction_11($scope$pos, $scope$e);
                }
                return $$res;
            });
    }
    public matchCallInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<CallInstruction> {
        return this.choice<CallInstruction>([
            () => this.matchCallInstruction_1($$dpth + 1, $$cr),
            () => this.matchCallInstruction_2($$dpth + 1, $$cr),
        ]);
    }
    public matchCallInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<CallInstruction_1> {
        return this.run<CallInstruction_1>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<CallInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:call)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new CallInstruction_1($scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchCallInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<CallInstruction_2> {
        return this.run<CallInstruction_2>($$dpth,
            () => {
                let $scope$cc: Nullable<cc>;
                let $scope$pos: Nullable<PosInfo>;
                let $scope$ee: Nullable<Expression>;
                let $$res: Nullable<CallInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:call)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$cc = this.matchcc($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$ee = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new CallInstruction_2($scope$cc, $scope$pos, $scope$ee);
                }
                return $$res;
            });
    }
    public matchReturnInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<ReturnInstruction> {
        return this.choice<ReturnInstruction>([
            () => this.matchReturnInstruction_1($$dpth + 1, $$cr),
            () => this.matchReturnInstruction_2($$dpth + 1, $$cr),
            () => this.matchReturnInstruction_3($$dpth + 1, $$cr),
            () => this.matchReturnInstruction_4($$dpth + 1, $$cr),
            () => this.matchReturnInstruction_5($$dpth + 1, $$cr),
        ]);
    }
    public matchReturnInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ReturnInstruction_1> {
        return this.run<ReturnInstruction_1>($$dpth,
            () => {
                let $$res: Nullable<ReturnInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ret)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ReturnInstruction_1();
                }
                return $$res;
            });
    }
    public matchReturnInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ReturnInstruction_2> {
        return this.run<ReturnInstruction_2>($$dpth,
            () => {
                let $scope$cc: Nullable<cc>;
                let $$res: Nullable<ReturnInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ret)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$cc = this.matchcc($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ReturnInstruction_2($scope$cc);
                }
                return $$res;
            });
    }
    public matchReturnInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ReturnInstruction_3> {
        return this.run<ReturnInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<ReturnInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:reti)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ReturnInstruction_3();
                }
                return $$res;
            });
    }
    public matchReturnInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ReturnInstruction_4> {
        return this.run<ReturnInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<ReturnInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:retn)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ReturnInstruction_4();
                }
                return $$res;
            });
    }
    public matchReturnInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<ReturnInstruction_5> {
        return this.run<ReturnInstruction_5>($$dpth,
            () => {
                let $scope$p: Nullable<p>;
                let $$res: Nullable<ReturnInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:rst)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$p = this.matchp($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ReturnInstruction_5($scope$p);
                }
                return $$res;
            });
    }
    public matchInputInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<InputInstruction> {
        return this.choice<InputInstruction>([
            () => this.matchInputInstruction_1($$dpth + 1, $$cr),
            () => this.matchInputInstruction_2($$dpth + 1, $$cr),
            () => this.matchInputInstruction_3($$dpth + 1, $$cr),
            () => this.matchInputInstruction_4($$dpth + 1, $$cr),
            () => this.matchInputInstruction_5($$dpth + 1, $$cr),
            () => this.matchInputInstruction_6($$dpth + 1, $$cr),
        ]);
    }
    public matchInputInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<InputInstruction_1> {
        return this.run<InputInstruction_1>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<InputInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:in)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:c)`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new InputInstruction_1($scope$r);
                }
                return $$res;
            });
    }
    public matchInputInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<InputInstruction_2> {
        return this.run<InputInstruction_2>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<InputInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:in)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new InputInstruction_2($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchInputInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<InputInstruction_3> {
        return this.run<InputInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<InputInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ini)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new InputInstruction_3();
                }
                return $$res;
            });
    }
    public matchInputInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<InputInstruction_4> {
        return this.run<InputInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<InputInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:inir)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new InputInstruction_4();
                }
                return $$res;
            });
    }
    public matchInputInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<InputInstruction_5> {
        return this.run<InputInstruction_5>($$dpth,
            () => {
                let $$res: Nullable<InputInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:ind)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new InputInstruction_5();
                }
                return $$res;
            });
    }
    public matchInputInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<InputInstruction_6> {
        return this.run<InputInstruction_6>($$dpth,
            () => {
                let $$res: Nullable<InputInstruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:indr)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new InputInstruction_6();
                }
                return $$res;
            });
    }
    public matchOutputInstruction($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputInstruction> {
        return this.choice<OutputInstruction>([
            () => this.matchOutputInstruction_1($$dpth + 1, $$cr),
            () => this.matchOutputInstruction_2($$dpth + 1, $$cr),
            () => this.matchOutputInstruction_3($$dpth + 1, $$cr),
            () => this.matchOutputInstruction_4($$dpth + 1, $$cr),
            () => this.matchOutputInstruction_5($$dpth + 1, $$cr),
            () => this.matchOutputInstruction_6($$dpth + 1, $$cr),
        ]);
    }
    public matchOutputInstruction_1($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputInstruction_1> {
        return this.run<OutputInstruction_1>($$dpth,
            () => {
                let $scope$r: Nullable<r>;
                let $$res: Nullable<OutputInstruction_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:out)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:c)`, $$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$r = this.matchr($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OutputInstruction_1($scope$r);
                }
                return $$res;
            });
    }
    public matchOutputInstruction_2($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputInstruction_2> {
        return this.run<OutputInstruction_2>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$n: Nullable<Expression>;
                let $$res: Nullable<OutputInstruction_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:out)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$n = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OutputInstruction_2($scope$pos, $scope$n);
                }
                return $$res;
            });
    }
    public matchOutputInstruction_3($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputInstruction_3> {
        return this.run<OutputInstruction_3>($$dpth,
            () => {
                let $$res: Nullable<OutputInstruction_3> = null;
                if (true
                    && this.regexAccept(String.raw`(?:outi)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OutputInstruction_3();
                }
                return $$res;
            });
    }
    public matchOutputInstruction_4($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputInstruction_4> {
        return this.run<OutputInstruction_4>($$dpth,
            () => {
                let $$res: Nullable<OutputInstruction_4> = null;
                if (true
                    && this.regexAccept(String.raw`(?:otir)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OutputInstruction_4();
                }
                return $$res;
            });
    }
    public matchOutputInstruction_5($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputInstruction_5> {
        return this.run<OutputInstruction_5>($$dpth,
            () => {
                let $$res: Nullable<OutputInstruction_5> = null;
                if (true
                    && this.regexAccept(String.raw`(?:outd)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OutputInstruction_5();
                }
                return $$res;
            });
    }
    public matchOutputInstruction_6($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputInstruction_6> {
        return this.run<OutputInstruction_6>($$dpth,
            () => {
                let $$res: Nullable<OutputInstruction_6> = null;
                if (true
                    && this.regexAccept(String.raw`(?:otdr)`, $$dpth + 1, $$cr) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OutputInstruction_6();
                }
                return $$res;
            });
    }
    public matchByteDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteDirective> {
        return this.choice<ByteDirective>([
            () => this.matchByteDirective_1($$dpth + 1, $$cr),
            () => this.matchByteDirective_2($$dpth + 1, $$cr),
            () => this.matchByteDirective_3($$dpth + 1, $$cr),
            () => this.matchByteDirective_4($$dpth + 1, $$cr),
            () => this.matchByteDirective_5($$dpth + 1, $$cr),
        ]);
    }
    public matchByteDirective_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteDirective_1> {
        return this.regexAccept(String.raw`(?:db)`, $$dpth + 1, $$cr);
    }
    public matchByteDirective_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteDirective_2> {
        return this.regexAccept(String.raw`(?:dm)`, $$dpth + 1, $$cr);
    }
    public matchByteDirective_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteDirective_3> {
        return this.regexAccept(String.raw`(?:byte)`, $$dpth + 1, $$cr);
    }
    public matchByteDirective_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteDirective_4> {
        return this.regexAccept(String.raw`(?:defb)`, $$dpth + 1, $$cr);
    }
    public matchByteDirective_5($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteDirective_5> {
        return this.regexAccept(String.raw`(?:defm)`, $$dpth + 1, $$cr);
    }
    public matchWordDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<WordDirective> {
        return this.choice<WordDirective>([
            () => this.matchWordDirective_1($$dpth + 1, $$cr),
            () => this.matchWordDirective_2($$dpth + 1, $$cr),
            () => this.matchWordDirective_3($$dpth + 1, $$cr),
        ]);
    }
    public matchWordDirective_1($$dpth: number, $$cr?: ErrorTracker): Nullable<WordDirective_1> {
        return this.regexAccept(String.raw`(?:dw)`, $$dpth + 1, $$cr);
    }
    public matchWordDirective_2($$dpth: number, $$cr?: ErrorTracker): Nullable<WordDirective_2> {
        return this.regexAccept(String.raw`(?:word)`, $$dpth + 1, $$cr);
    }
    public matchWordDirective_3($$dpth: number, $$cr?: ErrorTracker): Nullable<WordDirective_3> {
        return this.regexAccept(String.raw`(?:defw)`, $$dpth + 1, $$cr);
    }
    public matchBlockDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockDirective> {
        return this.choice<BlockDirective>([
            () => this.matchBlockDirective_1($$dpth + 1, $$cr),
            () => this.matchBlockDirective_2($$dpth + 1, $$cr),
            () => this.matchBlockDirective_3($$dpth + 1, $$cr),
        ]);
    }
    public matchBlockDirective_1($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockDirective_1> {
        return this.regexAccept(String.raw`(?:block)`, $$dpth + 1, $$cr);
    }
    public matchBlockDirective_2($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockDirective_2> {
        return this.regexAccept(String.raw`(?:defs)`, $$dpth + 1, $$cr);
    }
    public matchBlockDirective_3($$dpth: number, $$cr?: ErrorTracker): Nullable<BlockDirective_3> {
        return this.regexAccept(String.raw`(?:ds)`, $$dpth + 1, $$cr);
    }
    public matchByteValue($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteValue> {
        return this.choice<ByteValue>([
            () => this.matchByteValue_1($$dpth + 1, $$cr),
            () => this.matchByteValue_2($$dpth + 1, $$cr),
            () => this.matchByteValue_3($$dpth + 1, $$cr),
            () => this.matchByteValue_4($$dpth + 1, $$cr),
        ]);
    }
    public matchByteValue_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteValue_1> {
        return this.run<ByteValue_1>($$dpth,
            () => {
                let $scope$c: Nullable<Char>;
                let $$res: Nullable<ByteValue_1> = null;
                if (true
                    && ($scope$c = this.matchChar($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ByteValue_1($scope$c);
                }
                return $$res;
            });
    }
    public matchByteValue_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteValue_2> {
        return this.run<ByteValue_2>($$dpth,
            () => {
                let $scope$s: Nullable<Str>;
                let $$res: Nullable<ByteValue_2> = null;
                if (true
                    && ($scope$s = this.matchStr($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ByteValue_2($scope$s);
                }
                return $$res;
            });
    }
    public matchByteValue_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteValue_3> {
        return this.run<ByteValue_3>($$dpth,
            () => {
                let $scope$s: Nullable<ZX81Str>;
                let $$res: Nullable<ByteValue_3> = null;
                if (true
                    && ($scope$s = this.matchZX81Str($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ByteValue_3($scope$s);
                }
                return $$res;
            });
    }
    public matchByteValue_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ByteValue_4> {
        return this.run<ByteValue_4>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$e: Nullable<Expression>;
                let $$res: Nullable<ByteValue_4> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$e = this.matchExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new ByteValue_4($scope$pos, $scope$e);
                }
                return $$res;
            });
    }
    public matchWordValue($$dpth: number, $$cr?: ErrorTracker): Nullable<WordValue> {
        return this.run<WordValue>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$e: Nullable<Expression>;
                let $$res: Nullable<WordValue> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$e = this.matchExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new WordValue($scope$pos, $scope$e);
                }
                return $$res;
            });
    }
    public matchDataDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective> {
        return this.choice<DataDirective>([
            () => this.matchDataDirective_1($$dpth + 1, $$cr),
            () => this.matchDataDirective_2($$dpth + 1, $$cr),
            () => this.matchDataDirective_3($$dpth + 1, $$cr),
            () => this.matchDataDirective_4($$dpth + 1, $$cr),
        ]);
    }
    public matchDataDirective_1($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_1> {
        return this.run<DataDirective_1>($$dpth,
            () => {
                let $scope$pos0: Nullable<PosInfo>;
                let $scope$data0: Nullable<ByteValue>;
                let $scope$data: Nullable<DataDirective_$0[]>;
                let $$res: Nullable<DataDirective_1> = null;
                if (true
                    && this.matchByteDirective($$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos0 = this.mark()) !== null
                    && ($scope$data0 = this.matchByteValue($$dpth + 1, $$cr)) !== null
                    && ($scope$data = this.loop<DataDirective_$0>(() => this.matchDataDirective_$0($$dpth + 1, $$cr), true)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new DataDirective_1($scope$pos0, $scope$data0, $scope$data);
                }
                return $$res;
            });
    }
    public matchDataDirective_2($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_2> {
        return this.run<DataDirective_2>($$dpth,
            () => {
                let $scope$pos0: Nullable<PosInfo>;
                let $scope$data0: Nullable<ByteValue>;
                let $scope$data: Nullable<DataDirective_$1[]>;
                let $$res: Nullable<DataDirective_2> = null;
                if (true
                    && this.regexAccept(String.raw`(?:dz)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos0 = this.mark()) !== null
                    && ($scope$data0 = this.matchByteValue($$dpth + 1, $$cr)) !== null
                    && ($scope$data = this.loop<DataDirective_$1>(() => this.matchDataDirective_$1($$dpth + 1, $$cr), true)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new DataDirective_2($scope$pos0, $scope$data0, $scope$data);
                }
                return $$res;
            });
    }
    public matchDataDirective_3($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_3> {
        return this.run<DataDirective_3>($$dpth,
            () => {
                let $scope$pos0: Nullable<PosInfo>;
                let $scope$data0: Nullable<WordValue>;
                let $scope$data: Nullable<DataDirective_$2[]>;
                let $$res: Nullable<DataDirective_3> = null;
                if (true
                    && this.matchWordDirective($$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$pos0 = this.mark()) !== null
                    && ($scope$data0 = this.matchWordValue($$dpth + 1, $$cr)) !== null
                    && ($scope$data = this.loop<DataDirective_$2>(() => this.matchDataDirective_$2($$dpth + 1, $$cr), true)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new DataDirective_3($scope$pos0, $scope$data0, $scope$data);
                }
                return $$res;
            });
    }
    public matchDataDirective_4($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_4> {
        return this.run<DataDirective_4>($$dpth,
            () => {
                let $scope$pos0: Nullable<PosInfo>;
                let $scope$nn: Nullable<Expression>;
                let $scope$data: Nullable<Nullable<DataDirective_$3>>;
                let $$res: Nullable<DataDirective_4> = null;
                if (true
                    && this.matchBlockDirective($$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && this.mark() !== null
                    && ($scope$pos0 = this.mark()) !== null
                    && ($scope$nn = this.matchExpression($$dpth + 1, $$cr)) !== null
                    && (($scope$data = this.matchDataDirective_$3($$dpth + 1, $$cr)) || true)
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new DataDirective_4($scope$pos0, $scope$nn, $scope$data);
                }
                return $$res;
            });
    }
    public matchDataDirective_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_$0> {
        return this.run<DataDirective_$0>($$dpth,
            () => {
                let $scope$inner: Nullable<ByteValue>;
                let $$res: Nullable<DataDirective_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$inner = this.matchByteValue($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.DataDirective_$0, inner: $scope$inner};
                }
                return $$res;
            });
    }
    public matchDataDirective_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_$1> {
        return this.run<DataDirective_$1>($$dpth,
            () => {
                let $scope$inner: Nullable<ByteValue>;
                let $$res: Nullable<DataDirective_$1> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$inner = this.matchByteValue($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.DataDirective_$1, inner: $scope$inner};
                }
                return $$res;
            });
    }
    public matchDataDirective_$2($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_$2> {
        return this.run<DataDirective_$2>($$dpth,
            () => {
                let $scope$inner: Nullable<WordValue>;
                let $$res: Nullable<DataDirective_$2> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$inner = this.matchWordValue($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.DataDirective_$2, inner: $scope$inner};
                }
                return $$res;
            });
    }
    public matchDataDirective_$3($$dpth: number, $$cr?: ErrorTracker): Nullable<DataDirective_$3> {
        return this.run<DataDirective_$3>($$dpth,
            () => {
                let $scope$pos1: Nullable<PosInfo>;
                let $scope$b: Nullable<Expression>;
                let $$res: Nullable<DataDirective_$3> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && ($scope$pos1 = this.mark()) !== null
                    && ($scope$b = this.matchExpression($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.DataDirective_$3, pos1: $scope$pos1, b: $scope$b};
                }
                return $$res;
            });
    }
    public matchEscapeSequence($$dpth: number, $$cr?: ErrorTracker): Nullable<EscapeSequence> {
        return this.choice<EscapeSequence>([
            () => this.matchEscapeSequence_1($$dpth + 1, $$cr),
            () => this.matchEscapeSequence_2($$dpth + 1, $$cr),
            () => this.matchEscapeSequence_3($$dpth + 1, $$cr),
        ]);
    }
    public matchEscapeSequence_1($$dpth: number, $$cr?: ErrorTracker): Nullable<EscapeSequence_1> {
        return this.matchSimpleEscapeSequence($$dpth + 1, $$cr);
    }
    public matchEscapeSequence_2($$dpth: number, $$cr?: ErrorTracker): Nullable<EscapeSequence_2> {
        return this.matchOctalEscapeSequence($$dpth + 1, $$cr);
    }
    public matchEscapeSequence_3($$dpth: number, $$cr?: ErrorTracker): Nullable<EscapeSequence_3> {
        return this.matchHexadecimalEscapeSequence($$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence> {
        return this.run<SimpleEscapeSequence>($$dpth,
            () => {
                let $scope$raw: Nullable<SimpleEscapeSequence_$0>;
                let $$res: Nullable<SimpleEscapeSequence> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr) !== null
                    && ($scope$raw = this.matchSimpleEscapeSequence_$0($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new SimpleEscapeSequence($scope$raw);
                }
                return $$res;
            });
    }
    public matchSimpleEscapeSequence_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0> {
        return this.choice<SimpleEscapeSequence_$0>([
            () => this.matchSimpleEscapeSequence_$0_1($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_2($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_3($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_4($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_5($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_6($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_7($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_8($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_9($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_10($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_11($$dpth + 1, $$cr),
            () => this.matchSimpleEscapeSequence_$0_12($$dpth + 1, $$cr),
        ]);
    }
    public matchSimpleEscapeSequence_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_1> {
        return this.regexAccept(String.raw`(?:\')`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_2> {
        return this.regexAccept(String.raw`(?:")`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_3> {
        return this.regexAccept(String.raw`(?:\?)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_4($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_4> {
        return this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_5($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_5> {
        return this.regexAccept(String.raw`(?:a)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_6($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_6> {
        return this.regexAccept(String.raw`(?:b)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_7($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_7> {
        return this.regexAccept(String.raw`(?:e)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_8($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_8> {
        return this.regexAccept(String.raw`(?:f)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_9($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_9> {
        return this.regexAccept(String.raw`(?:n)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_10($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_10> {
        return this.regexAccept(String.raw`(?:t)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_11($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_11> {
        return this.regexAccept(String.raw`(?:r)`, $$dpth + 1, $$cr);
    }
    public matchSimpleEscapeSequence_$0_12($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleEscapeSequence_$0_12> {
        return this.regexAccept(String.raw`(?:v)`, $$dpth + 1, $$cr);
    }
    public matchOctalEscapeSequence($$dpth: number, $$cr?: ErrorTracker): Nullable<OctalEscapeSequence> {
        return this.run<OctalEscapeSequence>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<OctalEscapeSequence> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-7]{1,3})`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OctalEscapeSequence($scope$pos, $scope$raw);
                }
                return $$res;
            });
    }
    public matchHexadecimalEscapeSequence($$dpth: number, $$cr?: ErrorTracker): Nullable<HexadecimalEscapeSequence> {
        return this.run<HexadecimalEscapeSequence>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<HexadecimalEscapeSequence> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\\x)`, $$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[0-9a-f]{1,2})`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new HexadecimalEscapeSequence($scope$pos, $scope$raw);
                }
                return $$res;
            });
    }
    public matchSimpleChar($$dpth: number, $$cr?: ErrorTracker): Nullable<SimpleChar> {
        return this.run<SimpleChar>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<SimpleChar> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[^\'\\\n])`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new SimpleChar($scope$pos, $scope$raw);
                }
                return $$res;
            });
    }
    public matchStringChar($$dpth: number, $$cr?: ErrorTracker): Nullable<StringChar> {
        return this.run<StringChar>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<StringChar> = null;
                if (true
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[^\"\\\n])`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new StringChar($scope$pos, $scope$raw);
                }
                return $$res;
            });
    }
    public matchChar($$dpth: number, $$cr?: ErrorTracker): Nullable<Char> {
        return this.run<Char>($$dpth,
            () => {
                let $scope$char: Nullable<Char_$0>;
                let $$res: Nullable<Char> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\')`, $$dpth + 1, $$cr) !== null
                    && ($scope$char = this.matchChar_$0($$dpth + 1, $$cr)) !== null
                    && this.regexAccept(String.raw`(?:\')`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = new Char($scope$char);
                }
                return $$res;
            });
    }
    public matchChar_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<Char_$0> {
        return this.choice<Char_$0>([
            () => this.matchChar_$0_1($$dpth + 1, $$cr),
            () => this.matchChar_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchChar_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Char_$0_1> {
        return this.matchSimpleChar($$dpth + 1, $$cr);
    }
    public matchChar_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Char_$0_2> {
        return this.matchEscapeSequence($$dpth + 1, $$cr);
    }
    public matchStr($$dpth: number, $$cr?: ErrorTracker): Nullable<Str> {
        return this.run<Str>($$dpth,
            () => {
                let $scope$chars: Nullable<Str_$0[]>;
                let $$res: Nullable<Str> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\")`, $$dpth + 1, $$cr) !== null
                    && ($scope$chars = this.loop<Str_$0>(() => this.matchStr_$0($$dpth + 1, $$cr), true)) !== null
                    && this.regexAccept(String.raw`(?:\")`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = new Str($scope$chars);
                }
                return $$res;
            });
    }
    public matchStr_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<Str_$0> {
        return this.choice<Str_$0>([
            () => this.matchStr_$0_1($$dpth + 1, $$cr),
            () => this.matchStr_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchStr_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Str_$0_1> {
        return this.matchStringChar($$dpth + 1, $$cr);
    }
    public matchStr_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Str_$0_2> {
        return this.matchEscapeSequence($$dpth + 1, $$cr);
    }
    public matchZX81Str($$dpth: number, $$cr?: ErrorTracker): Nullable<ZX81Str> {
        return this.run<ZX81Str>($$dpth,
            () => {
                let $scope$pos: Nullable<PosInfo>;
                let $scope$chars: Nullable<string>;
                let $$res: Nullable<ZX81Str> = null;
                if (true
                    && this.regexAccept(String.raw`(?:zx81\")`, $$dpth + 1, $$cr) !== null
                    && ($scope$pos = this.mark()) !== null
                    && ($scope$chars = this.regexAccept(String.raw`(?:[ £\$:\?()><=+\-\*;/,.0-9A-Za-z]*)`, $$dpth + 1, $$cr)) !== null
                    && this.regexAccept(String.raw`(?:\")`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = new ZX81Str($scope$pos, $scope$chars);
                }
                return $$res;
            });
    }
    public matchComment($$dpth: number, $$cr?: ErrorTracker): Nullable<Comment> {
        return this.regexAccept(String.raw`(?:(//|;)[^\r\n]*)`, $$dpth + 1, $$cr);
    }
    public matchOriginDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<OriginDirective> {
        return this.run<OriginDirective>($$dpth,
            () => {
                let $scope$address: Nullable<nn>;
                let $$res: Nullable<OriginDirective> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\.?org)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$address = this.matchnn($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.OriginDirective, address: $scope$address};
                }
                return $$res;
            });
    }
    public matchFilename($$dpth: number, $$cr?: ErrorTracker): Nullable<Filename> {
        return this.choice<Filename>([
            () => this.matchFilename_1($$dpth + 1, $$cr),
            () => this.matchFilename_2($$dpth + 1, $$cr),
        ]);
    }
    public matchFilename_1($$dpth: number, $$cr?: ErrorTracker): Nullable<Filename_1> {
        return this.run<Filename_1>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<Filename_1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:")`, $$dpth + 1, $$cr) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[^"/\\:\*\?<>\|%#\$,]+)`, $$dpth + 1, $$cr)) !== null
                    && this.regexAccept(String.raw`(?:")`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.Filename_1, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchFilename_2($$dpth: number, $$cr?: ErrorTracker): Nullable<Filename_2> {
        return this.run<Filename_2>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<Filename_2> = null;
                if (true
                    && ($scope$raw = this.regexAccept(String.raw`(?:[^ \t\r\n"/\\:\*\?<>\|%#\$,]+)`, $$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.Filename_2, raw: $scope$raw};
                }
                return $$res;
            });
    }
    public matchIncludeDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<IncludeDirective> {
        return this.run<IncludeDirective>($$dpth,
            () => {
                let $scope$name: Nullable<Filename>;
                let $$res: Nullable<IncludeDirective> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\.?include)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$name = this.matchFilename($$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new IncludeDirective($scope$name);
                }
                return $$res;
            });
    }
    public matchOutputDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputDirective> {
        return this.run<OutputDirective>($$dpth,
            () => {
                let $scope$name: Nullable<Filename>;
                let $scope$sld: Nullable<Nullable<OutputDirective_$0>>;
                let $$res: Nullable<OutputDirective> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\.?output)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$name = this.matchFilename($$dpth + 1, $$cr)) !== null
                    && (($scope$sld = this.matchOutputDirective_$0($$dpth + 1, $$cr)) || true)
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new OutputDirective($scope$name, $scope$sld);
                }
                return $$res;
            });
    }
    public matchOutputDirective_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<OutputDirective_$0> {
        return this.run<OutputDirective_$0>($$dpth,
            () => {
                let $$res: Nullable<OutputDirective_$0> = null;
                if (true
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && this.match_($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:sld)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.OutputDirective_$0, };
                }
                return $$res;
            });
    }
    public matchDeviceDirective($$dpth: number, $$cr?: ErrorTracker): Nullable<DeviceDirective> {
        return this.run<DeviceDirective>($$dpth,
            () => {
                let $scope$raw: Nullable<string>;
                let $$res: Nullable<DeviceDirective> = null;
                if (true
                    && this.regexAccept(String.raw`(?:\.?device)`, $$dpth + 1, $$cr) !== null
                    && this.match__($$dpth + 1, $$cr) !== null
                    && ($scope$raw = this.regexAccept(String.raw`(?:[a-zA-Z][0-9a-zA-Z]*)`, $$dpth + 1, $$cr)) !== null
                    && this.noConsume<_eos>(() => this.match_eos($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = new DeviceDirective($scope$raw);
                }
                return $$res;
            });
    }
    public test(): boolean {
        const mrk = this.mark();
        const res = this.matchstart(0);
        const ans = res !== null;
        this.reset(mrk);
        return ans;
    }
    public parse(): ParseResult {
        const mrk = this.mark();
        const res = this.matchstart(0);
        if (res)
            return {ast: res, errs: []};
        this.reset(mrk);
        const rec = new ErrorTracker();
        this.clearMemos();
        this.matchstart(0, rec);
        const err = rec.getErr()
        return {ast: res, errs: err !== null ? [err] : []}
    }
    public mark(): PosInfo {
        return this.pos;
    }
    private loop<T>(func: $$RuleType<T>, star: boolean = false): Nullable<T[]> {
        const mrk = this.mark();
        const res: T[] = [];
        for (;;) {
            const t = func();
            if (t === null) {
                break;
            }
            res.push(t);
        }
        if (star || res.length > 0) {
            return res;
        }
        this.reset(mrk);
        return null;
    }
    private run<T>($$dpth: number, fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn()
        if (res !== null)
            return res;
        this.reset(mrk);
        return null;
    }
    private choice<T>(fns: Array<$$RuleType<T>>): Nullable<T> {
        for (const f of fns) {
            const res = f();
            if (res !== null) {
                return res;
            }
        }
        return null;
    }
    private regexAccept(match: string, dpth: number, cr?: ErrorTracker): Nullable<string> {
        return this.run<string>(dpth,
            () => {
                const reg = new RegExp(match, "yi");
                const mrk = this.mark();
                reg.lastIndex = mrk.overallPos;
                const res = this.tryConsume(reg);
                if(cr) {
                    cr.record(mrk, res, {
                        kind: "RegexMatch",
                        // We substring from 3 to len - 1 to strip off the
                        // non-capture group syntax added as a WebKit workaround
                        literal: match.substring(3, match.length - 1),
                        negated: this.negating,
                    });
                }
                return res;
            });
    }
    private tryConsume(reg: RegExp): Nullable<string> {
        const res = reg.exec(this.input);
        if (res) {
            let lineJmp = 0;
            let lind = -1;
            for (let i = 0; i < res[0].length; ++i) {
                if (res[0][i] === "\n") {
                    ++lineJmp;
                    lind = i;
                }
            }
            this.pos = {
                overallPos: reg.lastIndex,
                line: this.pos.line + lineJmp,
                offset: lind === -1 ? this.pos.offset + res[0].length : (res[0].length - lind - 1)
            };
            return res[0];
        }
        return null;
    }
    private noConsume<T>(fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn();
        this.reset(mrk);
        return res;
    }
    private negate<T>(fn: $$RuleType<T>): Nullable<boolean> {
        const mrk = this.mark();
        const oneg = this.negating;
        this.negating = !oneg;
        const res = fn();
        this.negating = oneg;
        this.reset(mrk);
        return res === null ? true : null;
    }
    private memoise<K>(rule: $$RuleType<K>, memo: Map<number, [Nullable<K>, PosInfo]>): Nullable<K> {
        const $scope$pos = this.mark();
        const $scope$memoRes = memo.get($scope$pos.overallPos);
        if(this.memoSafe && $scope$memoRes !== undefined) {
        this.reset($scope$memoRes[1]);
        return $scope$memoRes[0];
        }
        const $scope$result = rule();
        if(this.memoSafe)
        memo.set($scope$pos.overallPos, [$scope$result, this.mark()]);
        return $scope$result;
    }
    private match$EOF(et?: ErrorTracker): Nullable<{kind: ASTKinds.$EOF}> {
        const res: {kind: ASTKinds.$EOF} | null = this.finished() ? { kind: ASTKinds.$EOF } : null;
        if(et)
            et.record(this.mark(), res, { kind: "EOF", negated: this.negating });
        return res;
    }
}
export function parse(s: string): ParseResult {
    const p = new Parser(s);
    return p.parse();
}
export interface ParseResult {
    ast: Nullable<start>;
    errs: SyntaxErr[];
}
export interface PosInfo {
    readonly overallPos: number;
    readonly line: number;
    readonly offset: number;
}
export interface RegexMatch {
    readonly kind: "RegexMatch";
    readonly negated: boolean;
    readonly literal: string;
}
export type EOFMatch = { kind: "EOF"; negated: boolean };
export type MatchAttempt = RegexMatch | EOFMatch;
export class SyntaxErr {
    public pos: PosInfo;
    public expmatches: MatchAttempt[];
    constructor(pos: PosInfo, expmatches: MatchAttempt[]) {
        this.pos = pos;
        this.expmatches = [...expmatches];
    }
    public toString(): string {
        return `Syntax Error at line ${this.pos.line}:${this.pos.offset}. Expected one of ${this.expmatches.map(x => x.kind === "EOF" ? " EOF" : ` ${x.negated ? 'not ': ''}'${x.literal}'`)}`;
    }
}
class ErrorTracker {
    private mxpos: PosInfo = {overallPos: -1, line: -1, offset: -1};
    private regexset: Set<string> = new Set();
    private pmatches: MatchAttempt[] = [];
    public record(pos: PosInfo, result: any, att: MatchAttempt) {
        if ((result === null) === att.negated)
            return;
        if (pos.overallPos > this.mxpos.overallPos) {
            this.mxpos = pos;
            this.pmatches = [];
            this.regexset.clear()
        }
        if (this.mxpos.overallPos === pos.overallPos) {
            if(att.kind === "RegexMatch") {
                if(!this.regexset.has(att.literal))
                    this.pmatches.push(att);
                this.regexset.add(att.literal);
            } else {
                this.pmatches.push(att);
            }
        }
    }
    public getErr(): SyntaxErr | null {
        if (this.mxpos.overallPos !== -1)
            return new SyntaxErr(this.mxpos, this.pmatches);
        return null;
    }
}